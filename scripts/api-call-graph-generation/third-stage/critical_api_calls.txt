'Landroid/accounts/AccountAuthenticatorActivity;->clearWallpaper'
'Landroid/accounts/AccountAuthenticatorActivity;->removeStickyBroadcast'
'Landroid/accounts/AccountAuthenticatorActivity;->removeStickyBroadcastAsUser'
'Landroid/accounts/AccountAuthenticatorActivity;->setWallpaper'
'Landroid/accounts/AccountAuthenticatorActivity;->setWallpaper'
'Landroid/accounts/AccountAuthenticatorActivity;->stopService'
'Landroid/accounts/AccountAuthenticatorActivity;->unbindService'
'Landroid/app/Activity;-><init>'
'Landroid/app/Activity;->clearWallpaper'
'Landroid/app/Activity;->onCreate'
'Landroid/app/Activity;->removeStickyBroadcast'
'Landroid/app/Activity;->removeStickyBroadcastAsUser'
'Landroid/app/Activity;->setWallpaper'
'Landroid/app/Activity;->setWallpaper'
'Landroid/app/Activity;->stopLockTask'
'Landroid/app/Activity;->stopService'
'Landroid/app/Activity;->unbindService'
'Landroid/app/ActivityGroup;->clearWallpaper'
'Landroid/app/ActivityGroup;->removeStickyBroadcast'
'Landroid/app/ActivityGroup;->removeStickyBroadcastAsUser'
'Landroid/app/ActivityGroup;->setWallpaper'
'Landroid/app/ActivityGroup;->setWallpaper'
'Landroid/app/ActivityGroup;->stopService'
'Landroid/app/ActivityGroup;->unbindService'
'Landroid/app/ActivityManager;->getRecentTasks'
'Landroid/app/ActivityManager;->getRunningAppProcesses'
'Landroid/app/ActivityManager;->getRunningTasks'
'Landroid/app/ActivityManager;->killBackgroundProcesses'
'Landroid/app/ActivityManager;->moveTaskToFront'
'Landroid/app/ActivityManager;->moveTaskToFront'
'Landroid/app/ActivityManager;->restartPackage'
'Landroid/app/AliasActivity;->clearWallpaper'
'Landroid/app/AliasActivity;->removeStickyBroadcast'
'Landroid/app/AliasActivity;->removeStickyBroadcastAsUser'
'Landroid/app/AliasActivity;->setWallpaper'
'Landroid/app/AliasActivity;->setWallpaper'
'Landroid/app/AliasActivity;->stopService'
'Landroid/app/AliasActivity;->unbindService'
'Landroid/app/Application;->clearWallpaper'
'Landroid/app/Application;->removeStickyBroadcast'
'Landroid/app/Application;->removeStickyBroadcastAsUser'
'Landroid/app/Application;->setWallpaper'
'Landroid/app/Application;->setWallpaper'
'Landroid/app/Application;->stopService'
'Landroid/app/Application;->unbindService'
'Landroid/app/ExpandableListActivity;->clearWallpaper'
'Landroid/app/ExpandableListActivity;->removeStickyBroadcast'
'Landroid/app/ExpandableListActivity;->removeStickyBroadcastAsUser'
'Landroid/app/ExpandableListActivity;->setWallpaper'
'Landroid/app/ExpandableListActivity;->setWallpaper'
'Landroid/app/ExpandableListActivity;->stopService'
'Landroid/app/ExpandableListActivity;->unbindService'
'Landroid/app/JobSchedulerImpl;->schedule'
'Landroid/app/KeyguardManager$KeyguardLock;->disableKeyguard'
'Landroid/app/KeyguardManager$KeyguardLock;->reenableKeyguard'
'Landroid/app/KeyguardManager;->exitKeyguardSecurely'
'Landroid/app/ListActivity;->clearWallpaper'
'Landroid/app/ListActivity;->removeStickyBroadcast'
'Landroid/app/ListActivity;->removeStickyBroadcastAsUser'
'Landroid/app/ListActivity;->setWallpaper'
'Landroid/app/ListActivity;->setWallpaper'
'Landroid/app/ListActivity;->stopService'
'Landroid/app/ListActivity;->unbindService'
'Landroid/app/NativeActivity;->clearWallpaper'
'Landroid/app/NativeActivity;->removeStickyBroadcast'
'Landroid/app/NativeActivity;->removeStickyBroadcastAsUser'
'Landroid/app/NativeActivity;->setWallpaper'
'Landroid/app/NativeActivity;->setWallpaper'
'Landroid/app/NativeActivity;->stopService'
'Landroid/app/NativeActivity;->unbindService'
'Landroid/app/Service;->stopSelf'
'Landroid/app/Service;->stopSelf'
'Landroid/app/Service;->stopSelfResult'
'Landroid/app/TabActivity;->clearWallpaper'
'Landroid/app/TabActivity;->removeStickyBroadcast'
'Landroid/app/TabActivity;->removeStickyBroadcastAsUser'
'Landroid/app/TabActivity;->setWallpaper'
'Landroid/app/TabActivity;->setWallpaper'
'Landroid/app/TabActivity;->stopService'
'Landroid/app/TabActivity;->unbindService'
'Landroid/app/WallpaperManager;->clear'
'Landroid/app/WallpaperManager;->clear'
'Landroid/app/WallpaperManager;->setBitmap'
'Landroid/app/WallpaperManager;->setBitmap'
'Landroid/app/WallpaperManager;->setBitmap'
'Landroid/app/WallpaperManager;->setResource'
'Landroid/app/WallpaperManager;->setResource'
'Landroid/app/WallpaperManager;->setStream'
'Landroid/app/WallpaperManager;->setStream'
'Landroid/app/WallpaperManager;->setStream'
'Landroid/app/WallpaperManager;->suggestDesiredDimensions'
'Landroid/app/admin/DevicePolicyManager;->getWifiMacAddress'
'Landroid/app/backup/BackupAgentHelper;->clearWallpaper'
'Landroid/app/backup/BackupAgentHelper;->removeStickyBroadcast'
'Landroid/app/backup/BackupAgentHelper;->removeStickyBroadcastAsUser'
'Landroid/app/backup/BackupAgentHelper;->setWallpaper'
'Landroid/app/backup/BackupAgentHelper;->setWallpaper'
'Landroid/app/backup/BackupAgentHelper;->stopService'
'Landroid/app/backup/BackupAgentHelper;->unbindService'
'Landroid/app/backup/BackupManager;->dataChanged'
'Landroid/app/backup/BackupManager;->dataChanged'
'Landroid/bluetooth/BluetoothA2dp;->getConnectedDevices'
'Landroid/bluetooth/BluetoothA2dp;->getConnectionState'
'Landroid/bluetooth/BluetoothA2dp;->getDevicesMatchingConnectionStates'
'Landroid/bluetooth/BluetoothA2dp;->isA2dpPlaying'
'Landroid/bluetooth/BluetoothAdapter;->cancelDiscovery'
'Landroid/bluetooth/BluetoothAdapter;->closeProfileProxy'
'Landroid/bluetooth/BluetoothAdapter;->disable'
'Landroid/bluetooth/BluetoothAdapter;->enable'
'Landroid/bluetooth/BluetoothAdapter;->getAddress'
'Landroid/bluetooth/BluetoothAdapter;->getBluetoothLeAdvertiser'
'Landroid/bluetooth/BluetoothAdapter;->getBluetoothLeScanner'
'Landroid/bluetooth/BluetoothAdapter;->getBondedDevices'
'Landroid/bluetooth/BluetoothAdapter;->getName'
'Landroid/bluetooth/BluetoothAdapter;->getProfileConnectionState'
'Landroid/bluetooth/BluetoothAdapter;->getProfileProxy'
'Landroid/bluetooth/BluetoothAdapter;->getScanMode'
'Landroid/bluetooth/BluetoothAdapter;->getState'
'Landroid/bluetooth/BluetoothAdapter;->isDiscovering'
'Landroid/bluetooth/BluetoothAdapter;->isEnabled'
'Landroid/bluetooth/BluetoothAdapter;->isMultipleAdvertisementSupported'
'Landroid/bluetooth/BluetoothAdapter;->isOffloadedFilteringSupported'
'Landroid/bluetooth/BluetoothAdapter;->isOffloadedScanBatchingSupported'
'Landroid/bluetooth/BluetoothAdapter;->listenUsingInsecureRfcommWithServiceRecord'
'Landroid/bluetooth/BluetoothAdapter;->listenUsingRfcommWithServiceRecord'
'Landroid/bluetooth/BluetoothAdapter;->setName'
'Landroid/bluetooth/BluetoothAdapter;->startDiscovery'
'Landroid/bluetooth/BluetoothAdapter;->startLeScan'
'Landroid/bluetooth/BluetoothAdapter;->startLeScan'
'Landroid/bluetooth/BluetoothAdapter;->stopLeScan'
'Landroid/bluetooth/BluetoothDevice;->connectGatt'
'Landroid/bluetooth/BluetoothDevice;->connectGatt'
'Landroid/bluetooth/BluetoothDevice;->createBond'
'Landroid/bluetooth/BluetoothDevice;->createInsecureRfcommSocketToServiceRecord'
'Landroid/bluetooth/BluetoothDevice;->createRfcommSocketToServiceRecord'
'Landroid/bluetooth/BluetoothDevice;->fetchUuidsWithSdp'
'Landroid/bluetooth/BluetoothDevice;->getBluetoothClass'
'Landroid/bluetooth/BluetoothDevice;->getBondState'
'Landroid/bluetooth/BluetoothDevice;->getName'
'Landroid/bluetooth/BluetoothDevice;->getType'
'Landroid/bluetooth/BluetoothDevice;->getUuids'
'Landroid/bluetooth/BluetoothDevice;->setPin'
'Landroid/bluetooth/BluetoothGatt;->abortReliableWrite'
'Landroid/bluetooth/BluetoothGatt;->abortReliableWrite'
'Landroid/bluetooth/BluetoothGatt;->beginReliableWrite'
'Landroid/bluetooth/BluetoothGatt;->close'
'Landroid/bluetooth/BluetoothGatt;->connect'
'Landroid/bluetooth/BluetoothGatt;->disconnect'
'Landroid/bluetooth/BluetoothGatt;->discoverServices'
'Landroid/bluetooth/BluetoothGatt;->executeReliableWrite'
'Landroid/bluetooth/BluetoothGatt;->readCharacteristic'
'Landroid/bluetooth/BluetoothGatt;->readDescriptor'
'Landroid/bluetooth/BluetoothGatt;->readRemoteRssi'
'Landroid/bluetooth/BluetoothGatt;->requestConnectionPriority'
'Landroid/bluetooth/BluetoothGatt;->requestMtu'
'Landroid/bluetooth/BluetoothGatt;->setCharacteristicNotification'
'Landroid/bluetooth/BluetoothGatt;->writeCharacteristic'
'Landroid/bluetooth/BluetoothGatt;->writeDescriptor'
'Landroid/bluetooth/BluetoothGattServer;->addService'
'Landroid/bluetooth/BluetoothGattServer;->cancelConnection'
'Landroid/bluetooth/BluetoothGattServer;->clearServices'
'Landroid/bluetooth/BluetoothGattServer;->close'
'Landroid/bluetooth/BluetoothGattServer;->connect'
'Landroid/bluetooth/BluetoothGattServer;->notifyCharacteristicChanged'
'Landroid/bluetooth/BluetoothGattServer;->removeService'
'Landroid/bluetooth/BluetoothGattServer;->sendResponse'
'Landroid/bluetooth/BluetoothHeadset;->getConnectedDevices'
'Landroid/bluetooth/BluetoothHeadset;->getConnectionState'
'Landroid/bluetooth/BluetoothHeadset;->getDevicesMatchingConnectionStates'
'Landroid/bluetooth/BluetoothHeadset;->isAudioConnected'
'Landroid/bluetooth/BluetoothHeadset;->sendVendorSpecificResultCode'
'Landroid/bluetooth/BluetoothHeadset;->startVoiceRecognition'
'Landroid/bluetooth/BluetoothHeadset;->stopVoiceRecognition'
'Landroid/bluetooth/BluetoothHealth;->connectChannelToSource'
'Landroid/bluetooth/BluetoothHealth;->disconnectChannel'
'Landroid/bluetooth/BluetoothHealth;->getConnectedDevices'
'Landroid/bluetooth/BluetoothHealth;->getConnectionState'
'Landroid/bluetooth/BluetoothHealth;->getDevicesMatchingConnectionStates'
'Landroid/bluetooth/BluetoothHealth;->getMainChannelFd'
'Landroid/bluetooth/BluetoothHealth;->registerSinkAppConfiguration'
'Landroid/bluetooth/BluetoothHealth;->unregisterAppConfiguration'
'Landroid/bluetooth/BluetoothManager;->getConnectedDevices'
'Landroid/bluetooth/BluetoothManager;->getConnectionState'
'Landroid/bluetooth/BluetoothManager;->getDevicesMatchingConnectionStates'
'Landroid/bluetooth/BluetoothManager;->openGattServer'
'Landroid/bluetooth/BluetoothSocket;->connect'
'Landroid/bluetooth/le/BluetoothLeAdvertiser;->startAdvertising'
'Landroid/bluetooth/le/BluetoothLeAdvertiser;->startAdvertising'
'Landroid/bluetooth/le/BluetoothLeAdvertiser;->stopAdvertising'
'Landroid/bluetooth/le/BluetoothLeScanner;->flushPendingScanResults'
'Landroid/bluetooth/le/BluetoothLeScanner;->startScan'
'Landroid/bluetooth/le/BluetoothLeScanner;->startScan'
'Landroid/bluetooth/le/BluetoothLeScanner;->stopScan'
'Landroid/content/BroadcastReceiver;-><init>'
'Landroid/content/ContentResolver;->query'
'Landroid/content/ContentResolver;->registerContentObserver'
'Landroid/content/ContentValues;-><init>'
'Landroid/content/ContentValues;->put'
'Landroid/content/Context;->getContentResolver'
'Landroid/content/Context;->getSystemService'
'Landroid/content/Context;->openFileInput'
'Landroid/content/Context;->sendBroadcast'
'Landroid/content/Context;->startActivity'
'Landroid/content/Context;->startService'
'Landroid/content/ContextWrapper;->clearWallpaper'
'Landroid/content/ContextWrapper;->removeStickyBroadcast'
'Landroid/content/ContextWrapper;->removeStickyBroadcastAsUser'
'Landroid/content/ContextWrapper;->setWallpaper'
'Landroid/content/ContextWrapper;->setWallpaper'
'Landroid/content/ContextWrapper;->stopService'
'Landroid/content/ContextWrapper;->unbindService'
'Landroid/content/Intent;-><init>'
'Landroid/content/Intent;->getAction'
'Landroid/content/Intent;->getExtras'
'Landroid/content/Intent;->getStringExtra'
'Landroid/content/Intent;->putExtra'
'Landroid/content/Intent;->setAction'
'Landroid/content/MutableContextWrapper;->clearWallpaper'
'Landroid/content/MutableContextWrapper;->removeStickyBroadcast'
'Landroid/content/MutableContextWrapper;->removeStickyBroadcastAsUser'
'Landroid/content/MutableContextWrapper;->setWallpaper'
'Landroid/content/MutableContextWrapper;->setWallpaper'
'Landroid/content/MutableContextWrapper;->stopService'
'Landroid/content/MutableContextWrapper;->unbindService'
'Landroid/content/SharedPreferences$Editor;->commit'
'Landroid/content/SharedPreferences$Editor;->putString'
'Landroid/content/SharedPreferences;->edit'
'Landroid/content/SharedPreferences;->getString'
'Landroid/database/ContentObserver;-><init>'
'Landroid/database/Cursor;->close'
'Landroid/database/Cursor;->getColumnIndex'
'Landroid/database/Cursor;->getColumnIndexOrThrow'
'Landroid/database/Cursor;->getCount'
'Landroid/database/Cursor;->getString'
'Landroid/database/Cursor;->isAfterLast'
'Landroid/database/Cursor;->moveToFirst'
'Landroid/database/Cursor;->moveToNext'
'Landroid/database/sqlite/SQLiteDatabase;->execSQL'
'Landroid/database/sqlite/SQLiteDatabase;->insert'
'Landroid/database/sqlite/SQLiteDatabase;->query'
'Landroid/database/sqlite/SQLiteOpenHelper;-><init>'
'Landroid/hardware/ConsumerIrManager;->getCarrierFrequencies'
'Landroid/hardware/ConsumerIrManager;->transmit'
'Landroid/hardware/fingerprint/FingerprintManager;->authenticate'
'Landroid/hardware/fingerprint/FingerprintManager;->hasEnrolledFingerprints'
'Landroid/hardware/fingerprint/FingerprintManager;->isHardwareDetected'
'Landroid/hardware/location/ActivityRecognitionHardware;->disableActivityEvent'
'Landroid/hardware/location/ActivityRecognitionHardware;->enableActivityEvent'
'Landroid/hardware/location/ActivityRecognitionHardware;->flush'
'Landroid/hardware/location/ActivityRecognitionHardware;->getSupportedActivities'
'Landroid/hardware/location/ActivityRecognitionHardware;->isActivitySupported'
'Landroid/hardware/location/ActivityRecognitionHardware;->registerSink'
'Landroid/hardware/location/ActivityRecognitionHardware;->unregisterSink'
'Landroid/hardware/location/ContextHubService;->findNanoAppOnHub'
'Landroid/hardware/location/ContextHubService;->getContextHubHandles'
'Landroid/hardware/location/ContextHubService;->getContextHubInfo'
'Landroid/hardware/location/ContextHubService;->getNanoAppInstanceInfo'
'Landroid/hardware/location/ContextHubService;->loadNanoApp'
'Landroid/hardware/location/ContextHubService;->registerCallback'
'Landroid/hardware/location/ContextHubService;->sendMessage'
'Landroid/hardware/location/ContextHubService;->unloadNanoApp'
'Landroid/inputmethodservice/InputMethodService;->clearWallpaper'
'Landroid/inputmethodservice/InputMethodService;->removeStickyBroadcast'
'Landroid/inputmethodservice/InputMethodService;->removeStickyBroadcastAsUser'
'Landroid/inputmethodservice/InputMethodService;->setWallpaper'
'Landroid/inputmethodservice/InputMethodService;->setWallpaper'
'Landroid/inputmethodservice/InputMethodService;->stopService'
'Landroid/inputmethodservice/InputMethodService;->unbindService'
'Landroid/location/LocationManager;->addGpsStatusListener'
'Landroid/location/LocationManager;->addNmeaListener'
'Landroid/location/LocationManager;->addNmeaListener'
'Landroid/location/LocationManager;->addNmeaListener'
'Landroid/location/LocationManager;->addProximityAlert'
'Landroid/location/LocationManager;->getBestProvider'
'Landroid/location/LocationManager;->getLastKnownLocation'
'Landroid/location/LocationManager;->getProvider'
'Landroid/location/LocationManager;->getProviders'
'Landroid/location/LocationManager;->getProviders'
'Landroid/location/LocationManager;->registerGnssStatusCallback'
'Landroid/location/LocationManager;->registerGnssStatusCallback'
'Landroid/location/LocationManager;->removeUpdates'
'Landroid/location/LocationManager;->removeUpdates'
'Landroid/location/LocationManager;->requestLocationUpdates'
'Landroid/location/LocationManager;->requestLocationUpdates'
'Landroid/location/LocationManager;->requestLocationUpdates'
'Landroid/location/LocationManager;->requestLocationUpdates'
'Landroid/location/LocationManager;->requestLocationUpdates'
'Landroid/location/LocationManager;->requestSingleUpdate'
'Landroid/location/LocationManager;->requestSingleUpdate'
'Landroid/location/LocationManager;->requestSingleUpdate'
'Landroid/location/LocationManager;->requestSingleUpdate'
'Landroid/location/LocationManager;->sendExtraCommand'
'Landroid/media/AsyncPlayer;->play'
'Landroid/media/AsyncPlayer;->play'
'Landroid/media/AsyncPlayer;->stop'
'Landroid/media/AudioManager;->adjustStreamVolume'
'Landroid/media/AudioManager;->setBluetoothScoOn'
'Landroid/media/AudioManager;->setMicrophoneMute'
'Landroid/media/AudioManager;->setMode'
'Landroid/media/AudioManager;->setSpeakerphoneOn'
'Landroid/media/AudioManager;->setStreamMute'
'Landroid/media/AudioManager;->setStreamVolume'
'Landroid/media/AudioManager;->startBluetoothSco'
'Landroid/media/AudioManager;->stopBluetoothSco'
'Landroid/media/MediaPlayer;->pause'
'Landroid/media/MediaPlayer;->release'
'Landroid/media/MediaPlayer;->reset'
'Landroid/media/MediaPlayer;->setWakeMode'
'Landroid/media/MediaPlayer;->start'
'Landroid/media/MediaPlayer;->stop'
'Landroid/media/MediaRouter$RouteGroup;->requestSetVolume'
'Landroid/media/MediaRouter$RouteGroup;->requestUpdateVolume'
'Landroid/media/MediaRouter$RouteInfo;->requestSetVolume'
'Landroid/media/MediaRouter$RouteInfo;->requestUpdateVolume'
'Landroid/media/MediaScannerConnection;->disconnect'
'Landroid/media/Ringtone;->play'
'Landroid/media/Ringtone;->setAudioAttributes'
'Landroid/media/Ringtone;->setStreamType'
'Landroid/media/Ringtone;->stop'
'Landroid/media/RingtoneManager;->getRingtone'
'Landroid/media/RingtoneManager;->getRingtone'
'Landroid/media/RingtoneManager;->stopPreviousRingtone'
'Landroid/media/browse/MediaBrowser;->disconnect'
'Landroid/net/ConnectivityManager;->getActiveNetwork'
'Landroid/net/ConnectivityManager;->getActiveNetworkInfo'
'Landroid/net/ConnectivityManager;->getAllNetworkInfo'
'Landroid/net/ConnectivityManager;->getAllNetworks'
'Landroid/net/ConnectivityManager;->getLinkProperties'
'Landroid/net/ConnectivityManager;->getNetworkCapabilities'
'Landroid/net/ConnectivityManager;->getNetworkInfo'
'Landroid/net/ConnectivityManager;->getNetworkInfo'
'Landroid/net/ConnectivityManager;->getRestrictBackgroundStatus'
'Landroid/net/ConnectivityManager;->isActiveNetworkMetered'
'Landroid/net/ConnectivityManager;->registerDefaultNetworkCallback'
'Landroid/net/ConnectivityManager;->registerNetworkCallback'
'Landroid/net/ConnectivityManager;->registerNetworkCallback'
'Landroid/net/ConnectivityManager;->reportBadNetwork'
'Landroid/net/ConnectivityManager;->reportNetworkConnectivity'
'Landroid/net/ConnectivityManager;->requestBandwidthUpdate'
'Landroid/net/ConnectivityManager;->requestNetwork'
'Landroid/net/ConnectivityManager;->requestNetwork'
'Landroid/net/ConnectivityManager;->requestRouteToHost'
'Landroid/net/ConnectivityManager;->startUsingNetworkFeature'
'Landroid/net/Uri;->parse'
'Landroid/net/VpnService;->clearWallpaper'
'Landroid/net/VpnService;->onRevoke'
'Landroid/net/VpnService;->removeStickyBroadcast'
'Landroid/net/VpnService;->removeStickyBroadcastAsUser'
'Landroid/net/VpnService;->setWallpaper'
'Landroid/net/VpnService;->setWallpaper'
'Landroid/net/VpnService;->stopService'
'Landroid/net/VpnService;->unbindService'
'Landroid/net/sip/SipAudioCall;->close'
'Landroid/net/sip/SipAudioCall;->endCall'
'Landroid/net/sip/SipAudioCall;->setSpeakerMode'
'Landroid/net/sip/SipAudioCall;->startAudio'
'Landroid/net/sip/SipManager;->close'
'Landroid/net/sip/SipManager;->createSipSession'
'Landroid/net/sip/SipManager;->getSessionFor'
'Landroid/net/sip/SipManager;->isOpened'
'Landroid/net/sip/SipManager;->isRegistered'
'Landroid/net/sip/SipManager;->makeAudioCall'
'Landroid/net/sip/SipManager;->makeAudioCall'
'Landroid/net/sip/SipManager;->open'
'Landroid/net/sip/SipManager;->open'
'Landroid/net/sip/SipManager;->register'
'Landroid/net/sip/SipManager;->setRegistrationListener'
'Landroid/net/sip/SipManager;->takeAudioCall'
'Landroid/net/sip/SipManager;->unregister'
'Landroid/net/wifi/WifiManager$MulticastLock;->acquire'
'Landroid/net/wifi/WifiManager$MulticastLock;->release'
'Landroid/net/wifi/WifiManager$WifiLock;->acquire'
'Landroid/net/wifi/WifiManager$WifiLock;->release'
'Landroid/net/wifi/WifiManager;->addNetwork'
'Landroid/net/wifi/WifiManager;->cancelWps'
'Landroid/net/wifi/WifiManager;->disableNetwork'
'Landroid/net/wifi/WifiManager;->disconnect'
'Landroid/net/wifi/WifiManager;->enableNetwork'
'Landroid/net/wifi/WifiManager;->getConfiguredNetworks'
'Landroid/net/wifi/WifiManager;->getConnectionInfo'
'Landroid/net/wifi/WifiManager;->getDhcpInfo'
'Landroid/net/wifi/WifiManager;->getScanResults'
'Landroid/net/wifi/WifiManager;->getWifiState'
'Landroid/net/wifi/WifiManager;->is5GHzBandSupported'
'Landroid/net/wifi/WifiManager;->isDeviceToApRttSupported'
'Landroid/net/wifi/WifiManager;->isEnhancedPowerReportingSupported'
'Landroid/net/wifi/WifiManager;->isP2pSupported'
'Landroid/net/wifi/WifiManager;->isPreferredNetworkOffloadSupported'
'Landroid/net/wifi/WifiManager;->isScanAlwaysAvailable'
'Landroid/net/wifi/WifiManager;->isTdlsSupported'
'Landroid/net/wifi/WifiManager;->isWifiEnabled'
'Landroid/net/wifi/WifiManager;->pingSupplicant'
'Landroid/net/wifi/WifiManager;->reassociate'
'Landroid/net/wifi/WifiManager;->reconnect'
'Landroid/net/wifi/WifiManager;->removeNetwork'
'Landroid/net/wifi/WifiManager;->saveConfiguration'
'Landroid/net/wifi/WifiManager;->setWifiEnabled'
'Landroid/net/wifi/WifiManager;->startScan'
'Landroid/net/wifi/WifiManager;->startWps'
'Landroid/net/wifi/WifiManager;->updateNetwork'
'Landroid/net/wifi/p2p/WifiP2pManager;->initialize'
'Landroid/os/Bundle;->get'
'Landroid/os/Handler;-><init>'
'Landroid/os/PowerManager$WakeLock;->acquire'
'Landroid/os/PowerManager$WakeLock;->acquire'
'Landroid/os/PowerManager$WakeLock;->release'
'Landroid/os/PowerManager$WakeLock;->release'
'Landroid/os/PowerManager$WakeLock;->setWorkSource'
'Landroid/os/SystemVibrator;->cancel'
'Landroid/os/SystemVibrator;->vibrate'
'Landroid/os/SystemVibrator;->vibrate'
'Landroid/preference/PreferenceManager;->getDefaultSharedPreferences'
'Landroid/security/KeyChain;->getCertificateChain'
'Landroid/security/KeyChain;->getPrivateKey'
'Landroid/service/dreams/DreamService;->clearWallpaper'
'Landroid/service/dreams/DreamService;->dispatchGenericMotionEvent'
'Landroid/service/dreams/DreamService;->dispatchKeyEvent'
'Landroid/service/dreams/DreamService;->dispatchKeyShortcutEvent'
'Landroid/service/dreams/DreamService;->dispatchTouchEvent'
'Landroid/service/dreams/DreamService;->dispatchTrackballEvent'
'Landroid/service/dreams/DreamService;->finish'
'Landroid/service/dreams/DreamService;->onWakeUp'
'Landroid/service/dreams/DreamService;->removeStickyBroadcast'
'Landroid/service/dreams/DreamService;->removeStickyBroadcastAsUser'
'Landroid/service/dreams/DreamService;->setWallpaper'
'Landroid/service/dreams/DreamService;->setWallpaper'
'Landroid/service/dreams/DreamService;->stopService'
'Landroid/service/dreams/DreamService;->unbindService'
'Landroid/service/dreams/DreamService;->wakeUp'
'Landroid/service/quicksettings/TileService;->clearWallpaper'
'Landroid/service/quicksettings/TileService;->removeStickyBroadcast'
'Landroid/service/quicksettings/TileService;->removeStickyBroadcastAsUser'
'Landroid/service/quicksettings/TileService;->setWallpaper'
'Landroid/service/quicksettings/TileService;->setWallpaper'
'Landroid/service/quicksettings/TileService;->stopService'
'Landroid/service/quicksettings/TileService;->unbindService'
'Landroid/service/voice/VoiceInteractionService;->clearWallpaper'
'Landroid/service/voice/VoiceInteractionService;->removeStickyBroadcast'
'Landroid/service/voice/VoiceInteractionService;->removeStickyBroadcastAsUser'
'Landroid/service/voice/VoiceInteractionService;->setWallpaper'
'Landroid/service/voice/VoiceInteractionService;->setWallpaper'
'Landroid/service/voice/VoiceInteractionService;->stopService'
'Landroid/service/voice/VoiceInteractionService;->unbindService'
'Landroid/speech/SpeechRecognizer;->destroy'
'Landroid/speech/tts/TextToSpeech;->getAvailableLanguages'
'Landroid/speech/tts/TextToSpeech;->getDefaultLanguage'
'Landroid/speech/tts/TextToSpeech;->getDefaultVoice'
'Landroid/speech/tts/TextToSpeech;->getFeatures'
'Landroid/speech/tts/TextToSpeech;->getLanguage'
'Landroid/speech/tts/TextToSpeech;->getVoice'
'Landroid/speech/tts/TextToSpeech;->getVoices'
'Landroid/speech/tts/TextToSpeech;->isLanguageAvailable'
'Landroid/speech/tts/TextToSpeech;->isSpeaking'
'Landroid/speech/tts/TextToSpeech;->playEarcon'
'Landroid/speech/tts/TextToSpeech;->playEarcon'
'Landroid/speech/tts/TextToSpeech;->playSilence'
'Landroid/speech/tts/TextToSpeech;->playSilentUtterance'
'Landroid/speech/tts/TextToSpeech;->setLanguage'
'Landroid/speech/tts/TextToSpeech;->setVoice'
'Landroid/speech/tts/TextToSpeech;->shutdown'
'Landroid/speech/tts/TextToSpeech;->speak'
'Landroid/speech/tts/TextToSpeech;->speak'
'Landroid/speech/tts/TextToSpeech;->stop'
'Landroid/speech/tts/TextToSpeech;->synthesizeToFile'
'Landroid/speech/tts/TextToSpeech;->synthesizeToFile'
'Landroid/telephony/PhoneNumberUtils;->isVoiceMailNumber'
'Landroid/telephony/PhoneStateListener;-><init>'
'Landroid/telephony/SmsManager;->divideMessage'
'Landroid/telephony/SmsManager;->downloadMultimediaMessage'
'Landroid/telephony/SmsManager;->getDefault'
'Landroid/telephony/SmsManager;->injectSmsPdu'
'Landroid/telephony/SmsManager;->sendDataMessage'
'Landroid/telephony/SmsManager;->sendMultimediaMessage'
'Landroid/telephony/SmsManager;->sendMultipartTextMessage'
'Landroid/telephony/SmsManager;->sendTextMessage'
'Landroid/telephony/SmsMessage;->createFromPdu'
'Landroid/telephony/SmsMessage;->getDisplayMessageBody'
'Landroid/telephony/SmsMessage;->getDisplayOriginatingAddress'
'Landroid/telephony/TelephonyManager;->getAllCellInfo'
'Landroid/telephony/TelephonyManager;->getCellLocation'
'Landroid/telephony/TelephonyManager;->getDeviceId'
'Landroid/telephony/TelephonyManager;->getGroupIdLevel1'
'Landroid/telephony/TelephonyManager;->getIccAuthentication'
'Landroid/telephony/TelephonyManager;->getLine1Number'
'Landroid/telephony/TelephonyManager;->getNeighboringCellInfo'
'Landroid/telephony/TelephonyManager;->getPhoneCount'
'Landroid/telephony/TelephonyManager;->getSimSerialNumber'
'Landroid/telephony/TelephonyManager;->getSimState'
'Landroid/telephony/TelephonyManager;->getSubscriberId'
'Landroid/telephony/TelephonyManager;->getVoiceMailAlphaTag'
'Landroid/telephony/TelephonyManager;->getVoiceMailNumber'
'Landroid/telephony/TelephonyManager;->listen'
'Landroid/telephony/gsm/SmsManager;->divideMessage'
'Landroid/telephony/gsm/SmsManager;->sendDataMessage'
'Landroid/telephony/gsm/SmsManager;->sendMultipartTextMessage'
'Landroid/telephony/gsm/SmsManager;->sendTextMessage'
'Landroid/test/IsolatedContext;->clearWallpaper'
'Landroid/test/IsolatedContext;->removeStickyBroadcast'
'Landroid/test/IsolatedContext;->removeStickyBroadcastAsUser'
'Landroid/test/IsolatedContext;->setWallpaper'
'Landroid/test/IsolatedContext;->setWallpaper'
'Landroid/test/IsolatedContext;->stopService'
'Landroid/test/IsolatedContext;->unbindService'
'Landroid/test/RenamingDelegatingContext;->clearWallpaper'
'Landroid/test/RenamingDelegatingContext;->removeStickyBroadcast'
'Landroid/test/RenamingDelegatingContext;->removeStickyBroadcastAsUser'
'Landroid/test/RenamingDelegatingContext;->setWallpaper'
'Landroid/test/RenamingDelegatingContext;->setWallpaper'
'Landroid/test/RenamingDelegatingContext;->stopService'
'Landroid/test/RenamingDelegatingContext;->unbindService'
'Landroid/test/mock/MockApplication;->clearWallpaper'
'Landroid/test/mock/MockApplication;->removeStickyBroadcast'
'Landroid/test/mock/MockApplication;->removeStickyBroadcastAsUser'
'Landroid/test/mock/MockApplication;->setWallpaper'
'Landroid/test/mock/MockApplication;->setWallpaper'
'Landroid/test/mock/MockApplication;->stopService'
'Landroid/test/mock/MockApplication;->unbindService'
'Landroid/view/ContextThemeWrapper;->clearWallpaper'
'Landroid/view/ContextThemeWrapper;->removeStickyBroadcast'
'Landroid/view/ContextThemeWrapper;->removeStickyBroadcastAsUser'
'Landroid/view/ContextThemeWrapper;->setWallpaper'
'Landroid/view/ContextThemeWrapper;->setWallpaper'
'Landroid/view/ContextThemeWrapper;->stopService'
'Landroid/view/ContextThemeWrapper;->unbindService'
'Landroid/view/inputmethod/InputMethodManager;->showInputMethodAndSubtypeEnabler'
'Landroid/widget/VideoView;->getAudioSessionId'
'Landroid/widget/VideoView;->onKeyDown'
'Landroid/widget/VideoView;->pause'
'Landroid/widget/VideoView;->resume'
'Landroid/widget/VideoView;->setVideoPath'
'Landroid/widget/VideoView;->setVideoURI'
'Landroid/widget/VideoView;->setVideoURI'
'Landroid/widget/VideoView;->start'
'Landroid/widget/VideoView;->stopPlayback'
'Landroid/widget/VideoView;->suspend'
'Lcom/android/bluetooth/a2dp/A2dpService$BluetoothA2dpBinder;->connect'
'Lcom/android/bluetooth/a2dp/A2dpService$BluetoothA2dpBinder;->disconnect'
'Lcom/android/bluetooth/a2dp/A2dpService$BluetoothA2dpBinder;->getConnectedDevices'
'Lcom/android/bluetooth/a2dp/A2dpService$BluetoothA2dpBinder;->getConnectionState'
'Lcom/android/bluetooth/a2dp/A2dpService$BluetoothA2dpBinder;->getDevicesMatchingConnectionStates'
'Lcom/android/bluetooth/a2dp/A2dpService$BluetoothA2dpBinder;->getPriority'
'Lcom/android/bluetooth/a2dp/A2dpService$BluetoothA2dpBinder;->isA2dpPlaying'
'Lcom/android/bluetooth/a2dp/A2dpService$BluetoothA2dpBinder;->setPriority'
'Lcom/android/bluetooth/a2dpsink/A2dpSinkService$BluetoothA2dpSinkBinder;->connect'
'Lcom/android/bluetooth/a2dpsink/A2dpSinkService$BluetoothA2dpSinkBinder;->disconnect'
'Lcom/android/bluetooth/a2dpsink/A2dpSinkService$BluetoothA2dpSinkBinder;->getAudioConfig'
'Lcom/android/bluetooth/a2dpsink/A2dpSinkService$BluetoothA2dpSinkBinder;->getConnectedDevices'
'Lcom/android/bluetooth/a2dpsink/A2dpSinkService$BluetoothA2dpSinkBinder;->getConnectionState'
'Lcom/android/bluetooth/a2dpsink/A2dpSinkService$BluetoothA2dpSinkBinder;->getDevicesMatchingConnectionStates'
'Lcom/android/bluetooth/a2dpsink/A2dpSinkService$BluetoothA2dpSinkBinder;->getPriority'
'Lcom/android/bluetooth/a2dpsink/A2dpSinkService$BluetoothA2dpSinkBinder;->isA2dpPlaying'
'Lcom/android/bluetooth/a2dpsink/A2dpSinkService$BluetoothA2dpSinkBinder;->setPriority'
'Lcom/android/bluetooth/avrcp/AvrcpControllerService$BluetoothAvrcpControllerBinder;->getConnectedDevices'
'Lcom/android/bluetooth/avrcp/AvrcpControllerService$BluetoothAvrcpControllerBinder;->getConnectionState'
'Lcom/android/bluetooth/avrcp/AvrcpControllerService$BluetoothAvrcpControllerBinder;->getDevicesMatchingConnectionStates'
'Lcom/android/bluetooth/avrcp/AvrcpControllerService$BluetoothAvrcpControllerBinder;->getMetadata'
'Lcom/android/bluetooth/avrcp/AvrcpControllerService$BluetoothAvrcpControllerBinder;->getPlaybackState'
'Lcom/android/bluetooth/avrcp/AvrcpControllerService$BluetoothAvrcpControllerBinder;->getPlayerSettings'
'Lcom/android/bluetooth/avrcp/AvrcpControllerService$BluetoothAvrcpControllerBinder;->sendGroupNavigationCmd'
'Lcom/android/bluetooth/avrcp/AvrcpControllerService$BluetoothAvrcpControllerBinder;->sendPassThroughCmd'
'Lcom/android/bluetooth/avrcp/AvrcpControllerService$BluetoothAvrcpControllerBinder;->setPlayerApplicationSetting'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->cancelBondProcess'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->cancelDiscovery'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->configHciSnoopLog'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->connectSocket'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->createBond'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->createBondOutOfBand'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->createSocketChannel'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->disable'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->enable'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->enableNoAutoConnect'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->factoryReset'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->fetchRemoteUuids'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getAdapterConnectionState'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getAddress'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getBondState'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getBondedDevices'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getConnectionState'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getDiscoverableTimeout'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getMessageAccessPermission'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getName'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getPhonebookAccessPermission'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getProfileConnectionState'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getRemoteAlias'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getRemoteClass'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getRemoteName'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getRemoteType'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getRemoteUuids'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getScanMode'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getSimAccessPermission'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getState'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->getUuids'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->isActivityAndEnergyReportingSupported'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->isDiscovering'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->isEnabled'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->isMultiAdvertisementSupported'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->isOffloadedFilteringSupported'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->isOffloadedScanBatchingSupported'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->removeBond'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->reportActivityInfo'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->requestActivityInfo'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->sdpSearch'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->sendConnectionStateChange'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->setDiscoverableTimeout'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->setMessageAccessPermission'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->setName'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->setPairingConfirmation'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->setPasskey'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->setPhonebookAccessPermission'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->setPin'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->setRemoteAlias'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->setScanMode'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->setSimAccessPermission'
'Lcom/android/bluetooth/btservice/AdapterService$AdapterServiceBinder;->startDiscovery'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->addCharacteristic'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->addDescriptor'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->addIncludedService'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->beginReliableWrite'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->beginServiceDeclaration'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->clearServices'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->clientConnect'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->clientDisconnect'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->configureMTU'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->connectionParameterUpdate'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->disconnectAll'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->discoverServices'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->endReliableWrite'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->endServiceDeclaration'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->getDevicesMatchingConnectionStates'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->numHwTrackFiltersAvailable'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->readCharacteristic'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->readDescriptor'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->readRemoteRssi'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->refreshDevice'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->registerClient'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->registerForNotification'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->registerServer'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->removeService'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->sendNotification'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->sendResponse'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->serverConnect'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->serverDisconnect'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->startMultiAdvertising'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->startScan'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->stopMultiAdvertising'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->stopScan'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->unregAll'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->unregisterClient'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->unregisterServer'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->writeCharacteristic'
'Lcom/android/bluetooth/gatt/GattService$BluetoothGattBinder;->writeDescriptor'
'Lcom/android/bluetooth/hdp/HealthService$BluetoothHealthBinder;->connectChannelToSink'
'Lcom/android/bluetooth/hdp/HealthService$BluetoothHealthBinder;->connectChannelToSource'
'Lcom/android/bluetooth/hdp/HealthService$BluetoothHealthBinder;->disconnectChannel'
'Lcom/android/bluetooth/hdp/HealthService$BluetoothHealthBinder;->getConnectedHealthDevices'
'Lcom/android/bluetooth/hdp/HealthService$BluetoothHealthBinder;->getHealthDeviceConnectionState'
'Lcom/android/bluetooth/hdp/HealthService$BluetoothHealthBinder;->getHealthDevicesMatchingConnectionStates'
'Lcom/android/bluetooth/hdp/HealthService$BluetoothHealthBinder;->getMainChannelFd'
'Lcom/android/bluetooth/hdp/HealthService$BluetoothHealthBinder;->registerAppConfiguration'
'Lcom/android/bluetooth/hdp/HealthService$BluetoothHealthBinder;->unregisterAppConfiguration'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->bindResponse'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->clccResponse'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->connect'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->connectAudio'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->disableWBS'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->disconnect'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->disconnectAudio'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->enableWBS'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->getConnectedDevices'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->getConnectionState'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->getDevicesMatchingConnectionStates'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->getPriority'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->isAudioConnected'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->isAudioOn'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->phoneStateChanged'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->sendVendorSpecificResultCode'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->setPriority'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->startVoiceRecognition'
'Lcom/android/bluetooth/hfp/HeadsetService$BluetoothHeadsetBinder;->stopVoiceRecognition'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->acceptCall'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->connect'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->connectAudio'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->dial'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->dialMemory'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->disconnect'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->disconnectAudio'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->enterPrivateMode'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->explicitCallTransfer'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->getConnectedDevices'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->getConnectionState'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->getCurrentAgEvents'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->getCurrentAgFeatures'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->getCurrentCalls'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->getDevicesMatchingConnectionStates'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->getLastVoiceTagNumber'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->getPriority'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->holdCall'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->redial'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->rejectCall'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->sendDTMF'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->setPriority'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->startVoiceRecognition'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->stopVoiceRecognition'
'Lcom/android/bluetooth/hfpclient/HeadsetClientService$BluetoothHeadsetClientBinder;->terminateCall'
'Lcom/android/bluetooth/hid/HidService$BluetoothInputDeviceBinder;->connect'
'Lcom/android/bluetooth/hid/HidService$BluetoothInputDeviceBinder;->disconnect'
'Lcom/android/bluetooth/hid/HidService$BluetoothInputDeviceBinder;->getConnectedDevices'
'Lcom/android/bluetooth/hid/HidService$BluetoothInputDeviceBinder;->getDevicesMatchingConnectionStates'
'Lcom/android/bluetooth/hid/HidService$BluetoothInputDeviceBinder;->getPriority'
'Lcom/android/bluetooth/hid/HidService$BluetoothInputDeviceBinder;->getProtocolMode'
'Lcom/android/bluetooth/hid/HidService$BluetoothInputDeviceBinder;->getReport'
'Lcom/android/bluetooth/hid/HidService$BluetoothInputDeviceBinder;->sendData'
'Lcom/android/bluetooth/hid/HidService$BluetoothInputDeviceBinder;->setPriority'
'Lcom/android/bluetooth/hid/HidService$BluetoothInputDeviceBinder;->setProtocolMode'
'Lcom/android/bluetooth/hid/HidService$BluetoothInputDeviceBinder;->setReport'
'Lcom/android/bluetooth/hid/HidService$BluetoothInputDeviceBinder;->virtualUnplug'
'Lcom/android/bluetooth/map/BluetoothMapService$BluetoothMapBinder;->connect'
'Lcom/android/bluetooth/map/BluetoothMapService$BluetoothMapBinder;->disconnect'
'Lcom/android/bluetooth/map/BluetoothMapService$BluetoothMapBinder;->getClient'
'Lcom/android/bluetooth/map/BluetoothMapService$BluetoothMapBinder;->getConnectedDevices'
'Lcom/android/bluetooth/map/BluetoothMapService$BluetoothMapBinder;->getConnectionState'
'Lcom/android/bluetooth/map/BluetoothMapService$BluetoothMapBinder;->getDevicesMatchingConnectionStates'
'Lcom/android/bluetooth/map/BluetoothMapService$BluetoothMapBinder;->getPriority'
'Lcom/android/bluetooth/map/BluetoothMapService$BluetoothMapBinder;->getState'
'Lcom/android/bluetooth/map/BluetoothMapService$BluetoothMapBinder;->isConnected'
'Lcom/android/bluetooth/map/BluetoothMapService$BluetoothMapBinder;->setPriority'
'Lcom/android/bluetooth/pan/PanService$BluetoothPanBinder;->connect'
'Lcom/android/bluetooth/pan/PanService$BluetoothPanBinder;->disconnect'
'Lcom/android/bluetooth/pan/PanService$BluetoothPanBinder;->getConnectedDevices'
'Lcom/android/bluetooth/pan/PanService$BluetoothPanBinder;->getDevicesMatchingConnectionStates'
'Lcom/android/bluetooth/pan/PanService$BluetoothPanBinder;->setBluetoothTethering'
'Lcom/android/bluetooth/pbapclient/PbapClientService$BluetoothPbapClientBinder;->connect'
'Lcom/android/bluetooth/pbapclient/PbapClientService$BluetoothPbapClientBinder;->disconnect'
'Lcom/android/bluetooth/pbapclient/PbapClientService$BluetoothPbapClientBinder;->getConnectedDevices'
'Lcom/android/bluetooth/pbapclient/PbapClientService$BluetoothPbapClientBinder;->getConnectionState'
'Lcom/android/bluetooth/pbapclient/PbapClientService$BluetoothPbapClientBinder;->getDevicesMatchingConnectionStates'
'Lcom/android/bluetooth/pbapclient/PbapClientService$BluetoothPbapClientBinder;->getPriority'
'Lcom/android/bluetooth/pbapclient/PbapClientService$BluetoothPbapClientBinder;->setPriority'
'Lcom/android/bluetooth/sap/SapService$SapBinder;->connect'
'Lcom/android/bluetooth/sap/SapService$SapBinder;->disconnect'
'Lcom/android/bluetooth/sap/SapService$SapBinder;->getClient'
'Lcom/android/bluetooth/sap/SapService$SapBinder;->getConnectedDevices'
'Lcom/android/bluetooth/sap/SapService$SapBinder;->getConnectionState'
'Lcom/android/bluetooth/sap/SapService$SapBinder;->getDevicesMatchingConnectionStates'
'Lcom/android/bluetooth/sap/SapService$SapBinder;->getPriority'
'Lcom/android/bluetooth/sap/SapService$SapBinder;->getState'
'Lcom/android/bluetooth/sap/SapService$SapBinder;->isConnected'
'Lcom/android/bluetooth/sap/SapService$SapBinder;->setPriority'
'Lcom/android/car/CarRadioService;->setPreset'
'Lcom/android/car/ICarImpl;->getCarService'
'Lcom/android/car/pm/CarPackageManagerService;->setAppBlockingPolicy'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getCompleteVoiceMailNumber'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getCompleteVoiceMailNumberForSubscriber'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getDeviceId'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getDeviceIdForPhone'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getDeviceSvn'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getDeviceSvnUsingSubId'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getGroupIdLevel1'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getGroupIdLevel1ForSubscriber'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getIccSerialNumber'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getIccSerialNumberForSubscriber'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getIccSimChallengeResponse'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getImeiForSubscriber'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getIsimChallengeResponse'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getIsimDomain'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getIsimImpi'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getIsimImpu'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getIsimIst'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getIsimPcscf'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getLine1AlphaTag'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getLine1AlphaTagForSubscriber'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getLine1Number'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getLine1NumberForSubscriber'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getMsisdn'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getMsisdnForSubscriber'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getNaiForSubscriber'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getSubscriberId'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getSubscriberIdForSubscriber'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getVoiceMailAlphaTag'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getVoiceMailAlphaTagForSubscriber'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getVoiceMailNumber'
'Lcom/android/internal/telephony/PhoneSubInfoController;->getVoiceMailNumberForSubscriber'
'Lcom/android/internal/telephony/SubscriptionController;->addSubInfoRecord'
'Lcom/android/internal/telephony/SubscriptionController;->clearDefaultsForInactiveSubIds'
'Lcom/android/internal/telephony/SubscriptionController;->clearSubInfo'
'Lcom/android/internal/telephony/SubscriptionController;->getActiveSubInfoCount'
'Lcom/android/internal/telephony/SubscriptionController;->getActiveSubscriptionInfo'
'Lcom/android/internal/telephony/SubscriptionController;->getActiveSubscriptionInfoForIccId'
'Lcom/android/internal/telephony/SubscriptionController;->getActiveSubscriptionInfoForSimSlotIndex'
'Lcom/android/internal/telephony/SubscriptionController;->getActiveSubscriptionInfoList'
'Lcom/android/internal/telephony/SubscriptionController;->getAllSubInfoCount'
'Lcom/android/internal/telephony/SubscriptionController;->getAllSubInfoList'
'Lcom/android/internal/telephony/SubscriptionController;->getSubscriptionProperty'
'Lcom/android/internal/telephony/SubscriptionController;->setDataRoaming'
'Lcom/android/internal/telephony/SubscriptionController;->setDefaultDataSubId'
'Lcom/android/internal/telephony/SubscriptionController;->setDefaultSmsSubId'
'Lcom/android/internal/telephony/SubscriptionController;->setDefaultVoiceSubId'
'Lcom/android/internal/telephony/SubscriptionController;->setDisplayName'
'Lcom/android/internal/telephony/SubscriptionController;->setDisplayNameUsingSrc'
'Lcom/android/internal/telephony/SubscriptionController;->setDisplayNumber'
'Lcom/android/internal/telephony/SubscriptionController;->setIconTint'
'Lcom/android/internal/telephony/SubscriptionController;->setSubscriptionProperty'
'Lcom/android/internal/telephony/UiccPhoneBookController;->getAdnRecordsInEf'
'Lcom/android/internal/telephony/UiccPhoneBookController;->getAdnRecordsInEfForSubscriber'
'Lcom/android/internal/telephony/UiccPhoneBookController;->updateAdnRecordsInEfByIndex'
'Lcom/android/internal/telephony/UiccPhoneBookController;->updateAdnRecordsInEfByIndexForSubscriber'
'Lcom/android/internal/telephony/UiccPhoneBookController;->updateAdnRecordsInEfBySearch'
'Lcom/android/internal/telephony/UiccPhoneBookController;->updateAdnRecordsInEfBySearchForSubscriber'
'Lcom/android/internal/telephony/UiccSmsController;->copyMessageToIccEfForSubscriber'
'Lcom/android/internal/telephony/UiccSmsController;->disableCellBroadcastForSubscriber'
'Lcom/android/internal/telephony/UiccSmsController;->disableCellBroadcastRangeForSubscriber'
'Lcom/android/internal/telephony/UiccSmsController;->enableCellBroadcastForSubscriber'
'Lcom/android/internal/telephony/UiccSmsController;->enableCellBroadcastRangeForSubscriber'
'Lcom/android/internal/telephony/UiccSmsController;->getAllMessagesFromIccEfForSubscriber'
'Lcom/android/internal/telephony/UiccSmsController;->sendDataForSubscriber'
'Lcom/android/internal/telephony/UiccSmsController;->sendDataForSubscriberWithSelfPermissions'
'Lcom/android/internal/telephony/UiccSmsController;->sendMultipartTextForSubscriber'
'Lcom/android/internal/telephony/UiccSmsController;->sendStoredMultipartText'
'Lcom/android/internal/telephony/UiccSmsController;->sendStoredText'
'Lcom/android/internal/telephony/UiccSmsController;->sendTextForSubscriber'
'Lcom/android/internal/telephony/UiccSmsController;->sendTextForSubscriberWithSelfPermissions'
'Lcom/android/internal/telephony/UiccSmsController;->updateMessageOnIccEfForSubscriber'
'Lcom/android/phone/CarrierConfigLoader;->getConfigForSubId'
'Lcom/android/phone/CarrierConfigLoader;->notifyConfigChangedForSubId'
'Lcom/android/phone/CarrierConfigLoader;->updateConfigForPhoneId'
'Lcom/android/phone/PhoneInterfaceManager;->answerRingingCall'
'Lcom/android/phone/PhoneInterfaceManager;->answerRingingCallForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->call'
'Lcom/android/phone/PhoneInterfaceManager;->carrierActionSetMeteredApnsEnabled'
'Lcom/android/phone/PhoneInterfaceManager;->carrierActionSetRadioEnabled'
'Lcom/android/phone/PhoneInterfaceManager;->disableDataConnectivity'
'Lcom/android/phone/PhoneInterfaceManager;->disableLocationUpdates'
'Lcom/android/phone/PhoneInterfaceManager;->disableLocationUpdatesForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->enableDataConnectivity'
'Lcom/android/phone/PhoneInterfaceManager;->enableLocationUpdates'
'Lcom/android/phone/PhoneInterfaceManager;->enableLocationUpdatesForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->enableVideoCalling'
'Lcom/android/phone/PhoneInterfaceManager;->endCall'
'Lcom/android/phone/PhoneInterfaceManager;->endCallForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->factoryReset'
'Lcom/android/phone/PhoneInterfaceManager;->getAidForAppType'
'Lcom/android/phone/PhoneInterfaceManager;->getAllCellInfo'
'Lcom/android/phone/PhoneInterfaceManager;->getAllowedCarriers'
'Lcom/android/phone/PhoneInterfaceManager;->getCalculatedPreferredNetworkType'
'Lcom/android/phone/PhoneInterfaceManager;->getCdmaEriIconIndex'
'Lcom/android/phone/PhoneInterfaceManager;->getCdmaEriIconIndexForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->getCdmaEriIconMode'
'Lcom/android/phone/PhoneInterfaceManager;->getCdmaEriIconModeForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->getCdmaEriText'
'Lcom/android/phone/PhoneInterfaceManager;->getCdmaEriTextForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->getCdmaMdn'
'Lcom/android/phone/PhoneInterfaceManager;->getCdmaMin'
'Lcom/android/phone/PhoneInterfaceManager;->getCdmaPrlVersion'
'Lcom/android/phone/PhoneInterfaceManager;->getCellLocation'
'Lcom/android/phone/PhoneInterfaceManager;->getCellNetworkScanResults'
'Lcom/android/phone/PhoneInterfaceManager;->getDataEnabled'
'Lcom/android/phone/PhoneInterfaceManager;->getDataNetworkType'
'Lcom/android/phone/PhoneInterfaceManager;->getDataNetworkTypeForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->getDeviceId'
'Lcom/android/phone/PhoneInterfaceManager;->getDeviceSoftwareVersionForSlot'
'Lcom/android/phone/PhoneInterfaceManager;->getEsn'
'Lcom/android/phone/PhoneInterfaceManager;->getImeiForSlot'
'Lcom/android/phone/PhoneInterfaceManager;->getLine1AlphaTagForDisplay'
'Lcom/android/phone/PhoneInterfaceManager;->getLine1NumberForDisplay'
'Lcom/android/phone/PhoneInterfaceManager;->getLteOnCdmaMode'
'Lcom/android/phone/PhoneInterfaceManager;->getLteOnCdmaModeForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->getMergedSubscriberIds'
'Lcom/android/phone/PhoneInterfaceManager;->getNeighboringCellInfo'
'Lcom/android/phone/PhoneInterfaceManager;->getNetworkTypeForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->getPcscfAddress'
'Lcom/android/phone/PhoneInterfaceManager;->getPreferredNetworkType'
'Lcom/android/phone/PhoneInterfaceManager;->getRadioAccessFamily'
'Lcom/android/phone/PhoneInterfaceManager;->getServiceStateForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->getSystemVisualVoicemailSmsFilterSettings'
'Lcom/android/phone/PhoneInterfaceManager;->getTelephonyHistograms'
'Lcom/android/phone/PhoneInterfaceManager;->getTetherApnRequired'
'Lcom/android/phone/PhoneInterfaceManager;->getVoiceNetworkTypeForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->getVtDataUsage'
'Lcom/android/phone/PhoneInterfaceManager;->handlePinMmi'
'Lcom/android/phone/PhoneInterfaceManager;->handlePinMmiForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->iccCloseLogicalChannel'
'Lcom/android/phone/PhoneInterfaceManager;->iccExchangeSimIO'
'Lcom/android/phone/PhoneInterfaceManager;->iccOpenLogicalChannel'
'Lcom/android/phone/PhoneInterfaceManager;->iccTransmitApduBasicChannel'
'Lcom/android/phone/PhoneInterfaceManager;->iccTransmitApduLogicalChannel'
'Lcom/android/phone/PhoneInterfaceManager;->invokeOemRilRequestRaw'
'Lcom/android/phone/PhoneInterfaceManager;->isIdle'
'Lcom/android/phone/PhoneInterfaceManager;->isIdleForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->isOffhook'
'Lcom/android/phone/PhoneInterfaceManager;->isOffhookForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->isRadioOn'
'Lcom/android/phone/PhoneInterfaceManager;->isRadioOnForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->isRinging'
'Lcom/android/phone/PhoneInterfaceManager;->isRingingForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->isVideoCallingEnabled'
'Lcom/android/phone/PhoneInterfaceManager;->isVisualVoicemailEnabled'
'Lcom/android/phone/PhoneInterfaceManager;->nvReadItem'
'Lcom/android/phone/PhoneInterfaceManager;->nvResetConfig'
'Lcom/android/phone/PhoneInterfaceManager;->nvWriteCdmaPrl'
'Lcom/android/phone/PhoneInterfaceManager;->nvWriteItem'
'Lcom/android/phone/PhoneInterfaceManager;->requestModemActivityInfo'
'Lcom/android/phone/PhoneInterfaceManager;->sendEnvelopeWithStatus'
'Lcom/android/phone/PhoneInterfaceManager;->setAllowedCarriers'
'Lcom/android/phone/PhoneInterfaceManager;->setDataEnabled'
'Lcom/android/phone/PhoneInterfaceManager;->setImsRegistrationState'
'Lcom/android/phone/PhoneInterfaceManager;->setNetworkSelectionModeAutomatic'
'Lcom/android/phone/PhoneInterfaceManager;->setNetworkSelectionModeManual'
'Lcom/android/phone/PhoneInterfaceManager;->setPolicyDataEnabled'
'Lcom/android/phone/PhoneInterfaceManager;->setPreferredNetworkType'
'Lcom/android/phone/PhoneInterfaceManager;->setRadio'
'Lcom/android/phone/PhoneInterfaceManager;->setRadioForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->setRadioPower'
'Lcom/android/phone/PhoneInterfaceManager;->setVisualVoicemailEnabled'
'Lcom/android/phone/PhoneInterfaceManager;->shutdownMobileRadios'
'Lcom/android/phone/PhoneInterfaceManager;->supplyPin'
'Lcom/android/phone/PhoneInterfaceManager;->supplyPinForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->supplyPinReportResult'
'Lcom/android/phone/PhoneInterfaceManager;->supplyPinReportResultForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->supplyPuk'
'Lcom/android/phone/PhoneInterfaceManager;->supplyPukForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->supplyPukReportResult'
'Lcom/android/phone/PhoneInterfaceManager;->supplyPukReportResultForSubscriber'
'Lcom/android/phone/PhoneInterfaceManager;->toggleRadioOnOff'
'Lcom/android/phone/PhoneInterfaceManager;->toggleRadioOnOffForSubscriber'
'Lcom/android/providers/contacts/ContactsProvider2;->getType'
'Lcom/android/server/AppOpsService;->checkAudioOperation'
'Lcom/android/server/AppOpsService;->checkOperation'
'Lcom/android/server/AppOpsService;->finishOperation'
'Lcom/android/server/AppOpsService;->getOpsForPackage'
'Lcom/android/server/AppOpsService;->getPackagesForOps'
'Lcom/android/server/AppOpsService;->noteOperation'
'Lcom/android/server/AppOpsService;->resetAllModes'
'Lcom/android/server/AppOpsService;->setAudioRestriction'
'Lcom/android/server/AppOpsService;->setMode'
'Lcom/android/server/AppOpsService;->setUidMode'
'Lcom/android/server/AppOpsService;->setUserRestriction'
'Lcom/android/server/AppOpsService;->startOperation'
'Lcom/android/server/BluetoothManagerService;->disable'
'Lcom/android/server/BluetoothManagerService;->enable'
'Lcom/android/server/BluetoothManagerService;->enableNoAutoConnect'
'Lcom/android/server/BluetoothManagerService;->getAddress'
'Lcom/android/server/BluetoothManagerService;->getName'
'Lcom/android/server/BluetoothManagerService;->registerStateChangeCallback'
'Lcom/android/server/BluetoothManagerService;->unregisterAdapter'
'Lcom/android/server/BluetoothManagerService;->unregisterStateChangeCallback'
'Lcom/android/server/ConnectivityService;->factoryReset'
'Lcom/android/server/ConnectivityService;->getActiveLinkProperties'
'Lcom/android/server/ConnectivityService;->getActiveNetwork'
'Lcom/android/server/ConnectivityService;->getActiveNetworkForUid'
'Lcom/android/server/ConnectivityService;->getActiveNetworkInfo'
'Lcom/android/server/ConnectivityService;->getActiveNetworkInfoForUid'
'Lcom/android/server/ConnectivityService;->getActiveNetworkQuotaInfo'
'Lcom/android/server/ConnectivityService;->getAllNetworkInfo'
'Lcom/android/server/ConnectivityService;->getAllNetworkState'
'Lcom/android/server/ConnectivityService;->getAllNetworks'
'Lcom/android/server/ConnectivityService;->getAllVpnInfo'
'Lcom/android/server/ConnectivityService;->getAlwaysOnVpnPackage'
'Lcom/android/server/ConnectivityService;->getDefaultNetworkCapabilitiesForUser'
'Lcom/android/server/ConnectivityService;->getLastTetherError'
'Lcom/android/server/ConnectivityService;->getLegacyVpnInfo'
'Lcom/android/server/ConnectivityService;->getLinkProperties'
'Lcom/android/server/ConnectivityService;->getLinkPropertiesForType'
'Lcom/android/server/ConnectivityService;->getMobileProvisioningUrl'
'Lcom/android/server/ConnectivityService;->getNetworkCapabilities'
'Lcom/android/server/ConnectivityService;->getNetworkForType'
'Lcom/android/server/ConnectivityService;->getNetworkInfo'
'Lcom/android/server/ConnectivityService;->getNetworkInfoForUid'
'Lcom/android/server/ConnectivityService;->getTetherableBluetoothRegexs'
'Lcom/android/server/ConnectivityService;->getTetherableIfaces'
'Lcom/android/server/ConnectivityService;->getTetherableUsbRegexs'
'Lcom/android/server/ConnectivityService;->getTetherableWifiRegexs'
'Lcom/android/server/ConnectivityService;->getTetheredDhcpRanges'
'Lcom/android/server/ConnectivityService;->getTetheredIfaces'
'Lcom/android/server/ConnectivityService;->getTetheringErroredIfaces'
'Lcom/android/server/ConnectivityService;->getVpnConfig'
'Lcom/android/server/ConnectivityService;->isActiveNetworkMetered'
'Lcom/android/server/ConnectivityService;->isNetworkSupported'
'Lcom/android/server/ConnectivityService;->isTetheringSupported'
'Lcom/android/server/ConnectivityService;->listenForNetwork'
'Lcom/android/server/ConnectivityService;->pendingListenForNetwork'
'Lcom/android/server/ConnectivityService;->pendingRequestForNetwork'
'Lcom/android/server/ConnectivityService;->prepareVpn'
'Lcom/android/server/ConnectivityService;->registerNetworkAgent'
'Lcom/android/server/ConnectivityService;->registerNetworkFactory'
'Lcom/android/server/ConnectivityService;->reportInetCondition'
'Lcom/android/server/ConnectivityService;->reportNetworkConnectivity'
'Lcom/android/server/ConnectivityService;->requestBandwidthUpdate'
'Lcom/android/server/ConnectivityService;->requestNetwork'
'Lcom/android/server/ConnectivityService;->requestRouteToHostAddress'
'Lcom/android/server/ConnectivityService;->setAcceptUnvalidated'
'Lcom/android/server/ConnectivityService;->setAirplaneMode'
'Lcom/android/server/ConnectivityService;->setAlwaysOnVpnPackage'
'Lcom/android/server/ConnectivityService;->setAvoidUnvalidated'
'Lcom/android/server/ConnectivityService;->setGlobalProxy'
'Lcom/android/server/ConnectivityService;->setProvisioningNotificationVisible'
'Lcom/android/server/ConnectivityService;->setUsbTethering'
'Lcom/android/server/ConnectivityService;->setVpnPackageAuthorization'
'Lcom/android/server/ConnectivityService;->startLegacyVpn'
'Lcom/android/server/ConnectivityService;->startNattKeepalive'
'Lcom/android/server/ConnectivityService;->startTethering'
'Lcom/android/server/ConnectivityService;->stopTethering'
'Lcom/android/server/ConnectivityService;->tether'
'Lcom/android/server/ConnectivityService;->unregisterNetworkFactory'
'Lcom/android/server/ConnectivityService;->untether'
'Lcom/android/server/ConnectivityService;->updateLockdownVpn'
'Lcom/android/server/ConsumerIrService;->getCarrierFrequencies'
'Lcom/android/server/ConsumerIrService;->transmit'
'Lcom/android/server/DeviceIdleController$BinderService;->addPowerSaveTempWhitelistApp'
'Lcom/android/server/DeviceIdleController$BinderService;->addPowerSaveTempWhitelistAppForMms'
'Lcom/android/server/DeviceIdleController$BinderService;->addPowerSaveTempWhitelistAppForSms'
'Lcom/android/server/DeviceIdleController$BinderService;->addPowerSaveWhitelistApp'
'Lcom/android/server/DeviceIdleController$BinderService;->exitIdle'
'Lcom/android/server/DeviceIdleController$BinderService;->removePowerSaveWhitelistApp'
'Lcom/android/server/InputMethodManagerService;->addClient'
'Lcom/android/server/InputMethodManagerService;->clearLastInputMethodWindowForTransition'
'Lcom/android/server/InputMethodManagerService;->createInputContentUriToken'
'Lcom/android/server/InputMethodManagerService;->getCurrentInputMethodSubtype'
'Lcom/android/server/InputMethodManagerService;->getEnabledInputMethodList'
'Lcom/android/server/InputMethodManagerService;->getEnabledInputMethodSubtypeList'
'Lcom/android/server/InputMethodManagerService;->getInputMethodList'
'Lcom/android/server/InputMethodManagerService;->getLastInputMethodSubtype'
'Lcom/android/server/InputMethodManagerService;->hideMySoftInput'
'Lcom/android/server/InputMethodManagerService;->hideSoftInput'
'Lcom/android/server/InputMethodManagerService;->notifySuggestionPicked'
'Lcom/android/server/InputMethodManagerService;->registerSuggestionSpansForNotification'
'Lcom/android/server/InputMethodManagerService;->removeClient'
'Lcom/android/server/InputMethodManagerService;->setAdditionalInputMethodSubtypes'
'Lcom/android/server/InputMethodManagerService;->setCurrentInputMethodSubtype'
'Lcom/android/server/InputMethodManagerService;->setInputMethod'
'Lcom/android/server/InputMethodManagerService;->setInputMethodAndSubtype'
'Lcom/android/server/InputMethodManagerService;->setInputMethodEnabled'
'Lcom/android/server/InputMethodManagerService;->shouldOfferSwitchingToNextInputMethod'
'Lcom/android/server/InputMethodManagerService;->showInputMethodAndSubtypeEnablerFromClient'
'Lcom/android/server/InputMethodManagerService;->showInputMethodPickerFromClient'
'Lcom/android/server/InputMethodManagerService;->showMySoftInput'
'Lcom/android/server/InputMethodManagerService;->showSoftInput'
'Lcom/android/server/InputMethodManagerService;->startInputOrWindowGainedFocus'
'Lcom/android/server/InputMethodManagerService;->switchToLastInputMethod'
'Lcom/android/server/InputMethodManagerService;->switchToNextInputMethod'
'Lcom/android/server/LocationManagerService;->addGnssMeasurementsListener'
'Lcom/android/server/LocationManagerService;->addGnssNavigationMessageListener'
'Lcom/android/server/LocationManagerService;->getBestProvider'
'Lcom/android/server/LocationManagerService;->getLastLocation'
'Lcom/android/server/LocationManagerService;->getProviderProperties'
'Lcom/android/server/LocationManagerService;->getProviders'
'Lcom/android/server/LocationManagerService;->registerGnssStatusCallback'
'Lcom/android/server/LocationManagerService;->removeUpdates'
'Lcom/android/server/LocationManagerService;->reportLocation'
'Lcom/android/server/LocationManagerService;->requestGeofence'
'Lcom/android/server/LocationManagerService;->requestLocationUpdates'
'Lcom/android/server/LocationManagerService;->sendExtraCommand'
'Lcom/android/server/LockSettingsService;->checkPassword'
'Lcom/android/server/LockSettingsService;->checkPattern'
'Lcom/android/server/LockSettingsService;->checkVoldPassword'
'Lcom/android/server/LockSettingsService;->getBoolean'
'Lcom/android/server/LockSettingsService;->getLong'
'Lcom/android/server/LockSettingsService;->getSeparateProfileChallengeEnabled'
'Lcom/android/server/LockSettingsService;->getString'
'Lcom/android/server/LockSettingsService;->getStrongAuthForUser'
'Lcom/android/server/LockSettingsService;->registerStrongAuthTracker'
'Lcom/android/server/LockSettingsService;->requireStrongAuth'
'Lcom/android/server/LockSettingsService;->resetKeyStore'
'Lcom/android/server/LockSettingsService;->setBoolean'
'Lcom/android/server/LockSettingsService;->setLockPassword'
'Lcom/android/server/LockSettingsService;->setLockPattern'
'Lcom/android/server/LockSettingsService;->setLong'
'Lcom/android/server/LockSettingsService;->setSeparateProfileChallengeEnabled'
'Lcom/android/server/LockSettingsService;->setString'
'Lcom/android/server/LockSettingsService;->systemReady'
'Lcom/android/server/LockSettingsService;->unregisterStrongAuthTracker'
'Lcom/android/server/LockSettingsService;->userPresent'
'Lcom/android/server/LockSettingsService;->verifyPassword'
'Lcom/android/server/LockSettingsService;->verifyPattern'
'Lcom/android/server/LockSettingsService;->verifyTiedProfileChallenge'
'Lcom/android/server/MmsServiceBroker$BinderService;->downloadMessage'
'Lcom/android/server/MmsServiceBroker$BinderService;->sendMessage'
'Lcom/android/server/MountService;->addUserKeyAuth'
'Lcom/android/server/MountService;->benchmark'
'Lcom/android/server/MountService;->changeEncryptionPassword'
'Lcom/android/server/MountService;->clearPassword'
'Lcom/android/server/MountService;->createSecureContainer'
'Lcom/android/server/MountService;->createUserKey'
'Lcom/android/server/MountService;->decryptStorage'
'Lcom/android/server/MountService;->destroySecureContainer'
'Lcom/android/server/MountService;->destroyUserKey'
'Lcom/android/server/MountService;->destroyUserStorage'
'Lcom/android/server/MountService;->encryptStorage'
'Lcom/android/server/MountService;->finalizeSecureContainer'
'Lcom/android/server/MountService;->fixPermissionsSecureContainer'
'Lcom/android/server/MountService;->fixateNewestUserKeyAuth'
'Lcom/android/server/MountService;->forgetAllVolumes'
'Lcom/android/server/MountService;->forgetVolume'
'Lcom/android/server/MountService;->format'
'Lcom/android/server/MountService;->formatVolume'
'Lcom/android/server/MountService;->getEncryptionState'
'Lcom/android/server/MountService;->getField'
'Lcom/android/server/MountService;->getPassword'
'Lcom/android/server/MountService;->getPasswordType'
'Lcom/android/server/MountService;->getPrimaryStorageUuid'
'Lcom/android/server/MountService;->getSecureContainerFilesystemPath'
'Lcom/android/server/MountService;->getSecureContainerList'
'Lcom/android/server/MountService;->getSecureContainerPath'
'Lcom/android/server/MountService;->getStorageUsers'
'Lcom/android/server/MountService;->isConvertibleToFBE'
'Lcom/android/server/MountService;->isSecureContainerMounted'
'Lcom/android/server/MountService;->lockUserKey'
'Lcom/android/server/MountService;->mount'
'Lcom/android/server/MountService;->mountSecureContainer'
'Lcom/android/server/MountService;->mountVolume'
'Lcom/android/server/MountService;->partitionMixed'
'Lcom/android/server/MountService;->partitionPrivate'
'Lcom/android/server/MountService;->partitionPublic'
'Lcom/android/server/MountService;->prepareUserStorage'
'Lcom/android/server/MountService;->renameSecureContainer'
'Lcom/android/server/MountService;->resizeSecureContainer'
'Lcom/android/server/MountService;->runMaintenance'
'Lcom/android/server/MountService;->setDebugFlags'
'Lcom/android/server/MountService;->setField'
'Lcom/android/server/MountService;->setPrimaryStorageUuid'
'Lcom/android/server/MountService;->setVolumeNickname'
'Lcom/android/server/MountService;->setVolumeUserFlags'
'Lcom/android/server/MountService;->shutdown'
'Lcom/android/server/MountService;->unlockUserKey'
'Lcom/android/server/MountService;->unmount'
'Lcom/android/server/MountService;->unmountSecureContainer'
'Lcom/android/server/MountService;->unmountVolume'
'Lcom/android/server/MountService;->verifyEncryptionPassword'
'Lcom/android/server/NetworkManagementService;->addIdleTimer'
'Lcom/android/server/NetworkManagementService;->addInterfaceToLocalNetwork'
'Lcom/android/server/NetworkManagementService;->addInterfaceToNetwork'
'Lcom/android/server/NetworkManagementService;->addLegacyRouteForNetId'
'Lcom/android/server/NetworkManagementService;->addRoute'
'Lcom/android/server/NetworkManagementService;->addVpnUidRanges'
'Lcom/android/server/NetworkManagementService;->allowProtect'
'Lcom/android/server/NetworkManagementService;->attachPppd'
'Lcom/android/server/NetworkManagementService;->clearDefaultNetId'
'Lcom/android/server/NetworkManagementService;->clearInterfaceAddresses'
'Lcom/android/server/NetworkManagementService;->clearPermission'
'Lcom/android/server/NetworkManagementService;->createPhysicalNetwork'
'Lcom/android/server/NetworkManagementService;->createVirtualNetwork'
'Lcom/android/server/NetworkManagementService;->denyProtect'
'Lcom/android/server/NetworkManagementService;->detachPppd'
'Lcom/android/server/NetworkManagementService;->disableIpv6'
'Lcom/android/server/NetworkManagementService;->disableNat'
'Lcom/android/server/NetworkManagementService;->enableIpv6'
'Lcom/android/server/NetworkManagementService;->enableNat'
'Lcom/android/server/NetworkManagementService;->getDnsForwarders'
'Lcom/android/server/NetworkManagementService;->getInterfaceConfig'
'Lcom/android/server/NetworkManagementService;->getIpForwardingEnabled'
'Lcom/android/server/NetworkManagementService;->getNetworkStatsDetail'
'Lcom/android/server/NetworkManagementService;->getNetworkStatsSummaryDev'
'Lcom/android/server/NetworkManagementService;->getNetworkStatsSummaryXt'
'Lcom/android/server/NetworkManagementService;->getNetworkStatsTethering'
'Lcom/android/server/NetworkManagementService;->getNetworkStatsUidDetail'
'Lcom/android/server/NetworkManagementService;->isBandwidthControlEnabled'
'Lcom/android/server/NetworkManagementService;->isClatdStarted'
'Lcom/android/server/NetworkManagementService;->isTetheringStarted'
'Lcom/android/server/NetworkManagementService;->listInterfaces'
'Lcom/android/server/NetworkManagementService;->listTetheredInterfaces'
'Lcom/android/server/NetworkManagementService;->listTtys'
'Lcom/android/server/NetworkManagementService;->registerObserver'
'Lcom/android/server/NetworkManagementService;->removeIdleTimer'
'Lcom/android/server/NetworkManagementService;->removeInterfaceAlert'
'Lcom/android/server/NetworkManagementService;->removeInterfaceFromLocalNetwork'
'Lcom/android/server/NetworkManagementService;->removeInterfaceFromNetwork'
'Lcom/android/server/NetworkManagementService;->removeInterfaceQuota'
'Lcom/android/server/NetworkManagementService;->removeNetwork'
'Lcom/android/server/NetworkManagementService;->removeRoute'
'Lcom/android/server/NetworkManagementService;->removeRoutesFromLocalNetwork'
'Lcom/android/server/NetworkManagementService;->removeVpnUidRanges'
'Lcom/android/server/NetworkManagementService;->setAccessPoint'
'Lcom/android/server/NetworkManagementService;->setDefaultNetId'
'Lcom/android/server/NetworkManagementService;->setDnsConfigurationForNetwork'
'Lcom/android/server/NetworkManagementService;->setDnsForwarders'
'Lcom/android/server/NetworkManagementService;->setDnsServersForNetwork'
'Lcom/android/server/NetworkManagementService;->setGlobalAlert'
'Lcom/android/server/NetworkManagementService;->setInterfaceAlert'
'Lcom/android/server/NetworkManagementService;->setInterfaceConfig'
'Lcom/android/server/NetworkManagementService;->setInterfaceDown'
'Lcom/android/server/NetworkManagementService;->setInterfaceIpv6NdOffload'
'Lcom/android/server/NetworkManagementService;->setInterfaceIpv6PrivacyExtensions'
'Lcom/android/server/NetworkManagementService;->setInterfaceQuota'
'Lcom/android/server/NetworkManagementService;->setInterfaceUp'
'Lcom/android/server/NetworkManagementService;->setIpForwardingEnabled'
'Lcom/android/server/NetworkManagementService;->setMtu'
'Lcom/android/server/NetworkManagementService;->setNetworkPermission'
'Lcom/android/server/NetworkManagementService;->setPermission'
'Lcom/android/server/NetworkManagementService;->setUidCleartextNetworkPolicy'
'Lcom/android/server/NetworkManagementService;->setUidMeteredNetworkBlacklist'
'Lcom/android/server/NetworkManagementService;->setUidMeteredNetworkWhitelist'
'Lcom/android/server/NetworkManagementService;->shutdown'
'Lcom/android/server/NetworkManagementService;->startAccessPoint'
'Lcom/android/server/NetworkManagementService;->startClatd'
'Lcom/android/server/NetworkManagementService;->startInterfaceForwarding'
'Lcom/android/server/NetworkManagementService;->startTethering'
'Lcom/android/server/NetworkManagementService;->stopAccessPoint'
'Lcom/android/server/NetworkManagementService;->stopClatd'
'Lcom/android/server/NetworkManagementService;->stopInterfaceForwarding'
'Lcom/android/server/NetworkManagementService;->stopTethering'
'Lcom/android/server/NetworkManagementService;->tetherInterface'
'Lcom/android/server/NetworkManagementService;->unregisterObserver'
'Lcom/android/server/NetworkManagementService;->untetherInterface'
'Lcom/android/server/NetworkManagementService;->wifiFirmwareReload'
'Lcom/android/server/NetworkScoreService;->clearScores'
'Lcom/android/server/NetworkScoreService;->disableScoring'
'Lcom/android/server/NetworkScoreService;->registerNetworkScoreCache'
'Lcom/android/server/NetworkScoreService;->setActiveScorer'
'Lcom/android/server/NetworkScoreService;->updateScores'
'Lcom/android/server/NsdService;->getMessenger'
'Lcom/android/server/NsdService;->setEnabled'
'Lcom/android/server/RecoverySystemService$BinderService;->clearBcb'
'Lcom/android/server/RecoverySystemService$BinderService;->rebootRecoveryWithCommand'
'Lcom/android/server/RecoverySystemService$BinderService;->setupBcb'
'Lcom/android/server/RecoverySystemService$BinderService;->uncrypt'
'Lcom/android/server/SerialService;->getSerialPorts'
'Lcom/android/server/SerialService;->openSerialPort'
'Lcom/android/server/TelephonyRegistry;->addOnSubscriptionsChangedListener'
'Lcom/android/server/TelephonyRegistry;->listen'
'Lcom/android/server/TelephonyRegistry;->listenForSubscriber'
'Lcom/android/server/TelephonyRegistry;->notifyCallForwardingChanged'
'Lcom/android/server/TelephonyRegistry;->notifyCallForwardingChangedForSubscriber'
'Lcom/android/server/TelephonyRegistry;->notifyCallState'
'Lcom/android/server/TelephonyRegistry;->notifyCallStateForPhoneId'
'Lcom/android/server/TelephonyRegistry;->notifyCarrierNetworkChange'
'Lcom/android/server/TelephonyRegistry;->notifyCellInfo'
'Lcom/android/server/TelephonyRegistry;->notifyCellInfoForSubscriber'
'Lcom/android/server/TelephonyRegistry;->notifyCellLocation'
'Lcom/android/server/TelephonyRegistry;->notifyCellLocationForSubscriber'
'Lcom/android/server/TelephonyRegistry;->notifyDataActivity'
'Lcom/android/server/TelephonyRegistry;->notifyDataActivityForSubscriber'
'Lcom/android/server/TelephonyRegistry;->notifyDataConnection'
'Lcom/android/server/TelephonyRegistry;->notifyDataConnectionFailed'
'Lcom/android/server/TelephonyRegistry;->notifyDataConnectionFailedForSubscriber'
'Lcom/android/server/TelephonyRegistry;->notifyDataConnectionForSubscriber'
'Lcom/android/server/TelephonyRegistry;->notifyDisconnectCause'
'Lcom/android/server/TelephonyRegistry;->notifyMessageWaitingChangedForPhoneId'
'Lcom/android/server/TelephonyRegistry;->notifyOemHookRawEventForSubscriber'
'Lcom/android/server/TelephonyRegistry;->notifyOtaspChanged'
'Lcom/android/server/TelephonyRegistry;->notifyPreciseCallState'
'Lcom/android/server/TelephonyRegistry;->notifyPreciseDataConnectionFailed'
'Lcom/android/server/TelephonyRegistry;->notifyServiceStateForPhoneId'
'Lcom/android/server/TelephonyRegistry;->notifySignalStrengthForPhoneId'
'Lcom/android/server/TelephonyRegistry;->notifyVoLteServiceStateChanged'
'Lcom/android/server/TextServicesManagerService;->setCurrentSpellChecker'
'Lcom/android/server/TextServicesManagerService;->setCurrentSpellCheckerSubtype'
'Lcom/android/server/TextServicesManagerService;->setSpellCheckerEnabled'
'Lcom/android/server/UpdateLockService;->acquireUpdateLock'
'Lcom/android/server/UpdateLockService;->releaseUpdateLock'
'Lcom/android/server/VibratorService;->cancelVibrate'
'Lcom/android/server/VibratorService;->vibrate'
'Lcom/android/server/VibratorService;->vibratePattern'
'Lcom/android/server/accessibility/AccessibilityManagerService$Service;->findAccessibilityNodeInfoByAccessibilityId'
'Lcom/android/server/accessibility/AccessibilityManagerService$Service;->findAccessibilityNodeInfosByText'
'Lcom/android/server/accessibility/AccessibilityManagerService$Service;->findAccessibilityNodeInfosByViewId'
'Lcom/android/server/accessibility/AccessibilityManagerService$Service;->findFocus'
'Lcom/android/server/accessibility/AccessibilityManagerService$Service;->focusSearch'
'Lcom/android/server/accessibility/AccessibilityManagerService$Service;->getMagnificationCenterX'
'Lcom/android/server/accessibility/AccessibilityManagerService$Service;->getMagnificationCenterY'
'Lcom/android/server/accessibility/AccessibilityManagerService$Service;->getMagnificationRegion'
'Lcom/android/server/accessibility/AccessibilityManagerService$Service;->getMagnificationScale'
'Lcom/android/server/accessibility/AccessibilityManagerService$Service;->getWindow'
'Lcom/android/server/accessibility/AccessibilityManagerService$Service;->getWindows'
'Lcom/android/server/accessibility/AccessibilityManagerService$Service;->performAccessibilityAction'
'Lcom/android/server/accessibility/AccessibilityManagerService$Service;->performGlobalAction'
'Lcom/android/server/accessibility/AccessibilityManagerService$Service;->resetMagnification'
'Lcom/android/server/accessibility/AccessibilityManagerService$Service;->setMagnificationScaleAndCenter'
'Lcom/android/server/accessibility/AccessibilityManagerService$Service;->setSoftKeyboardShowMode'
'Lcom/android/server/accessibility/AccessibilityManagerService;->addAccessibilityInteractionConnection'
'Lcom/android/server/accessibility/AccessibilityManagerService;->addClient'
'Lcom/android/server/accessibility/AccessibilityManagerService;->disableAccessibilityService'
'Lcom/android/server/accessibility/AccessibilityManagerService;->enableAccessibilityService'
'Lcom/android/server/accessibility/AccessibilityManagerService;->getEnabledAccessibilityServiceList'
'Lcom/android/server/accessibility/AccessibilityManagerService;->getInstalledAccessibilityServiceList'
'Lcom/android/server/accessibility/AccessibilityManagerService;->getWindowToken'
'Lcom/android/server/accessibility/AccessibilityManagerService;->interrupt'
'Lcom/android/server/accessibility/AccessibilityManagerService;->removeAccessibilityInteractionConnection'
'Lcom/android/server/accessibility/AccessibilityManagerService;->sendAccessibilityEvent'
'Lcom/android/server/accessibility/AccessibilityManagerService;->temporaryEnableAccessibilityStateUntilKeyguardRemoved'
'Lcom/android/server/accounts/AccountManagerService;->addAccountAsUser'
'Lcom/android/server/accounts/AccountManagerService;->addSharedAccountsFromParentUser'
'Lcom/android/server/accounts/AccountManagerService;->confirmCredentialsAsUser'
'Lcom/android/server/accounts/AccountManagerService;->copyAccountToUser'
'Lcom/android/server/accounts/AccountManagerService;->finishSessionAsUser'
'Lcom/android/server/accounts/AccountManagerService;->getAccounts'
'Lcom/android/server/accounts/AccountManagerService;->getAccountsAsUser'
'Lcom/android/server/accounts/AccountManagerService;->getAccountsByTypeForPackage'
'Lcom/android/server/accounts/AccountManagerService;->getAccountsForPackage'
'Lcom/android/server/accounts/AccountManagerService;->getAuthenticatorTypes'
'Lcom/android/server/accounts/AccountManagerService;->removeAccount'
'Lcom/android/server/accounts/AccountManagerService;->removeAccountAsUser'
'Lcom/android/server/am/ActivityManagerService;->appNotRespondingViaProvider'
'Lcom/android/server/am/ActivityManagerService;->bindBackupAgent'
'Lcom/android/server/am/ActivityManagerService;->bindService'
'Lcom/android/server/am/ActivityManagerService;->bootAnimationComplete'
'Lcom/android/server/am/ActivityManagerService;->clearGrantedUriPermissions'
'Lcom/android/server/am/ActivityManagerService;->clearPendingBackup'
'Lcom/android/server/am/ActivityManagerService;->crashApplication'
'Lcom/android/server/am/ActivityManagerService;->createStackOnDisplay'
'Lcom/android/server/am/ActivityManagerService;->createVirtualActivityContainer'
'Lcom/android/server/am/ActivityManagerService;->deleteActivityContainer'
'Lcom/android/server/am/ActivityManagerService;->dumpHeap'
'Lcom/android/server/am/ActivityManagerService;->finishHeavyWeightApp'
'Lcom/android/server/am/ActivityManagerService;->forceStopPackage'
'Lcom/android/server/am/ActivityManagerService;->getAllStackInfos'
'Lcom/android/server/am/ActivityManagerService;->getAssistContextExtras'
'Lcom/android/server/am/ActivityManagerService;->getContentProviderExternal'
'Lcom/android/server/am/ActivityManagerService;->getCurrentUser'
'Lcom/android/server/am/ActivityManagerService;->getGrantedUriPermissions'
'Lcom/android/server/am/ActivityManagerService;->getIntentForIntentSender'
'Lcom/android/server/am/ActivityManagerService;->getPackageProcessState'
'Lcom/android/server/am/ActivityManagerService;->getRecentTasks'
'Lcom/android/server/am/ActivityManagerService;->getRunningAppProcesses'
'Lcom/android/server/am/ActivityManagerService;->getRunningExternalApplications'
'Lcom/android/server/am/ActivityManagerService;->getRunningUserIds'
'Lcom/android/server/am/ActivityManagerService;->getStackInfo'
'Lcom/android/server/am/ActivityManagerService;->getTaskBounds'
'Lcom/android/server/am/ActivityManagerService;->getTaskDescriptionIcon'
'Lcom/android/server/am/ActivityManagerService;->getTaskThumbnail'
'Lcom/android/server/am/ActivityManagerService;->getTasks'
'Lcom/android/server/am/ActivityManagerService;->hang'
'Lcom/android/server/am/ActivityManagerService;->inputDispatchingTimedOut'
'Lcom/android/server/am/ActivityManagerService;->isInHomeStack'
'Lcom/android/server/am/ActivityManagerService;->isUserRunning'
'Lcom/android/server/am/ActivityManagerService;->killAllBackgroundProcesses'
'Lcom/android/server/am/ActivityManagerService;->killBackgroundProcesses'
'Lcom/android/server/am/ActivityManagerService;->killPackageDependents'
'Lcom/android/server/am/ActivityManagerService;->killUid'
'Lcom/android/server/am/ActivityManagerService;->launchAssistIntent'
'Lcom/android/server/am/ActivityManagerService;->moveTaskBackwards'
'Lcom/android/server/am/ActivityManagerService;->moveTaskToDockedStack'
'Lcom/android/server/am/ActivityManagerService;->moveTaskToFront'
'Lcom/android/server/am/ActivityManagerService;->moveTaskToStack'
'Lcom/android/server/am/ActivityManagerService;->moveTasksToFullscreenStack'
'Lcom/android/server/am/ActivityManagerService;->moveTopActivityToPinnedStack'
'Lcom/android/server/am/ActivityManagerService;->navigateUpTo'
'Lcom/android/server/am/ActivityManagerService;->performIdleMaintenance'
'Lcom/android/server/am/ActivityManagerService;->positionTaskInStack'
'Lcom/android/server/am/ActivityManagerService;->profileControl'
'Lcom/android/server/am/ActivityManagerService;->registerProcessObserver'
'Lcom/android/server/am/ActivityManagerService;->registerTaskStackListener'
'Lcom/android/server/am/ActivityManagerService;->registerUidObserver'
'Lcom/android/server/am/ActivityManagerService;->registerUserSwitchObserver'
'Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternal'
'Lcom/android/server/am/ActivityManagerService;->removeStack'
'Lcom/android/server/am/ActivityManagerService;->removeTask'
'Lcom/android/server/am/ActivityManagerService;->requestAssistContextExtras'
'Lcom/android/server/am/ActivityManagerService;->requestBugReport'
'Lcom/android/server/am/ActivityManagerService;->resizeDockedStack'
'Lcom/android/server/am/ActivityManagerService;->resizePinnedStack'
'Lcom/android/server/am/ActivityManagerService;->resizeStack'
'Lcom/android/server/am/ActivityManagerService;->resizeTask'
'Lcom/android/server/am/ActivityManagerService;->restart'
'Lcom/android/server/am/ActivityManagerService;->resumeAppSwitches'
'Lcom/android/server/am/ActivityManagerService;->sendIdleJobTrigger'
'Lcom/android/server/am/ActivityManagerService;->setActivityController'
'Lcom/android/server/am/ActivityManagerService;->setAlwaysFinish'
'Lcom/android/server/am/ActivityManagerService;->setDebugApp'
'Lcom/android/server/am/ActivityManagerService;->setDumpHeapDebugLimit'
'Lcom/android/server/am/ActivityManagerService;->setFocusedStack'
'Lcom/android/server/am/ActivityManagerService;->setFocusedTask'
'Lcom/android/server/am/ActivityManagerService;->setFrontActivityScreenCompatMode'
'Lcom/android/server/am/ActivityManagerService;->setHasTopUi'
'Lcom/android/server/am/ActivityManagerService;->setLenientBackgroundCheck'
'Lcom/android/server/am/ActivityManagerService;->setLockScreenShown'
'Lcom/android/server/am/ActivityManagerService;->setPackageAskScreenCompat'
'Lcom/android/server/am/ActivityManagerService;->setPackageScreenCompatMode'
'Lcom/android/server/am/ActivityManagerService;->setProcessForeground'
'Lcom/android/server/am/ActivityManagerService;->setProcessLimit'
'Lcom/android/server/am/ActivityManagerService;->setTaskDescription'
'Lcom/android/server/am/ActivityManagerService;->shutdown'
'Lcom/android/server/am/ActivityManagerService;->signalPersistentProcesses'
'Lcom/android/server/am/ActivityManagerService;->startActivities'
'Lcom/android/server/am/ActivityManagerService;->startActivity'
'Lcom/android/server/am/ActivityManagerService;->startActivityAndWait'
'Lcom/android/server/am/ActivityManagerService;->startActivityAsCaller'
'Lcom/android/server/am/ActivityManagerService;->startActivityAsUser'
'Lcom/android/server/am/ActivityManagerService;->startActivityFromRecents'
'Lcom/android/server/am/ActivityManagerService;->startActivityWithConfig'
'Lcom/android/server/am/ActivityManagerService;->startBinderTracking'
'Lcom/android/server/am/ActivityManagerService;->startConfirmDeviceCredentialIntent'
'Lcom/android/server/am/ActivityManagerService;->startSystemLockTaskMode'
'Lcom/android/server/am/ActivityManagerService;->startUserInBackground'
'Lcom/android/server/am/ActivityManagerService;->startVoiceActivity'
'Lcom/android/server/am/ActivityManagerService;->stopAppSwitches'
'Lcom/android/server/am/ActivityManagerService;->stopBinderTrackingAndDump'
'Lcom/android/server/am/ActivityManagerService;->stopLockTaskMode'
'Lcom/android/server/am/ActivityManagerService;->stopService'
'Lcom/android/server/am/ActivityManagerService;->stopServiceToken'
'Lcom/android/server/am/ActivityManagerService;->stopSystemLockTaskMode'
'Lcom/android/server/am/ActivityManagerService;->stopUser'
'Lcom/android/server/am/ActivityManagerService;->suppressResizeConfigChanges'
'Lcom/android/server/am/ActivityManagerService;->swapDockedAndFullscreenStack'
'Lcom/android/server/am/ActivityManagerService;->unbindService'
'Lcom/android/server/am/ActivityManagerService;->unbroadcastIntent'
'Lcom/android/server/am/ActivityManagerService;->unhandledBack'
'Lcom/android/server/am/ActivityManagerService;->unlockUser'
'Lcom/android/server/am/ActivityManagerService;->updateConfiguration'
'Lcom/android/server/am/ActivityManagerService;->updatePersistentConfiguration'
'Lcom/android/server/am/BatteryStatsService;->getAwakeTimeBattery'
'Lcom/android/server/am/BatteryStatsService;->getAwakeTimePlugged'
'Lcom/android/server/am/BatteryStatsService;->getStatistics'
'Lcom/android/server/am/BatteryStatsService;->getStatisticsStream'
'Lcom/android/server/am/BatteryStatsService;->noteBleScanStarted'
'Lcom/android/server/am/BatteryStatsService;->noteBleScanStopped'
'Lcom/android/server/am/BatteryStatsService;->noteBluetoothControllerActivity'
'Lcom/android/server/am/BatteryStatsService;->noteChangeWakelockFromSource'
'Lcom/android/server/am/BatteryStatsService;->noteConnectivityChanged'
'Lcom/android/server/am/BatteryStatsService;->noteDeviceIdleMode'
'Lcom/android/server/am/BatteryStatsService;->noteEvent'
'Lcom/android/server/am/BatteryStatsService;->noteFlashlightOff'
'Lcom/android/server/am/BatteryStatsService;->noteFlashlightOn'
'Lcom/android/server/am/BatteryStatsService;->noteFullWifiLockAcquired'
'Lcom/android/server/am/BatteryStatsService;->noteFullWifiLockAcquiredFromSource'
'Lcom/android/server/am/BatteryStatsService;->noteFullWifiLockReleased'
'Lcom/android/server/am/BatteryStatsService;->noteFullWifiLockReleasedFromSource'
'Lcom/android/server/am/BatteryStatsService;->noteInteractive'
'Lcom/android/server/am/BatteryStatsService;->noteJobFinish'
'Lcom/android/server/am/BatteryStatsService;->noteJobStart'
'Lcom/android/server/am/BatteryStatsService;->noteLongPartialWakelockFinish'
'Lcom/android/server/am/BatteryStatsService;->noteLongPartialWakelockStart'
'Lcom/android/server/am/BatteryStatsService;->noteMobileRadioPowerState'
'Lcom/android/server/am/BatteryStatsService;->noteModemControllerActivity'
'Lcom/android/server/am/BatteryStatsService;->noteNetworkInterfaceType'
'Lcom/android/server/am/BatteryStatsService;->noteNetworkStatsEnabled'
'Lcom/android/server/am/BatteryStatsService;->notePhoneDataConnectionState'
'Lcom/android/server/am/BatteryStatsService;->notePhoneOff'
'Lcom/android/server/am/BatteryStatsService;->notePhoneOn'
'Lcom/android/server/am/BatteryStatsService;->notePhoneSignalStrength'
'Lcom/android/server/am/BatteryStatsService;->notePhoneState'
'Lcom/android/server/am/BatteryStatsService;->noteResetAudio'
'Lcom/android/server/am/BatteryStatsService;->noteResetBleScan'
'Lcom/android/server/am/BatteryStatsService;->noteResetCamera'
'Lcom/android/server/am/BatteryStatsService;->noteResetFlashlight'
'Lcom/android/server/am/BatteryStatsService;->noteResetVideo'
'Lcom/android/server/am/BatteryStatsService;->noteScreenBrightness'
'Lcom/android/server/am/BatteryStatsService;->noteScreenState'
'Lcom/android/server/am/BatteryStatsService;->noteStartAudio'
'Lcom/android/server/am/BatteryStatsService;->noteStartCamera'
'Lcom/android/server/am/BatteryStatsService;->noteStartGps'
'Lcom/android/server/am/BatteryStatsService;->noteStartSensor'
'Lcom/android/server/am/BatteryStatsService;->noteStartVideo'
'Lcom/android/server/am/BatteryStatsService;->noteStartWakelock'
'Lcom/android/server/am/BatteryStatsService;->noteStartWakelockFromSource'
'Lcom/android/server/am/BatteryStatsService;->noteStopAudio'
'Lcom/android/server/am/BatteryStatsService;->noteStopCamera'
'Lcom/android/server/am/BatteryStatsService;->noteStopGps'
'Lcom/android/server/am/BatteryStatsService;->noteStopSensor'
'Lcom/android/server/am/BatteryStatsService;->noteStopVideo'
'Lcom/android/server/am/BatteryStatsService;->noteStopWakelock'
'Lcom/android/server/am/BatteryStatsService;->noteStopWakelockFromSource'
'Lcom/android/server/am/BatteryStatsService;->noteSyncFinish'
'Lcom/android/server/am/BatteryStatsService;->noteSyncStart'
'Lcom/android/server/am/BatteryStatsService;->noteUserActivity'
'Lcom/android/server/am/BatteryStatsService;->noteVibratorOff'
'Lcom/android/server/am/BatteryStatsService;->noteVibratorOn'
'Lcom/android/server/am/BatteryStatsService;->noteWakeUp'
'Lcom/android/server/am/BatteryStatsService;->noteWifiBatchedScanStartedFromSource'
'Lcom/android/server/am/BatteryStatsService;->noteWifiBatchedScanStoppedFromSource'
'Lcom/android/server/am/BatteryStatsService;->noteWifiControllerActivity'
'Lcom/android/server/am/BatteryStatsService;->noteWifiMulticastDisabled'
'Lcom/android/server/am/BatteryStatsService;->noteWifiMulticastDisabledFromSource'
'Lcom/android/server/am/BatteryStatsService;->noteWifiMulticastEnabled'
'Lcom/android/server/am/BatteryStatsService;->noteWifiMulticastEnabledFromSource'
'Lcom/android/server/am/BatteryStatsService;->noteWifiOff'
'Lcom/android/server/am/BatteryStatsService;->noteWifiOn'
'Lcom/android/server/am/BatteryStatsService;->noteWifiRadioPowerState'
'Lcom/android/server/am/BatteryStatsService;->noteWifiRssiChanged'
'Lcom/android/server/am/BatteryStatsService;->noteWifiRunning'
'Lcom/android/server/am/BatteryStatsService;->noteWifiRunningChanged'
'Lcom/android/server/am/BatteryStatsService;->noteWifiScanStarted'
'Lcom/android/server/am/BatteryStatsService;->noteWifiScanStartedFromSource'
'Lcom/android/server/am/BatteryStatsService;->noteWifiScanStopped'
'Lcom/android/server/am/BatteryStatsService;->noteWifiScanStoppedFromSource'
'Lcom/android/server/am/BatteryStatsService;->noteWifiState'
'Lcom/android/server/am/BatteryStatsService;->noteWifiStopped'
'Lcom/android/server/am/BatteryStatsService;->noteWifiSupplicantStateChanged'
'Lcom/android/server/am/BatteryStatsService;->setBatteryState'
'Lcom/android/server/am/BatteryStatsService;->takeUidSnapshot'
'Lcom/android/server/am/BatteryStatsService;->takeUidSnapshots'
'Lcom/android/server/am/PendingIntentRecord;->send'
'Lcom/android/server/am/ProcessStatsService;->getCurrentStats'
'Lcom/android/server/am/ProcessStatsService;->getStatsOverTime'
'Lcom/android/server/appwidget/AppWidgetServiceImpl;->bindAppWidgetId'
'Lcom/android/server/appwidget/AppWidgetServiceImpl;->bindRemoteViewsService'
'Lcom/android/server/appwidget/AppWidgetServiceImpl;->createAppWidgetConfigIntentSender'
'Lcom/android/server/appwidget/AppWidgetServiceImpl;->deleteAppWidgetId'
'Lcom/android/server/appwidget/AppWidgetServiceImpl;->getAppWidgetInfo'
'Lcom/android/server/appwidget/AppWidgetServiceImpl;->getAppWidgetOptions'
'Lcom/android/server/appwidget/AppWidgetServiceImpl;->getAppWidgetViews'
'Lcom/android/server/appwidget/AppWidgetServiceImpl;->hasBindAppWidgetPermission'
'Lcom/android/server/appwidget/AppWidgetServiceImpl;->notifyAppWidgetViewDataChanged'
'Lcom/android/server/appwidget/AppWidgetServiceImpl;->partiallyUpdateAppWidgetIds'
'Lcom/android/server/appwidget/AppWidgetServiceImpl;->setBindAppWidgetPermission'
'Lcom/android/server/appwidget/AppWidgetServiceImpl;->unbindRemoteViewsService'
'Lcom/android/server/appwidget/AppWidgetServiceImpl;->updateAppWidgetIds'
'Lcom/android/server/appwidget/AppWidgetServiceImpl;->updateAppWidgetOptions'
'Lcom/android/server/audio/AudioService;->disableSafeMediaVolume'
'Lcom/android/server/audio/AudioService;->forceRemoteSubmixFullVolume'
'Lcom/android/server/audio/AudioService;->notifyVolumeControllerVisible'
'Lcom/android/server/audio/AudioService;->registerAudioPolicy'
'Lcom/android/server/audio/AudioService;->requestAudioFocus'
'Lcom/android/server/audio/AudioService;->setBluetoothScoOn'
'Lcom/android/server/audio/AudioService;->setFocusPropertiesForPolicy'
'Lcom/android/server/audio/AudioService;->setMasterMute'
'Lcom/android/server/audio/AudioService;->setMicrophoneMute'
'Lcom/android/server/audio/AudioService;->setMode'
'Lcom/android/server/audio/AudioService;->setRingerModeInternal'
'Lcom/android/server/audio/AudioService;->setRingtonePlayer'
'Lcom/android/server/audio/AudioService;->setSpeakerphoneOn'
'Lcom/android/server/audio/AudioService;->setVolumeController'
'Lcom/android/server/audio/AudioService;->setVolumePolicy'
'Lcom/android/server/audio/AudioService;->startBluetoothSco'
'Lcom/android/server/audio/AudioService;->startBluetoothScoVirtualCall'
'Lcom/android/server/audio/AudioService;->stopBluetoothSco'
'Lcom/android/server/backup/BackupManagerService$ActiveRestoreSession;->getAvailableRestoreSets'
'Lcom/android/server/backup/BackupManagerService$ActiveRestoreSession;->restoreAll'
'Lcom/android/server/backup/BackupManagerService$ActiveRestoreSession;->restorePackage'
'Lcom/android/server/backup/BackupManagerService$ActiveRestoreSession;->restoreSome'
'Lcom/android/server/backup/Trampoline;->acknowledgeFullBackupOrRestore'
'Lcom/android/server/backup/Trampoline;->backupNow'
'Lcom/android/server/backup/Trampoline;->beginRestoreSession'
'Lcom/android/server/backup/Trampoline;->clearBackupData'
'Lcom/android/server/backup/Trampoline;->dataChanged'
'Lcom/android/server/backup/Trampoline;->fullBackup'
'Lcom/android/server/backup/Trampoline;->fullRestore'
'Lcom/android/server/backup/Trampoline;->fullTransportBackup'
'Lcom/android/server/backup/Trampoline;->getAvailableRestoreToken'
'Lcom/android/server/backup/Trampoline;->getConfigurationIntent'
'Lcom/android/server/backup/Trampoline;->getCurrentTransport'
'Lcom/android/server/backup/Trampoline;->getDataManagementIntent'
'Lcom/android/server/backup/Trampoline;->getDataManagementLabel'
'Lcom/android/server/backup/Trampoline;->getDestinationString'
'Lcom/android/server/backup/Trampoline;->hasBackupPassword'
'Lcom/android/server/backup/Trampoline;->isAppEligibleForBackup'
'Lcom/android/server/backup/Trampoline;->isBackupEnabled'
'Lcom/android/server/backup/Trampoline;->listAllTransports'
'Lcom/android/server/backup/Trampoline;->requestBackup'
'Lcom/android/server/backup/Trampoline;->restoreAtInstall'
'Lcom/android/server/backup/Trampoline;->selectBackupTransport'
'Lcom/android/server/backup/Trampoline;->setAutoRestore'
'Lcom/android/server/backup/Trampoline;->setBackupEnabled'
'Lcom/android/server/backup/Trampoline;->setBackupPassword'
'Lcom/android/server/backup/Trampoline;->setBackupProvisioned'
'Lcom/android/server/connectivity/IpConnectivityMetrics$Impl;->logEvent'
'Lcom/android/server/connectivity/MetricsLoggerService$MetricsLoggerImpl;->getEvents'
'Lcom/android/server/connectivity/MetricsLoggerService$MetricsLoggerImpl;->logEvent'
'Lcom/android/server/connectivity/MetricsLoggerService$MetricsLoggerImpl;->logEvents'
'Lcom/android/server/connectivity/MetricsLoggerService$MetricsLoggerImpl;->register'
'Lcom/android/server/connectivity/MetricsLoggerService$MetricsLoggerImpl;->unregister'
'Lcom/android/server/content/ContentService;->addPeriodicSync'
'Lcom/android/server/content/ContentService;->cancelSync'
'Lcom/android/server/content/ContentService;->cancelSyncAsUser'
'Lcom/android/server/content/ContentService;->getCache'
'Lcom/android/server/content/ContentService;->getCurrentSyncs'
'Lcom/android/server/content/ContentService;->getCurrentSyncsAsUser'
'Lcom/android/server/content/ContentService;->getIsSyncable'
'Lcom/android/server/content/ContentService;->getIsSyncableAsUser'
'Lcom/android/server/content/ContentService;->getMasterSyncAutomatically'
'Lcom/android/server/content/ContentService;->getMasterSyncAutomaticallyAsUser'
'Lcom/android/server/content/ContentService;->getPeriodicSyncs'
'Lcom/android/server/content/ContentService;->getSyncAdapterPackagesForAuthorityAsUser'
'Lcom/android/server/content/ContentService;->getSyncAdapterTypes'
'Lcom/android/server/content/ContentService;->getSyncAdapterTypesAsUser'
'Lcom/android/server/content/ContentService;->getSyncAutomatically'
'Lcom/android/server/content/ContentService;->getSyncAutomaticallyAsUser'
'Lcom/android/server/content/ContentService;->getSyncStatus'
'Lcom/android/server/content/ContentService;->getSyncStatusAsUser'
'Lcom/android/server/content/ContentService;->isSyncActive'
'Lcom/android/server/content/ContentService;->isSyncPending'
'Lcom/android/server/content/ContentService;->isSyncPendingAsUser'
'Lcom/android/server/content/ContentService;->putCache'
'Lcom/android/server/content/ContentService;->registerContentObserver'
'Lcom/android/server/content/ContentService;->removePeriodicSync'
'Lcom/android/server/content/ContentService;->setIsSyncable'
'Lcom/android/server/content/ContentService;->setMasterSyncAutomatically'
'Lcom/android/server/content/ContentService;->setMasterSyncAutomaticallyAsUser'
'Lcom/android/server/content/ContentService;->setSyncAutomatically'
'Lcom/android/server/content/ContentService;->setSyncAutomaticallyAsUser'
'Lcom/android/server/content/ContentService;->sync'
'Lcom/android/server/content/ContentService;->syncAsUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->addCrossProfileIntentFilter'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->addCrossProfileWidgetProvider'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->addPersistentPreferredActivity'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->approveCaCert'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->choosePrivateKeyAlias'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->clearCrossProfileIntentFilters'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->clearDeviceOwner'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->clearPackagePersistentPreferredActivities'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->clearProfileOwner'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->createAndManageUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enableSystemApp'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enableSystemAppWithIntent'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageCaCerts'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->forceRemoveActiveAdmin'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getAccountTypesWithManagementDisabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getAccountTypesWithManagementDisabledAsUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdmins'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getAlwaysOnVpnPackage'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getApplicationRestrictions'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getApplicationRestrictionsManagingPackage'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getAutoTimeRequired'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getBluetoothContactSharingDisabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getBluetoothContactSharingDisabledForUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCameraDisabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCertInstallerPackage'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCrossProfileCallerIdDisabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCrossProfileCallerIdDisabledForUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCrossProfileContactsSearchDisabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCrossProfileContactsSearchDisabledForUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCrossProfileWidgetProviders'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCurrentFailedPasswordAttempts'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerComponent'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerName'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerUserId'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDoNotAskCredentialsOnBoot'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getForceEphemeralUsers'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getGlobalProxyAdmin'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getKeepUninstalledPackages'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getKeyguardDisabledFeatures'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockTaskPackages'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLongSupportMessage'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLongSupportMessageForUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getMaximumFailedPasswordsForWipe'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getMaximumTimeToLock'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getMaximumTimeToLockForUserAndProfiles'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getOrganizationColor'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getOrganizationColorForUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getOrganizationName'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getOrganizationNameForUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordExpiration'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordExpirationTimeout'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordHistoryLength'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumLength'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumLetters'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumLowerCase'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumNonLetter'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumNumeric'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumSymbols'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumUpperCase'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordQuality'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPermissionGrantState'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPermissionPolicy'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPermittedAccessibilityServices'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPermittedAccessibilityServicesForUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPermittedInputMethods'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPermittedInputMethodsForCurrentUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerName'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileWithMinimumFailedPasswordsForWipe'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getRemoveWarning'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getRequiredStrongAuthTimeout'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getRestrictionsProvider'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getScreenCaptureDisabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getShortSupportMessage'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getShortSupportMessageForUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getStorageEncryption'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getStorageEncryptionStatus'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getTrustAgentConfiguration'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserProvisioningState'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserRestrictions'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getWifiMacAddress'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasGrantedPolicy'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasUserSetupCompleted'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->installCaCert'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->installKeyPair'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAccessibilityServicePermittedByAdmin'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isActivePasswordSufficient'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAdminActive'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAffiliatedUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isApplicationHidden'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isBackupServiceEnabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCaCertApproved'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerApplicationRestrictionsManagingPackage'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceProvisioningConfigApplied'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isInputMethodPermittedByAdmin'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isLockTaskPermitted'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isMasterVolumeMuted'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isPackageSuspended'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isProfileActivePasswordSufficientForParent'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isProvisioningAllowed'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isRemovingAdmin'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isSecurityLoggingEnabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isSystemOnlyUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isUninstallBlocked'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isUninstallInQueue'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->lockNow'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->notifyLockTaskModeChanged'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->notifyPendingSystemUpdate'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->packageHasActiveAdmins'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->reboot'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->removeActiveAdmin'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->removeCrossProfileWidgetProvider'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->removeKeyPair'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->removeUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->reportFailedFingerprintAttempt'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->reportFailedPasswordAttempt'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->reportKeyguardDismissed'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->reportKeyguardSecured'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->reportSuccessfulFingerprintAttempt'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->reportSuccessfulPasswordAttempt'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->requestBugreport'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->resetPassword'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->retrievePreRebootSecurityLogs'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->retrieveSecurityLogs'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setAccountManagementDisabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setActiveAdmin'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setActivePasswordState'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setAffiliationIds'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setAlwaysOnVpnPackage'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setApplicationHidden'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setApplicationRestrictions'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setApplicationRestrictionsManagingPackage'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setAutoTimeRequired'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setBackupServiceEnabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setBluetoothContactSharingDisabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setCameraDisabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setCertInstallerPackage'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setCrossProfileCallerIdDisabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setCrossProfileContactsSearchDisabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setDeviceOwner'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setDeviceOwnerLockScreenInfo'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setDeviceProvisioningConfigApplied'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setForceEphemeralUsers'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setGlobalProxy'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setGlobalSetting'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setKeepUninstalledPackages'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setKeyguardDisabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setKeyguardDisabledFeatures'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setLockTaskPackages'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setLongSupportMessage'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setMasterVolumeMuted'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setMaximumFailedPasswordsForWipe'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setMaximumTimeToLock'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setOrganizationColor'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setOrganizationColorForUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setOrganizationName'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setPackagesSuspended'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setPasswordExpirationTimeout'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setPasswordHistoryLength'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setPasswordMinimumLength'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setPasswordMinimumLetters'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setPasswordMinimumLowerCase'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setPasswordMinimumNonLetter'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setPasswordMinimumNumeric'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setPasswordMinimumSymbols'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setPasswordMinimumUpperCase'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setPasswordQuality'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setPermissionGrantState'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setPermissionPolicy'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setPermittedAccessibilityServices'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setPermittedInputMethods'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setProfileEnabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setProfileName'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setProfileOwner'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setRecommendedGlobalProxy'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setRequiredStrongAuthTimeout'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setRestrictionsProvider'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setScreenCaptureDisabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setSecureSetting'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setSecurityLoggingEnabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setShortSupportMessage'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setStatusBarDisabled'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setStorageEncryption'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setSystemUpdatePolicy'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setTrustAgentConfiguration'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setUninstallBlocked'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setUserIcon'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setUserProvisioningState'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setUserRestriction'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->switchUser'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->uninstallCaCerts'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->uninstallPackageWithActiveAdmins'
'Lcom/android/server/devicepolicy/DevicePolicyManagerService;->wipeData'
'Lcom/android/server/display/DisplayManagerService$BinderService;->connectWifiDisplay'
'Lcom/android/server/display/DisplayManagerService$BinderService;->createVirtualDisplay'
'Lcom/android/server/display/DisplayManagerService$BinderService;->forgetWifiDisplay'
'Lcom/android/server/display/DisplayManagerService$BinderService;->pauseWifiDisplay'
'Lcom/android/server/display/DisplayManagerService$BinderService;->renameWifiDisplay'
'Lcom/android/server/display/DisplayManagerService$BinderService;->requestColorMode'
'Lcom/android/server/display/DisplayManagerService$BinderService;->resumeWifiDisplay'
'Lcom/android/server/display/DisplayManagerService$BinderService;->startWifiDisplayScan'
'Lcom/android/server/display/DisplayManagerService$BinderService;->stopWifiDisplayScan'
'Lcom/android/server/dreams/DreamManagerService$BinderService;->awaken'
'Lcom/android/server/dreams/DreamManagerService$BinderService;->dream'
'Lcom/android/server/dreams/DreamManagerService$BinderService;->getDefaultDreamComponent'
'Lcom/android/server/dreams/DreamManagerService$BinderService;->getDreamComponents'
'Lcom/android/server/dreams/DreamManagerService$BinderService;->isDreaming'
'Lcom/android/server/dreams/DreamManagerService$BinderService;->setDreamComponents'
'Lcom/android/server/dreams/DreamManagerService$BinderService;->testDream'
'Lcom/android/server/ethernet/EthernetServiceImpl;->addListener'
'Lcom/android/server/ethernet/EthernetServiceImpl;->getConfiguration'
'Lcom/android/server/ethernet/EthernetServiceImpl;->isAvailable'
'Lcom/android/server/ethernet/EthernetServiceImpl;->removeListener'
'Lcom/android/server/ethernet/EthernetServiceImpl;->setConfiguration'
'Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper;->authenticate'
'Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper;->cancelAuthentication'
'Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper;->cancelEnrollment'
'Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper;->enroll'
'Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper;->getEnrolledFingerprints'
'Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper;->hasEnrolledFingerprints'
'Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper;->isHardwareDetected'
'Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper;->postEnroll'
'Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper;->preEnroll'
'Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper;->remove'
'Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper;->rename'
'Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper;->resetTimeout'
'Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper;->setActiveUser'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->addDeviceEventListener'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->addHdmiMhlVendorCommandListener'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->addHotplugEventListener'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->addSystemAudioModeChangeListener'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->addVendorCommandListener'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->canChangeSystemAudioMode'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->clearTimerRecording'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->deviceSelect'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->getActiveSource'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->getDeviceList'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->getInputDevices'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->getPortInfo'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->getSupportedTypes'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->getSystemAudioMode'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->oneTouchPlay'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->portSelect'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->queryDisplayStatus'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->removeHotplugEventListener'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->removeSystemAudioModeChangeListener'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->sendKeyEvent'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->sendMhlVendorCommand'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->sendStandby'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->sendVendorCommand'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->setArcMode'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->setHdmiRecordListener'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->setInputChangeListener'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->setProhibitMode'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->setSystemAudioMode'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->setSystemAudioMute'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->setSystemAudioVolume'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->startOneTouchRecord'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->startTimerRecording'
'Lcom/android/server/hdmi/HdmiControlService$BinderService;->stopOneTouchRecord'
'Lcom/android/server/input/InputManagerService;->addKeyboardLayoutForInputDevice'
'Lcom/android/server/input/InputManagerService;->isInTabletMode'
'Lcom/android/server/input/InputManagerService;->registerTabletModeChangedListener'
'Lcom/android/server/input/InputManagerService;->removeKeyboardLayoutForInputDevice'
'Lcom/android/server/input/InputManagerService;->setCurrentKeyboardLayoutForInputDevice'
'Lcom/android/server/input/InputManagerService;->setKeyboardLayoutForInputDevice'
'Lcom/android/server/input/InputManagerService;->setTouchCalibrationForInputDevice'
'Lcom/android/server/input/InputManagerService;->tryPointerSpeed'
'Lcom/android/server/job/JobSchedulerService$JobSchedulerStub;->schedule'
'Lcom/android/server/job/JobSchedulerService$JobSchedulerStub;->scheduleAsPackage'
'Lcom/android/server/media/MediaRouterService;->registerClientAsUser'
'Lcom/android/server/media/MediaSessionRecord$SessionStub;->setFlags'
'Lcom/android/server/media/projection/MediaProjectionManagerService$BinderService;->addCallback'
'Lcom/android/server/media/projection/MediaProjectionManagerService$BinderService;->createProjection'
'Lcom/android/server/media/projection/MediaProjectionManagerService$BinderService;->getActiveProjectionInfo'
'Lcom/android/server/media/projection/MediaProjectionManagerService$BinderService;->removeCallback'
'Lcom/android/server/media/projection/MediaProjectionManagerService$BinderService;->stopActiveProjection'
'Lcom/android/server/net/NetworkPolicyManagerService;->addRestrictBackgroundWhitelistedUid'
'Lcom/android/server/net/NetworkPolicyManagerService;->addUidPolicy'
'Lcom/android/server/net/NetworkPolicyManagerService;->factoryReset'
'Lcom/android/server/net/NetworkPolicyManagerService;->getNetworkPolicies'
'Lcom/android/server/net/NetworkPolicyManagerService;->getNetworkQuotaInfo'
'Lcom/android/server/net/NetworkPolicyManagerService;->getRestrictBackground'
'Lcom/android/server/net/NetworkPolicyManagerService;->getRestrictBackgroundByCaller'
'Lcom/android/server/net/NetworkPolicyManagerService;->getRestrictBackgroundWhitelistedUids'
'Lcom/android/server/net/NetworkPolicyManagerService;->getUidPolicy'
'Lcom/android/server/net/NetworkPolicyManagerService;->getUidsWithPolicy'
'Lcom/android/server/net/NetworkPolicyManagerService;->isUidForeground'
'Lcom/android/server/net/NetworkPolicyManagerService;->onTetheringChanged'
'Lcom/android/server/net/NetworkPolicyManagerService;->registerListener'
'Lcom/android/server/net/NetworkPolicyManagerService;->removeRestrictBackgroundWhitelistedUid'
'Lcom/android/server/net/NetworkPolicyManagerService;->removeUidPolicy'
'Lcom/android/server/net/NetworkPolicyManagerService;->setConnectivityListener'
'Lcom/android/server/net/NetworkPolicyManagerService;->setDeviceIdleMode'
'Lcom/android/server/net/NetworkPolicyManagerService;->setNetworkPolicies'
'Lcom/android/server/net/NetworkPolicyManagerService;->setRestrictBackground'
'Lcom/android/server/net/NetworkPolicyManagerService;->setUidPolicy'
'Lcom/android/server/net/NetworkPolicyManagerService;->snoozeLimit'
'Lcom/android/server/net/NetworkPolicyManagerService;->unregisterListener'
'Lcom/android/server/net/NetworkStatsService;->advisePersistThreshold'
'Lcom/android/server/net/NetworkStatsService;->forceUpdate'
'Lcom/android/server/net/NetworkStatsService;->forceUpdateIfaces'
'Lcom/android/server/net/NetworkStatsService;->getDataLayerSnapshotForUid'
'Lcom/android/server/net/NetworkStatsService;->getNetworkTotalBytes'
'Lcom/android/server/net/NetworkStatsService;->incrementOperationCount'
'Lcom/android/server/net/NetworkStatsService;->registerUsageCallback'
'Lcom/android/server/net/NetworkStatsService;->setUidForeground'
'Lcom/android/server/pm/PackageInstallerService;->createSession'
'Lcom/android/server/pm/PackageInstallerService;->getAllSessions'
'Lcom/android/server/pm/PackageInstallerService;->getMySessions'
'Lcom/android/server/pm/PackageInstallerService;->registerCallback'
'Lcom/android/server/pm/PackageInstallerService;->setPermissionsResult'
'Lcom/android/server/pm/PackageInstallerService;->uninstall'
'Lcom/android/server/pm/PackageManagerService;->addCrossProfileIntentFilter'
'Lcom/android/server/pm/PackageManagerService;->addOnPermissionsChangeListener'
'Lcom/android/server/pm/PackageManagerService;->addPreferredActivity'
'Lcom/android/server/pm/PackageManagerService;->canForwardTo'
'Lcom/android/server/pm/PackageManagerService;->clearApplicationUserData'
'Lcom/android/server/pm/PackageManagerService;->clearCrossProfileIntentFilters'
'Lcom/android/server/pm/PackageManagerService;->clearPackagePreferredActivities'
'Lcom/android/server/pm/PackageManagerService;->deleteApplicationCacheFiles'
'Lcom/android/server/pm/PackageManagerService;->deleteApplicationCacheFilesAsUser'
'Lcom/android/server/pm/PackageManagerService;->deletePackage'
'Lcom/android/server/pm/PackageManagerService;->deletePackageAsUser'
'Lcom/android/server/pm/PackageManagerService;->extendVerificationTimeout'
'Lcom/android/server/pm/PackageManagerService;->flushPackageRestrictionsAsUser'
'Lcom/android/server/pm/PackageManagerService;->freeStorage'
'Lcom/android/server/pm/PackageManagerService;->freeStorageAndNotify'
'Lcom/android/server/pm/PackageManagerService;->getActivityInfo'
'Lcom/android/server/pm/PackageManagerService;->getApplicationEnabledSetting'
'Lcom/android/server/pm/PackageManagerService;->getApplicationHiddenSettingAsUser'
'Lcom/android/server/pm/PackageManagerService;->getApplicationInfo'
'Lcom/android/server/pm/PackageManagerService;->getComponentEnabledSetting'
'Lcom/android/server/pm/PackageManagerService;->getHomeActivities'
'Lcom/android/server/pm/PackageManagerService;->getInstalledPackages'
'Lcom/android/server/pm/PackageManagerService;->getLastChosenActivity'
'Lcom/android/server/pm/PackageManagerService;->getMoveStatus'
'Lcom/android/server/pm/PackageManagerService;->getPackageGids'
'Lcom/android/server/pm/PackageManagerService;->getPackageInfo'
'Lcom/android/server/pm/PackageManagerService;->getPackageSizeInfo'
'Lcom/android/server/pm/PackageManagerService;->getPackageUid'
'Lcom/android/server/pm/PackageManagerService;->getPermissionFlags'
'Lcom/android/server/pm/PackageManagerService;->getProviderInfo'
'Lcom/android/server/pm/PackageManagerService;->getReceiverInfo'
'Lcom/android/server/pm/PackageManagerService;->getServiceInfo'
'Lcom/android/server/pm/PackageManagerService;->getVerifierDeviceIdentity'
'Lcom/android/server/pm/PackageManagerService;->grantRuntimePermission'
'Lcom/android/server/pm/PackageManagerService;->installExistingPackageAsUser'
'Lcom/android/server/pm/PackageManagerService;->installPackageAsUser'
'Lcom/android/server/pm/PackageManagerService;->isEphemeralApplication'
'Lcom/android/server/pm/PackageManagerService;->isPackageAvailable'
'Lcom/android/server/pm/PackageManagerService;->isPackageSuspendedForUser'
'Lcom/android/server/pm/PackageManagerService;->isPermissionRevokedByPolicy'
'Lcom/android/server/pm/PackageManagerService;->movePackage'
'Lcom/android/server/pm/PackageManagerService;->movePrimaryStorage'
'Lcom/android/server/pm/PackageManagerService;->queryIntentActivities'
'Lcom/android/server/pm/PackageManagerService;->queryIntentActivityOptions'
'Lcom/android/server/pm/PackageManagerService;->queryIntentContentProviders'
'Lcom/android/server/pm/PackageManagerService;->queryIntentReceivers'
'Lcom/android/server/pm/PackageManagerService;->queryIntentServices'
'Lcom/android/server/pm/PackageManagerService;->registerMoveCallback'
'Lcom/android/server/pm/PackageManagerService;->replacePreferredActivity'
'Lcom/android/server/pm/PackageManagerService;->resetApplicationPreferences'
'Lcom/android/server/pm/PackageManagerService;->resetRuntimePermissions'
'Lcom/android/server/pm/PackageManagerService;->resolveIntent'
'Lcom/android/server/pm/PackageManagerService;->resolveService'
'Lcom/android/server/pm/PackageManagerService;->revokeRuntimePermission'
'Lcom/android/server/pm/PackageManagerService;->setApplicationEnabledSetting'
'Lcom/android/server/pm/PackageManagerService;->setApplicationHiddenSettingAsUser'
'Lcom/android/server/pm/PackageManagerService;->setBlockUninstallForUser'
'Lcom/android/server/pm/PackageManagerService;->setComponentEnabledSetting'
'Lcom/android/server/pm/PackageManagerService;->setDefaultBrowserPackageName'
'Lcom/android/server/pm/PackageManagerService;->setHomeActivity'
'Lcom/android/server/pm/PackageManagerService;->setInstallLocation'
'Lcom/android/server/pm/PackageManagerService;->setLastChosenActivity'
'Lcom/android/server/pm/PackageManagerService;->setPackageStoppedState'
'Lcom/android/server/pm/PackageManagerService;->setPackagesSuspendedAsUser'
'Lcom/android/server/pm/PackageManagerService;->setPermissionEnforced'
'Lcom/android/server/pm/PackageManagerService;->shouldShowRequestPermissionRationale'
'Lcom/android/server/pm/PackageManagerService;->systemReady'
'Lcom/android/server/pm/PackageManagerService;->unregisterMoveCallback'
'Lcom/android/server/pm/PackageManagerService;->updateExternalMediaStatus'
'Lcom/android/server/pm/PackageManagerService;->updateIntentVerificationStatus'
'Lcom/android/server/pm/PackageManagerService;->updatePermissionFlags'
'Lcom/android/server/pm/PackageManagerService;->updatePermissionFlagsForAllApps'
'Lcom/android/server/pm/PackageManagerService;->verifyIntentFilter'
'Lcom/android/server/pm/PackageManagerService;->verifyPendingInstall'
'Lcom/android/server/pm/ShortcutService;->onApplicationActive'
'Lcom/android/server/power/PowerManagerService$BinderService;->acquireWakeLock'
'Lcom/android/server/power/PowerManagerService$BinderService;->acquireWakeLockWithUid'
'Lcom/android/server/power/PowerManagerService$BinderService;->boostScreenBrightness'
'Lcom/android/server/power/PowerManagerService$BinderService;->crash'
'Lcom/android/server/power/PowerManagerService$BinderService;->goToSleep'
'Lcom/android/server/power/PowerManagerService$BinderService;->nap'
'Lcom/android/server/power/PowerManagerService$BinderService;->powerHint'
'Lcom/android/server/power/PowerManagerService$BinderService;->reboot'
'Lcom/android/server/power/PowerManagerService$BinderService;->rebootSafeMode'
'Lcom/android/server/power/PowerManagerService$BinderService;->releaseWakeLock'
'Lcom/android/server/power/PowerManagerService$BinderService;->setAttentionLight'
'Lcom/android/server/power/PowerManagerService$BinderService;->setPowerSaveMode'
'Lcom/android/server/power/PowerManagerService$BinderService;->setTemporaryScreenAutoBrightnessAdjustmentSettingOverride'
'Lcom/android/server/power/PowerManagerService$BinderService;->setTemporaryScreenBrightnessSettingOverride'
'Lcom/android/server/power/PowerManagerService$BinderService;->shutdown'
'Lcom/android/server/power/PowerManagerService$BinderService;->updateWakeLockUids'
'Lcom/android/server/power/PowerManagerService$BinderService;->updateWakeLockWorkSource'
'Lcom/android/server/power/PowerManagerService$BinderService;->userActivity'
'Lcom/android/server/power/PowerManagerService$BinderService;->wakeUp'
'Lcom/android/server/print/PrintManagerService$PrintManagerImpl;->addPrintJobStateChangeListener'
'Lcom/android/server/print/PrintManagerService$PrintManagerImpl;->cancelPrintJob'
'Lcom/android/server/print/PrintManagerService$PrintManagerImpl;->getPrintJobInfo'
'Lcom/android/server/print/PrintManagerService$PrintManagerImpl;->getPrintJobInfos'
'Lcom/android/server/print/PrintManagerService$PrintManagerImpl;->print'
'Lcom/android/server/print/PrintManagerService$PrintManagerImpl;->restartPrintJob'
'Lcom/android/server/sip/SipService;->close'
'Lcom/android/server/sip/SipService;->createSession'
'Lcom/android/server/sip/SipService;->getListOfProfiles'
'Lcom/android/server/sip/SipService;->getPendingSession'
'Lcom/android/server/sip/SipService;->isOpened'
'Lcom/android/server/sip/SipService;->isRegistered'
'Lcom/android/server/sip/SipService;->open'
'Lcom/android/server/sip/SipService;->open3'
'Lcom/android/server/sip/SipService;->setRegistrationListener'
'Lcom/android/server/soundtrigger/SoundTriggerService$SoundTriggerServiceStub;->deleteSoundModel'
'Lcom/android/server/soundtrigger/SoundTriggerService$SoundTriggerServiceStub;->getSoundModel'
'Lcom/android/server/soundtrigger/SoundTriggerService$SoundTriggerServiceStub;->startRecognition'
'Lcom/android/server/soundtrigger/SoundTriggerService$SoundTriggerServiceStub;->stopRecognition'
'Lcom/android/server/soundtrigger/SoundTriggerService$SoundTriggerServiceStub;->updateSoundModel'
'Lcom/android/server/statusbar/StatusBarManagerService;->addTile'
'Lcom/android/server/statusbar/StatusBarManagerService;->clearNotificationEffects'
'Lcom/android/server/statusbar/StatusBarManagerService;->clickTile'
'Lcom/android/server/statusbar/StatusBarManagerService;->collapsePanels'
'Lcom/android/server/statusbar/StatusBarManagerService;->disable'
'Lcom/android/server/statusbar/StatusBarManagerService;->disable2'
'Lcom/android/server/statusbar/StatusBarManagerService;->disable2ForUser'
'Lcom/android/server/statusbar/StatusBarManagerService;->disableForUser'
'Lcom/android/server/statusbar/StatusBarManagerService;->expandNotificationsPanel'
'Lcom/android/server/statusbar/StatusBarManagerService;->expandSettingsPanel'
'Lcom/android/server/statusbar/StatusBarManagerService;->handleSystemNavigationKey'
'Lcom/android/server/statusbar/StatusBarManagerService;->onClearAllNotifications'
'Lcom/android/server/statusbar/StatusBarManagerService;->onNotificationActionClick'
'Lcom/android/server/statusbar/StatusBarManagerService;->onNotificationClear'
'Lcom/android/server/statusbar/StatusBarManagerService;->onNotificationClick'
'Lcom/android/server/statusbar/StatusBarManagerService;->onNotificationError'
'Lcom/android/server/statusbar/StatusBarManagerService;->onNotificationExpansionChanged'
'Lcom/android/server/statusbar/StatusBarManagerService;->onNotificationVisibilityChanged'
'Lcom/android/server/statusbar/StatusBarManagerService;->onPanelHidden'
'Lcom/android/server/statusbar/StatusBarManagerService;->onPanelRevealed'
'Lcom/android/server/statusbar/StatusBarManagerService;->registerStatusBar'
'Lcom/android/server/statusbar/StatusBarManagerService;->remTile'
'Lcom/android/server/statusbar/StatusBarManagerService;->removeIcon'
'Lcom/android/server/statusbar/StatusBarManagerService;->setIcon'
'Lcom/android/server/statusbar/StatusBarManagerService;->setIconVisibility'
'Lcom/android/server/statusbar/StatusBarManagerService;->setImeWindowStatus'
'Lcom/android/server/statusbar/StatusBarManagerService;->setSystemUiVisibility'
'Lcom/android/server/tv/TvInputManagerService$BinderService;->acquireTvInputHardware'
'Lcom/android/server/tv/TvInputManagerService$BinderService;->addBlockedRating'
'Lcom/android/server/tv/TvInputManagerService$BinderService;->captureFrame'
'Lcom/android/server/tv/TvInputManagerService$BinderService;->getAvailableTvStreamConfigList'
'Lcom/android/server/tv/TvInputManagerService$BinderService;->getDvbDeviceList'
'Lcom/android/server/tv/TvInputManagerService$BinderService;->getHardwareList'
'Lcom/android/server/tv/TvInputManagerService$BinderService;->openDvbDevice'
'Lcom/android/server/tv/TvInputManagerService$BinderService;->releaseTvInputHardware'
'Lcom/android/server/tv/TvInputManagerService$BinderService;->removeBlockedRating'
'Lcom/android/server/tv/TvInputManagerService$BinderService;->setParentalControlsEnabled'
'Lcom/android/server/tv/TvInputManagerService$BinderService;->unblockContent'
'Lcom/android/server/tv/TvInputManagerService$ServiceCallback;->addHardwareInput'
'Lcom/android/server/tv/TvInputManagerService$ServiceCallback;->addHdmiInput'
'Lcom/android/server/tv/TvInputManagerService$ServiceCallback;->removeHardwareInput'
'Lcom/android/server/usage/UsageStatsService$BinderService;->onCarrierPrivilegedAppsChanged'
'Lcom/android/server/usage/UsageStatsService$BinderService;->queryConfigurationStats'
'Lcom/android/server/usage/UsageStatsService$BinderService;->queryEvents'
'Lcom/android/server/usage/UsageStatsService$BinderService;->queryUsageStats'
'Lcom/android/server/usage/UsageStatsService$BinderService;->setAppInactive'
'Lcom/android/server/usb/UsbService;->allowUsbDebugging'
'Lcom/android/server/usb/UsbService;->clearDefaults'
'Lcom/android/server/usb/UsbService;->clearUsbDebuggingKeys'
'Lcom/android/server/usb/UsbService;->denyUsbDebugging'
'Lcom/android/server/usb/UsbService;->getPortStatus'
'Lcom/android/server/usb/UsbService;->getPorts'
'Lcom/android/server/usb/UsbService;->grantAccessoryPermission'
'Lcom/android/server/usb/UsbService;->grantDevicePermission'
'Lcom/android/server/usb/UsbService;->hasDefaults'
'Lcom/android/server/usb/UsbService;->isFunctionEnabled'
'Lcom/android/server/usb/UsbService;->setAccessoryPackage'
'Lcom/android/server/usb/UsbService;->setCurrentFunction'
'Lcom/android/server/usb/UsbService;->setDevicePackage'
'Lcom/android/server/usb/UsbService;->setPortRoles'
'Lcom/android/server/usb/UsbService;->setUsbDataUnlocked'
'Lcom/android/server/voiceinteraction/VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;->activeServiceSupportsAssist'
'Lcom/android/server/voiceinteraction/VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;->activeServiceSupportsLaunchFromKeyguard'
'Lcom/android/server/voiceinteraction/VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;->deleteKeyphraseSoundModel'
'Lcom/android/server/voiceinteraction/VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;->getActiveServiceComponentName'
'Lcom/android/server/voiceinteraction/VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;->getKeyphraseSoundModel'
'Lcom/android/server/voiceinteraction/VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;->hideCurrentSession'
'Lcom/android/server/voiceinteraction/VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;->isSessionRunning'
'Lcom/android/server/voiceinteraction/VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;->launchVoiceAssistFromKeyguard'
'Lcom/android/server/voiceinteraction/VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;->onLockscreenShown'
'Lcom/android/server/voiceinteraction/VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;->registerVoiceInteractionSessionListener'
'Lcom/android/server/voiceinteraction/VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;->showSessionForActiveService'
'Lcom/android/server/voiceinteraction/VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;->updateKeyphraseSoundModel'
'Lcom/android/server/wallpaper/WallpaperManagerService;->clearWallpaper'
'Lcom/android/server/wallpaper/WallpaperManagerService;->setDimensionHints'
'Lcom/android/server/wallpaper/WallpaperManagerService;->setDisplayPadding'
'Lcom/android/server/wallpaper/WallpaperManagerService;->setLockWallpaperCallback'
'Lcom/android/server/wallpaper/WallpaperManagerService;->setWallpaper'
'Lcom/android/server/wallpaper/WallpaperManagerService;->setWallpaperComponent'
'Lcom/android/server/wallpaper/WallpaperManagerService;->setWallpaperComponentChecked'
'Lcom/android/server/webkit/WebViewUpdateService$BinderService;->changeProviderAndSetting'
'Lcom/android/server/webkit/WebViewUpdateService$BinderService;->enableFallbackLogic'
'Lcom/android/server/wifi/WifiServiceImpl;->acquireMulticastLock'
'Lcom/android/server/wifi/WifiServiceImpl;->acquireWifiLock'
'Lcom/android/server/wifi/WifiServiceImpl;->addOrUpdateNetwork'
'Lcom/android/server/wifi/WifiServiceImpl;->addToBlacklist'
'Lcom/android/server/wifi/WifiServiceImpl;->clearBlacklist'
'Lcom/android/server/wifi/WifiServiceImpl;->disableEphemeralNetwork'
'Lcom/android/server/wifi/WifiServiceImpl;->disableNetwork'
'Lcom/android/server/wifi/WifiServiceImpl;->disconnect'
'Lcom/android/server/wifi/WifiServiceImpl;->enableAggressiveHandover'
'Lcom/android/server/wifi/WifiServiceImpl;->enableNetwork'
'Lcom/android/server/wifi/WifiServiceImpl;->enableVerboseLogging'
'Lcom/android/server/wifi/WifiServiceImpl;->enableWifiConnectivityManager'
'Lcom/android/server/wifi/WifiServiceImpl;->factoryReset'
'Lcom/android/server/wifi/WifiServiceImpl;->getAggressiveHandover'
'Lcom/android/server/wifi/WifiServiceImpl;->getAllowScansWithTraffic'
'Lcom/android/server/wifi/WifiServiceImpl;->getConfigFile'
'Lcom/android/server/wifi/WifiServiceImpl;->getConfiguredNetworks'
'Lcom/android/server/wifi/WifiServiceImpl;->getConnectionInfo'
'Lcom/android/server/wifi/WifiServiceImpl;->getConnectionStatistics'
'Lcom/android/server/wifi/WifiServiceImpl;->getCountryCode'
'Lcom/android/server/wifi/WifiServiceImpl;->getCurrentNetwork'
'Lcom/android/server/wifi/WifiServiceImpl;->getDhcpInfo'
'Lcom/android/server/wifi/WifiServiceImpl;->getEnableAutoJoinWhenAssociated'
'Lcom/android/server/wifi/WifiServiceImpl;->getFrequencyBand'
'Lcom/android/server/wifi/WifiServiceImpl;->getMatchingWifiConfig'
'Lcom/android/server/wifi/WifiServiceImpl;->getPrivilegedConfiguredNetworks'
'Lcom/android/server/wifi/WifiServiceImpl;->getScanResults'
'Lcom/android/server/wifi/WifiServiceImpl;->getSupportedFeatures'
'Lcom/android/server/wifi/WifiServiceImpl;->getVerboseLoggingLevel'
'Lcom/android/server/wifi/WifiServiceImpl;->getWifiApConfiguration'
'Lcom/android/server/wifi/WifiServiceImpl;->getWifiApEnabledState'
'Lcom/android/server/wifi/WifiServiceImpl;->getWifiEnabledState'
'Lcom/android/server/wifi/WifiServiceImpl;->getWifiServiceMessenger'
'Lcom/android/server/wifi/WifiServiceImpl;->getWpsNfcConfigurationToken'
'Lcom/android/server/wifi/WifiServiceImpl;->initializeMulticastFiltering'
'Lcom/android/server/wifi/WifiServiceImpl;->isMulticastEnabled'
'Lcom/android/server/wifi/WifiServiceImpl;->isScanAlwaysAvailable'
'Lcom/android/server/wifi/WifiServiceImpl;->pingSupplicant'
'Lcom/android/server/wifi/WifiServiceImpl;->reassociate'
'Lcom/android/server/wifi/WifiServiceImpl;->reconnect'
'Lcom/android/server/wifi/WifiServiceImpl;->releaseMulticastLock'
'Lcom/android/server/wifi/WifiServiceImpl;->releaseWifiLock'
'Lcom/android/server/wifi/WifiServiceImpl;->removeNetwork'
'Lcom/android/server/wifi/WifiServiceImpl;->reportActivityInfo'
'Lcom/android/server/wifi/WifiServiceImpl;->requestActivityInfo'
'Lcom/android/server/wifi/WifiServiceImpl;->saveConfiguration'
'Lcom/android/server/wifi/WifiServiceImpl;->setAllowScansWithTraffic'
'Lcom/android/server/wifi/WifiServiceImpl;->setCountryCode'
'Lcom/android/server/wifi/WifiServiceImpl;->setEnableAutoJoinWhenAssociated'
'Lcom/android/server/wifi/WifiServiceImpl;->setFrequencyBand'
'Lcom/android/server/wifi/WifiServiceImpl;->setWifiApConfiguration'
'Lcom/android/server/wifi/WifiServiceImpl;->setWifiApEnabled'
'Lcom/android/server/wifi/WifiServiceImpl;->setWifiEnabled'
'Lcom/android/server/wifi/WifiServiceImpl;->startScan'
'Lcom/android/server/wifi/WifiServiceImpl;->updateWifiLockWorkSource'
'Lcom/android/server/wifi/p2p/WifiP2pServiceImpl;->getMessenger'
'Lcom/android/server/wifi/p2p/WifiP2pServiceImpl;->getP2pStateMachineMessenger'
'Lcom/android/server/wifi/p2p/WifiP2pServiceImpl;->setMiracastMode'
'Lcom/android/server/wm/WindowManagerService;->addAppToken'
'Lcom/android/server/wm/WindowManagerService;->addWindowToken'
'Lcom/android/server/wm/WindowManagerService;->clearForcedDisplayDensityForUser'
'Lcom/android/server/wm/WindowManagerService;->clearForcedDisplaySize'
'Lcom/android/server/wm/WindowManagerService;->clearWindowContentFrameStats'
'Lcom/android/server/wm/WindowManagerService;->disableKeyguard'
'Lcom/android/server/wm/WindowManagerService;->dismissKeyguard'
'Lcom/android/server/wm/WindowManagerService;->executeAppTransition'
'Lcom/android/server/wm/WindowManagerService;->exitKeyguardSecurely'
'Lcom/android/server/wm/WindowManagerService;->freezeRotation'
'Lcom/android/server/wm/WindowManagerService;->getWindowContentFrameStats'
'Lcom/android/server/wm/WindowManagerService;->isViewServerRunning'
'Lcom/android/server/wm/WindowManagerService;->keyguardGoingAway'
'Lcom/android/server/wm/WindowManagerService;->lockNow'
'Lcom/android/server/wm/WindowManagerService;->notifyAppResumed'
'Lcom/android/server/wm/WindowManagerService;->notifyAppStopped'
'Lcom/android/server/wm/WindowManagerService;->pauseKeyDispatching'
'Lcom/android/server/wm/WindowManagerService;->prepareAppTransition'
'Lcom/android/server/wm/WindowManagerService;->reenableKeyguard'
'Lcom/android/server/wm/WindowManagerService;->registerDockedStackListener'
'Lcom/android/server/wm/WindowManagerService;->registerShortcutKey'
'Lcom/android/server/wm/WindowManagerService;->removeAppToken'
'Lcom/android/server/wm/WindowManagerService;->removeWindowToken'
'Lcom/android/server/wm/WindowManagerService;->requestAssistScreenshot'
'Lcom/android/server/wm/WindowManagerService;->resumeKeyDispatching'
'Lcom/android/server/wm/WindowManagerService;->screenshotApplications'
'Lcom/android/server/wm/WindowManagerService;->screenshotWallpaper'
'Lcom/android/server/wm/WindowManagerService;->setAnimationScale'
'Lcom/android/server/wm/WindowManagerService;->setAnimationScales'
'Lcom/android/server/wm/WindowManagerService;->setAppOrientation'
'Lcom/android/server/wm/WindowManagerService;->setAppStartingWindow'
'Lcom/android/server/wm/WindowManagerService;->setAppTask'
'Lcom/android/server/wm/WindowManagerService;->setAppVisibility'
'Lcom/android/server/wm/WindowManagerService;->setEventDispatching'
'Lcom/android/server/wm/WindowManagerService;->setFocusedApp'
'Lcom/android/server/wm/WindowManagerService;->setForcedDisplayDensityForUser'
'Lcom/android/server/wm/WindowManagerService;->setForcedDisplayScalingMode'
'Lcom/android/server/wm/WindowManagerService;->setForcedDisplaySize'
'Lcom/android/server/wm/WindowManagerService;->setNewConfiguration'
'Lcom/android/server/wm/WindowManagerService;->setOverscan'
'Lcom/android/server/wm/WindowManagerService;->setRecentsVisibility'
'Lcom/android/server/wm/WindowManagerService;->setTvPipVisibility'
'Lcom/android/server/wm/WindowManagerService;->startAppFreezingScreen'
'Lcom/android/server/wm/WindowManagerService;->startFreezingScreen'
'Lcom/android/server/wm/WindowManagerService;->startViewServer'
'Lcom/android/server/wm/WindowManagerService;->statusBarVisibilityChanged'
'Lcom/android/server/wm/WindowManagerService;->stopAppFreezingScreen'
'Lcom/android/server/wm/WindowManagerService;->stopFreezingScreen'
'Lcom/android/server/wm/WindowManagerService;->stopViewServer'
'Lcom/android/server/wm/WindowManagerService;->thawRotation'
'Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokens'
'Ldalvik/system/DexClassLoader;->clearAssertionStatus'
'Ldalvik/system/DexClassLoader;->clone'
'Ldalvik/system/DexClassLoader;->defineClass'
'Ldalvik/system/DexClassLoader;->definePackage'
'Ldalvik/system/DexClassLoader;->equals'
'Ldalvik/system/DexClassLoader;->finalize'
'Ldalvik/system/DexClassLoader;->findClass'
'Ldalvik/system/DexClassLoader;->findLibrary'
'Ldalvik/system/DexClassLoader;->findLoadedClass'
'Ldalvik/system/DexClassLoader;->findResource'
'Ldalvik/system/DexClassLoader;->findResources'
'Ldalvik/system/DexClassLoader;->findSystemClass'
'Ldalvik/system/DexClassLoader;->getClass'
'Ldalvik/system/DexClassLoader;->getPackage'
'Ldalvik/system/DexClassLoader;->getPackages'
'Ldalvik/system/DexClassLoader;->getParent'
'Ldalvik/system/DexClassLoader;->getResource'
'Ldalvik/system/DexClassLoader;->getResourceAsStream'
'Ldalvik/system/DexClassLoader;->getResources'
'Ldalvik/system/DexClassLoader;->getSystemClassLoader'
'Ldalvik/system/DexClassLoader;->getSystemResource'
'Ldalvik/system/DexClassLoader;->getSystemResourceAsStream'
'Ldalvik/system/DexClassLoader;->getSystemResources'
'Ldalvik/system/DexClassLoader;->hashCode'
'Ldalvik/system/DexClassLoader;->loadClass'
'Ldalvik/system/DexClassLoader;->notify'
'Ldalvik/system/DexClassLoader;->notifyAll'
'Ldalvik/system/DexClassLoader;->registerAsParallelCapable'
'Ldalvik/system/DexClassLoader;->resolveClass'
'Ldalvik/system/DexClassLoader;->setClassAssertionStatus'
'Ldalvik/system/DexClassLoader;->setDefaultAssertionStatus'
'Ldalvik/system/DexClassLoader;->setPackageAssertionStatus'
'Ldalvik/system/DexClassLoader;->setSigners'
'Ldalvik/system/DexClassLoader;->toString'
'Ldalvik/system/DexClassLoader;->toString'
'Ldalvik/system/DexClassLoader;->wait'
'Ldalvik/system/InMemoryDexClassLoader;->clearAssertionStatus'
'Ldalvik/system/InMemoryDexClassLoader;->clone'
'Ldalvik/system/InMemoryDexClassLoader;->defineClass'
'Ldalvik/system/InMemoryDexClassLoader;->definePackage'
'Ldalvik/system/InMemoryDexClassLoader;->equals'
'Ldalvik/system/InMemoryDexClassLoader;->finalize'
'Ldalvik/system/InMemoryDexClassLoader;->findClass'
'Ldalvik/system/InMemoryDexClassLoader;->findLibrary'
'Ldalvik/system/InMemoryDexClassLoader;->findLoadedClass'
'Ldalvik/system/InMemoryDexClassLoader;->findResource'
'Ldalvik/system/InMemoryDexClassLoader;->findResources'
'Ldalvik/system/InMemoryDexClassLoader;->findSystemClass'
'Ldalvik/system/InMemoryDexClassLoader;->getClass'
'Ldalvik/system/InMemoryDexClassLoader;->getPackage'
'Ldalvik/system/InMemoryDexClassLoader;->getPackages'
'Ldalvik/system/InMemoryDexClassLoader;->getParent'
'Ldalvik/system/InMemoryDexClassLoader;->getResource'
'Ldalvik/system/InMemoryDexClassLoader;->getResourceAsStream'
'Ldalvik/system/InMemoryDexClassLoader;->getResources'
'Ldalvik/system/InMemoryDexClassLoader;->getSystemClassLoader'
'Ldalvik/system/InMemoryDexClassLoader;->getSystemResource'
'Ldalvik/system/InMemoryDexClassLoader;->getSystemResourceAsStream'
'Ldalvik/system/InMemoryDexClassLoader;->getSystemResources'
'Ldalvik/system/InMemoryDexClassLoader;->hashCode'
'Ldalvik/system/InMemoryDexClassLoader;->loadClass'
'Ldalvik/system/InMemoryDexClassLoader;->notify'
'Ldalvik/system/InMemoryDexClassLoader;->notifyAll'
'Ldalvik/system/InMemoryDexClassLoader;->registerAsParallelCapable'
'Ldalvik/system/InMemoryDexClassLoader;->resolveClass'
'Ldalvik/system/InMemoryDexClassLoader;->setClassAssertionStatus'
'Ldalvik/system/InMemoryDexClassLoader;->setDefaultAssertionStatus'
'Ldalvik/system/InMemoryDexClassLoader;->setPackageAssertionStatus'
'Ldalvik/system/InMemoryDexClassLoader;->setSigners'
'Ldalvik/system/InMemoryDexClassLoader;->toString'
'Ldalvik/system/InMemoryDexClassLoader;->toString'
'Ldalvik/system/InMemoryDexClassLoader;->wait'
'Ldalvik/system/PathClassLoader;->clearAssertionStatus'
'Ldalvik/system/PathClassLoader;->clone'
'Ldalvik/system/PathClassLoader;->defineClass'
'Ldalvik/system/PathClassLoader;->definePackage'
'Ldalvik/system/PathClassLoader;->equals'
'Ldalvik/system/PathClassLoader;->finalize'
'Ldalvik/system/PathClassLoader;->findClass'
'Ldalvik/system/PathClassLoader;->findLibrary'
'Ldalvik/system/PathClassLoader;->findLoadedClass'
'Ldalvik/system/PathClassLoader;->findResource'
'Ldalvik/system/PathClassLoader;->findResources'
'Ldalvik/system/PathClassLoader;->findSystemClass'
'Ldalvik/system/PathClassLoader;->getClass'
'Ldalvik/system/PathClassLoader;->getPackage'
'Ldalvik/system/PathClassLoader;->getPackages'
'Ldalvik/system/PathClassLoader;->getParent'
'Ldalvik/system/PathClassLoader;->getResource'
'Ldalvik/system/PathClassLoader;->getResourceAsStream'
'Ldalvik/system/PathClassLoader;->getResources'
'Ldalvik/system/PathClassLoader;->getSystemClassLoader'
'Ldalvik/system/PathClassLoader;->getSystemResource'
'Ldalvik/system/PathClassLoader;->getSystemResourceAsStream'
'Ldalvik/system/PathClassLoader;->getSystemResources'
'Ldalvik/system/PathClassLoader;->hashCode'
'Ldalvik/system/PathClassLoader;->loadClass'
'Ldalvik/system/PathClassLoader;->notify'
'Ldalvik/system/PathClassLoader;->notifyAll'
'Ldalvik/system/PathClassLoader;->registerAsParallelCapable'
'Ldalvik/system/PathClassLoader;->resolveClass'
'Ldalvik/system/PathClassLoader;->setClassAssertionStatus'
'Ldalvik/system/PathClassLoader;->setDefaultAssertionStatus'
'Ldalvik/system/PathClassLoader;->setPackageAssertionStatus'
'Ldalvik/system/PathClassLoader;->setSigners'
'Ldalvik/system/PathClassLoader;->toString'
'Ldalvik/system/PathClassLoader;->toString'
'Ldalvik/system/PathClassLoader;->wait'
'Ljava/io/BufferedOutputStream;-><init>'
'Ljava/io/DataOutputStream;-><init>'
'Ljava/io/DataOutputStream;->writeUTF'
'Ljava/io/File;-><init>'
'Ljava/io/FileInputStream;->close'
'Ljava/io/FileInputStream;->read'
'Ljava/io/FileOutputStream;-><init>'
'Ljava/io/FileOutputStream;->close'
'Ljava/io/FileOutputStream;->flush'
'Ljava/io/FileOutputStream;->write'
'Ljava/io/OutputStream;->close'
'Ljava/io/OutputStream;->write'
'Ljava/lang/Integer;->parseInt'
'Ljava/lang/Object;-><init>'
'Ljava/lang/Object;->toString'
'Ljava/lang/String;->equals'
'Ljava/lang/String;->getBytes'
'Ljava/lang/StringBuilder;-><init>'
'Ljava/lang/StringBuilder;->append'
'Ljava/lang/StringBuilder;->toString'
'Ljava/lang/Thread;-><init>'
'Ljava/lang/reflect/AccessibleObject;->clone'
'Ljava/lang/reflect/AccessibleObject;->equals'
'Ljava/lang/reflect/AccessibleObject;->finalize'
'Ljava/lang/reflect/AccessibleObject;->getAnnotation'
'Ljava/lang/reflect/AccessibleObject;->getAnnotations'
'Ljava/lang/reflect/AccessibleObject;->getAnnotationsByType'
'Ljava/lang/reflect/AccessibleObject;->getClass'
'Ljava/lang/reflect/AccessibleObject;->getDeclaredAnnotation'
'Ljava/lang/reflect/AccessibleObject;->getDeclaredAnnotations'
'Ljava/lang/reflect/AccessibleObject;->getDeclaredAnnotationsByType'
'Ljava/lang/reflect/AccessibleObject;->hashCode'
'Ljava/lang/reflect/AccessibleObject;->isAccessable'
'Ljava/lang/reflect/AccessibleObject;->isAnnotationPresent'
'Ljava/lang/reflect/AccessibleObject;->notify'
'Ljava/lang/reflect/AccessibleObject;->notifyAll'
'Ljava/lang/reflect/AccessibleObject;->setAccessible'
'Ljava/lang/reflect/AccessibleObject;->toString'
'Ljava/lang/reflect/AccessibleObject;->wait'
'Ljava/lang/reflect/AnnotatedElement;->getAnnotation'
'Ljava/lang/reflect/AnnotatedElement;->getAnnotations'
'Ljava/lang/reflect/AnnotatedElement;->getAnnotationsByType'
'Ljava/lang/reflect/AnnotatedElement;->getDeclaredAnnotation'
'Ljava/lang/reflect/AnnotatedElement;->getDeclaredAnnotations'
'Ljava/lang/reflect/AnnotatedElement;->getDeclaredAnnotationsByType'
'Ljava/lang/reflect/AnnotatedElement;->isAnnotationPresent'
'Ljava/lang/reflect/Array;->clone'
'Ljava/lang/reflect/Array;->equals'
'Ljava/lang/reflect/Array;->finalize'
'Ljava/lang/reflect/Array;->get'
'Ljava/lang/reflect/Array;->getBoolean'
'Ljava/lang/reflect/Array;->getByte'
'Ljava/lang/reflect/Array;->getChar'
'Ljava/lang/reflect/Array;->getClass'
'Ljava/lang/reflect/Array;->getDouble'
'Ljava/lang/reflect/Array;->getFloat'
'Ljava/lang/reflect/Array;->getInt'
'Ljava/lang/reflect/Array;->getLength'
'Ljava/lang/reflect/Array;->getLong'
'Ljava/lang/reflect/Array;->getShort'
'Ljava/lang/reflect/Array;->hashCode'
'Ljava/lang/reflect/Array;->newInstance'
'Ljava/lang/reflect/Array;->notify'
'Ljava/lang/reflect/Array;->notifyAll'
'Ljava/lang/reflect/Array;->set'
'Ljava/lang/reflect/Array;->setBoolean'
'Ljava/lang/reflect/Array;->setByte'
'Ljava/lang/reflect/Array;->setChar'
'Ljava/lang/reflect/Array;->setDouble'
'Ljava/lang/reflect/Array;->setFloat'
'Ljava/lang/reflect/Array;->setInt'
'Ljava/lang/reflect/Array;->setLong'
'Ljava/lang/reflect/Array;->setShort'
'Ljava/lang/reflect/Array;->toString'
'Ljava/lang/reflect/Array;->wait'
'Ljava/lang/reflect/Constructor;->clone'
'Ljava/lang/reflect/Constructor;->equals'
'Ljava/lang/reflect/Constructor;->finalize'
'Ljava/lang/reflect/Constructor;->getAnnotation'
'Ljava/lang/reflect/Constructor;->getAnnotations'
'Ljava/lang/reflect/Constructor;->getAnnotationsByType'
'Ljava/lang/reflect/Constructor;->getClass'
'Ljava/lang/reflect/Constructor;->getDeclaredAnnotation'
'Ljava/lang/reflect/Constructor;->getDeclaredAnnotations'
'Ljava/lang/reflect/Constructor;->getDeclaredAnnotationsByType'
'Ljava/lang/reflect/Constructor;->getDeclaringClass'
'Ljava/lang/reflect/Constructor;->getExceptionTypes'
'Ljava/lang/reflect/Constructor;->getGenericExceptionTypes'
'Ljava/lang/reflect/Constructor;->getGenericParameterTypes'
'Ljava/lang/reflect/Constructor;->getModifiers'
'Ljava/lang/reflect/Constructor;->getName'
'Ljava/lang/reflect/Constructor;->getParameterAnnotations'
'Ljava/lang/reflect/Constructor;->getParameterCount'
'Ljava/lang/reflect/Constructor;->getParameterTypes'
'Ljava/lang/reflect/Constructor;->getParameters'
'Ljava/lang/reflect/Constructor;->getTypeParameters'
'Ljava/lang/reflect/Constructor;->hashCode'
'Ljava/lang/reflect/Constructor;->hashCode'
'Ljava/lang/reflect/Constructor;->isAccessable'
'Ljava/lang/reflect/Constructor;->isAnnotationPresent'
'Ljava/lang/reflect/Constructor;->isSynthetic'
'Ljava/lang/reflect/Constructor;->isVarArgs'
'Ljava/lang/reflect/Constructor;->newInstance'
'Ljava/lang/reflect/Constructor;->notify'
'Ljava/lang/reflect/Constructor;->notifyAll'
'Ljava/lang/reflect/Constructor;->setAccessable'
'Ljava/lang/reflect/Constructor;->toGenericString'
'Ljava/lang/reflect/Constructor;->toString'
'Ljava/lang/reflect/Constructor;->toString'
'Ljava/lang/reflect/Constructor;->wait'
'Ljava/lang/reflect/Executable;->clone'
'Ljava/lang/reflect/Executable;->equals'
'Ljava/lang/reflect/Executable;->finalize'
'Ljava/lang/reflect/Executable;->getAnnotation'
'Ljava/lang/reflect/Executable;->getAnnotations'
'Ljava/lang/reflect/Executable;->getAnnotationsByType'
'Ljava/lang/reflect/Executable;->getClass'
'Ljava/lang/reflect/Executable;->getDeclaredAnnotation'
'Ljava/lang/reflect/Executable;->getDeclaredAnnotations'
'Ljava/lang/reflect/Executable;->getDeclaredAnnotationsByType'
'Ljava/lang/reflect/Executable;->getDeclaringClass'
'Ljava/lang/reflect/Executable;->getExceptionTypes'
'Ljava/lang/reflect/Executable;->getGenericExceptionTypes'
'Ljava/lang/reflect/Executable;->getGenericParameterTypes'
'Ljava/lang/reflect/Executable;->getModifiers'
'Ljava/lang/reflect/Executable;->getName'
'Ljava/lang/reflect/Executable;->getParameterAnnotations'
'Ljava/lang/reflect/Executable;->getParameterCount'
'Ljava/lang/reflect/Executable;->getParameterTypes'
'Ljava/lang/reflect/Executable;->getTypeParameters'
'Ljava/lang/reflect/Executable;->hashCode'
'Ljava/lang/reflect/Executable;->isAccessable'
'Ljava/lang/reflect/Executable;->isAnnotationPresent'
'Ljava/lang/reflect/Executable;->isSynthetic'
'Ljava/lang/reflect/Executable;->isVarArgs'
'Ljava/lang/reflect/Executable;->notify'
'Ljava/lang/reflect/Executable;->notifyAll'
'Ljava/lang/reflect/Executable;->setAccessable'
'Ljava/lang/reflect/Executable;->toGenericString'
'Ljava/lang/reflect/Executable;->toString'
'Ljava/lang/reflect/Executable;->wait'
'Ljava/lang/reflect/Field;->clone'
'Ljava/lang/reflect/Field;->equals'
'Ljava/lang/reflect/Field;->equals'
'Ljava/lang/reflect/Field;->finalize'
'Ljava/lang/reflect/Field;->get'
'Ljava/lang/reflect/Field;->getAnnotation'
'Ljava/lang/reflect/Field;->getAnnotations'
'Ljava/lang/reflect/Field;->getAnnotationsByType'
'Ljava/lang/reflect/Field;->getBoolean'
'Ljava/lang/reflect/Field;->getByte'
'Ljava/lang/reflect/Field;->getChar'
'Ljava/lang/reflect/Field;->getClass'
'Ljava/lang/reflect/Field;->getDeclaredAnnotation'
'Ljava/lang/reflect/Field;->getDeclaredAnnotations'
'Ljava/lang/reflect/Field;->getDeclaredAnnotationsByType'
'Ljava/lang/reflect/Field;->getDeclaringClass'
'Ljava/lang/reflect/Field;->getDeclaringClass'
'Ljava/lang/reflect/Field;->getDouble'
'Ljava/lang/reflect/Field;->getFloat'
'Ljava/lang/reflect/Field;->getGenericType'
'Ljava/lang/reflect/Field;->getInt'
'Ljava/lang/reflect/Field;->getLong'
'Ljava/lang/reflect/Field;->getModifiers'
'Ljava/lang/reflect/Field;->getName'
'Ljava/lang/reflect/Field;->getShort'
'Ljava/lang/reflect/Field;->getType'
'Ljava/lang/reflect/Field;->hashCode'
'Ljava/lang/reflect/Field;->hashCode'
'Ljava/lang/reflect/Field;->isAccessable'
'Ljava/lang/reflect/Field;->isAnnotationPresent'
'Ljava/lang/reflect/Field;->isEnumConstant'
'Ljava/lang/reflect/Field;->isSynthetic'
'Ljava/lang/reflect/Field;->notify'
'Ljava/lang/reflect/Field;->notifyAll'
'Ljava/lang/reflect/Field;->set'
'Ljava/lang/reflect/Field;->setAccessable'
'Ljava/lang/reflect/Field;->setBoolean'
'Ljava/lang/reflect/Field;->setByte'
'Ljava/lang/reflect/Field;->setChar'
'Ljava/lang/reflect/Field;->setDouble'
'Ljava/lang/reflect/Field;->setFloat'
'Ljava/lang/reflect/Field;->setInt'
'Ljava/lang/reflect/Field;->setLong'
'Ljava/lang/reflect/Field;->setShort'
'Ljava/lang/reflect/Field;->toGenericString'
'Ljava/lang/reflect/Field;->toString'
'Ljava/lang/reflect/Field;->toString'
'Ljava/lang/reflect/Field;->wait'
'Ljava/lang/reflect/GenericArrayType;->getGenericComponentType'
'Ljava/lang/reflect/GenericArrayType;->getTypeName'
'Ljava/lang/reflect/GenericDeclaration;->getAnnotation'
'Ljava/lang/reflect/GenericDeclaration;->getAnnotations'
'Ljava/lang/reflect/GenericDeclaration;->getAnnotationsByType'
'Ljava/lang/reflect/GenericDeclaration;->getDeclaredAnnotation'
'Ljava/lang/reflect/GenericDeclaration;->getDeclaredAnnotations'
'Ljava/lang/reflect/GenericDeclaration;->getDeclaredAnnotationsByType'
'Ljava/lang/reflect/GenericDeclaration;->getTypeParameters'
'Ljava/lang/reflect/GenericDeclaration;->isAnnotationPresent'
'Ljava/lang/reflect/InvocationHandler;->invoke'
'Ljava/lang/reflect/Member;->getDeclaringClass'
'Ljava/lang/reflect/Member;->getModifiers'
'Ljava/lang/reflect/Member;->getName'
'Ljava/lang/reflect/Member;->isSynthetic'
'Ljava/lang/reflect/Method;->clone'
'Ljava/lang/reflect/Method;->equals'
'Ljava/lang/reflect/Method;->finalize'
'Ljava/lang/reflect/Method;->getAnnotation'
'Ljava/lang/reflect/Method;->getAnnotations'
'Ljava/lang/reflect/Method;->getAnnotationsByType'
'Ljava/lang/reflect/Method;->getClass'
'Ljava/lang/reflect/Method;->getDeclaredAnnotation'
'Ljava/lang/reflect/Method;->getDeclaredAnnotations'
'Ljava/lang/reflect/Method;->getDeclaredAnnotationsByType'
'Ljava/lang/reflect/Method;->getDeclaringClass'
'Ljava/lang/reflect/Method;->getDeclaringClass'
'Ljava/lang/reflect/Method;->getDefaultValue'
'Ljava/lang/reflect/Method;->getExceptionTypes'
'Ljava/lang/reflect/Method;->getExceptionTypes'
'Ljava/lang/reflect/Method;->getGenericExceptionTypes'
'Ljava/lang/reflect/Method;->getGenericExceptionTypes'
'Ljava/lang/reflect/Method;->getGenericParameterTypes'
'Ljava/lang/reflect/Method;->getGenericParameterTypes'
'Ljava/lang/reflect/Method;->getGenericReturnType'
'Ljava/lang/reflect/Method;->getModifiers'
'Ljava/lang/reflect/Method;->getModifiers'
'Ljava/lang/reflect/Method;->getName'
'Ljava/lang/reflect/Method;->getName'
'Ljava/lang/reflect/Method;->getParameterAnnotations'
'Ljava/lang/reflect/Method;->getParameterAnnotations'
'Ljava/lang/reflect/Method;->getParameterCount'
'Ljava/lang/reflect/Method;->getParameterCount'
'Ljava/lang/reflect/Method;->getParameterTypes'
'Ljava/lang/reflect/Method;->getParameterTypes'
'Ljava/lang/reflect/Method;->getParameters'
'Ljava/lang/reflect/Method;->getReturnType'
'Ljava/lang/reflect/Method;->getTypeParameters'
'Ljava/lang/reflect/Method;->getTypeParameters'
'Ljava/lang/reflect/Method;->hashCode'
'Ljava/lang/reflect/Method;->hashCode'
'Ljava/lang/reflect/Method;->invoke'
'Ljava/lang/reflect/Method;->isAnnotationPresent'
'Ljava/lang/reflect/Method;->isBridge'
'Ljava/lang/reflect/Method;->isDefault'
'Ljava/lang/reflect/Method;->isSynthetic'
'Ljava/lang/reflect/Method;->isVarArgs'
'Ljava/lang/reflect/Method;->notify'
'Ljava/lang/reflect/Method;->notifyAll'
'Ljava/lang/reflect/Method;->setAccessable'
'Ljava/lang/reflect/Method;->toGenericString'
'Ljava/lang/reflect/Method;->toString'
'Ljava/lang/reflect/Method;->toString'
'Ljava/lang/reflect/Method;->wait'
'Ljava/lang/reflect/Modifier;->classModifiers'
'Ljava/lang/reflect/Modifier;->clone'
'Ljava/lang/reflect/Modifier;->constructorModifiers'
'Ljava/lang/reflect/Modifier;->equals'
'Ljava/lang/reflect/Modifier;->fieldModifiers'
'Ljava/lang/reflect/Modifier;->finalize'
'Ljava/lang/reflect/Modifier;->getClass'
'Ljava/lang/reflect/Modifier;->hashCode'
'Ljava/lang/reflect/Modifier;->interfaceModifiers'
'Ljava/lang/reflect/Modifier;->isAbstract'
'Ljava/lang/reflect/Modifier;->isFinal'
'Ljava/lang/reflect/Modifier;->isInterface'
'Ljava/lang/reflect/Modifier;->isNative'
'Ljava/lang/reflect/Modifier;->isPrivate'
'Ljava/lang/reflect/Modifier;->isProtected'
'Ljava/lang/reflect/Modifier;->isPublic'
'Ljava/lang/reflect/Modifier;->isStatic'
'Ljava/lang/reflect/Modifier;->isStrict'
'Ljava/lang/reflect/Modifier;->isSyncronized'
'Ljava/lang/reflect/Modifier;->isTransient'
'Ljava/lang/reflect/Modifier;->isVolatile'
'Ljava/lang/reflect/Modifier;->methodModifiers'
'Ljava/lang/reflect/Modifier;->notify'
'Ljava/lang/reflect/Modifier;->notifyAll'
'Ljava/lang/reflect/Modifier;->parameterModifiers'
'Ljava/lang/reflect/Modifier;->toString'
'Ljava/lang/reflect/Modifier;->toString'
'Ljava/lang/reflect/Modifier;->wait'
'Ljava/lang/reflect/Parameter;->clone'
'Ljava/lang/reflect/Parameter;->equals'
'Ljava/lang/reflect/Parameter;->equals'
'Ljava/lang/reflect/Parameter;->finalize'
'Ljava/lang/reflect/Parameter;->getAnnotation'
'Ljava/lang/reflect/Parameter;->getAnnotations'
'Ljava/lang/reflect/Parameter;->getAnnotationsByType'
'Ljava/lang/reflect/Parameter;->getClass'
'Ljava/lang/reflect/Parameter;->getDeclaredAnnotation'
'Ljava/lang/reflect/Parameter;->getDeclaredAnnotations'
'Ljava/lang/reflect/Parameter;->getDeclaredAnnotationsByType'
'Ljava/lang/reflect/Parameter;->getDeclaringExecutable'
'Ljava/lang/reflect/Parameter;->getModifiers'
'Ljava/lang/reflect/Parameter;->getName'
'Ljava/lang/reflect/Parameter;->getParameterizedType'
'Ljava/lang/reflect/Parameter;->getType'
'Ljava/lang/reflect/Parameter;->hashCode'
'Ljava/lang/reflect/Parameter;->hashCode'
'Ljava/lang/reflect/Parameter;->isAnnotationPresent'
'Ljava/lang/reflect/Parameter;->isImplicit'
'Ljava/lang/reflect/Parameter;->isNamePresent'
'Ljava/lang/reflect/Parameter;->isSyntectic'
'Ljava/lang/reflect/Parameter;->isVarArgs'
'Ljava/lang/reflect/Parameter;->notify'
'Ljava/lang/reflect/Parameter;->notifyAll'
'Ljava/lang/reflect/Parameter;->toString'
'Ljava/lang/reflect/Parameter;->toString'
'Ljava/lang/reflect/Parameter;->wait'
'Ljava/lang/reflect/ParameterizedType;->getActualTypeArguments'
'Ljava/lang/reflect/ParameterizedType;->getOwnerType'
'Ljava/lang/reflect/ParameterizedType;->getRawType'
'Ljava/lang/reflect/ParameterizedType;->getTypeName'
'Ljava/lang/reflect/Proxy;->clone'
'Ljava/lang/reflect/Proxy;->equals'
'Ljava/lang/reflect/Proxy;->finalize'
'Ljava/lang/reflect/Proxy;->getClass'
'Ljava/lang/reflect/Proxy;->getInvocationHandler'
'Ljava/lang/reflect/Proxy;->getProxyClass'
'Ljava/lang/reflect/Proxy;->hashCode'
'Ljava/lang/reflect/Proxy;->isProxyClass'
'Ljava/lang/reflect/Proxy;->newProxyInstance'
'Ljava/lang/reflect/Proxy;->notify'
'Ljava/lang/reflect/Proxy;->notifyAll'
'Ljava/lang/reflect/Proxy;->toString'
'Ljava/lang/reflect/Proxy;->wait'
'Ljava/lang/reflect/ReflectPermission;->checkGuard'
'Ljava/lang/reflect/ReflectPermission;->clone'
'Ljava/lang/reflect/ReflectPermission;->equals'
'Ljava/lang/reflect/ReflectPermission;->finalize'
'Ljava/lang/reflect/ReflectPermission;->getActions'
'Ljava/lang/reflect/ReflectPermission;->getClass'
'Ljava/lang/reflect/ReflectPermission;->getName'
'Ljava/lang/reflect/ReflectPermission;->hashCode'
'Ljava/lang/reflect/ReflectPermission;->implies'
'Ljava/lang/reflect/ReflectPermission;->newPermissionCollection'
'Ljava/lang/reflect/ReflectPermission;->notify'
'Ljava/lang/reflect/ReflectPermission;->notifyAll'
'Ljava/lang/reflect/ReflectPermission;->toString'
'Ljava/lang/reflect/ReflectPermission;->wait'
'Ljava/lang/reflect/Type;->getTypeName'
'Ljava/lang/reflect/TypeVariable;->getBounds'
'Ljava/lang/reflect/TypeVariable;->getGenericDeclaration'
'Ljava/lang/reflect/TypeVariable;->getName'
'Ljava/lang/reflect/TypeVariable;->getTypeName'
'Ljava/lang/reflect/WildcardType;->getLowerBounds'
'Ljava/lang/reflect/WildcardType;->getTypeName'
'Ljava/lang/reflect/WildcardType;->getUpperBounds'
'Ljava/net/HttpURLConnection;->connect'
'Ljava/net/HttpURLConnection;->getOutputStream'
'Ljava/net/HttpURLConnection;->setChunkedStreamingMode'
'Ljava/net/HttpURLConnection;->setDoOutput'
'Ljava/net/Socket;-><init>'
'Ljava/net/Socket;->close'
'Ljava/net/Socket;->getOutputStream'
'Ljava/net/URL;-><init>'
'Ljava/net/URL;->openConnection'
'Ljava/security/AlgorithmParameterGenerator;->clone'
'Ljava/security/AlgorithmParameterGenerator;->equals'
'Ljava/security/AlgorithmParameterGenerator;->finalize'
'Ljava/security/AlgorithmParameterGenerator;->generateParameters'
'Ljava/security/AlgorithmParameterGenerator;->getAlgorithm'
'Ljava/security/AlgorithmParameterGenerator;->getClass'
'Ljava/security/AlgorithmParameterGenerator;->getInstance'
'Ljava/security/AlgorithmParameterGenerator;->getProvider'
'Ljava/security/AlgorithmParameterGenerator;->hashCode'
'Ljava/security/AlgorithmParameterGenerator;->init'
'Ljava/security/AlgorithmParameterGenerator;->notify'
'Ljava/security/AlgorithmParameterGenerator;->notifyAll'
'Ljava/security/AlgorithmParameterGenerator;->toString'
'Ljava/security/AlgorithmParameterGenerator;->wait'
'Ljava/security/AlgorithmParameters;->clone'
'Ljava/security/AlgorithmParameters;->equals'
'Ljava/security/AlgorithmParameters;->finalize'
'Ljava/security/AlgorithmParameters;->getAlgorithm'
'Ljava/security/AlgorithmParameters;->getClass'
'Ljava/security/AlgorithmParameters;->getEncoded'
'Ljava/security/AlgorithmParameters;->getInstance'
'Ljava/security/AlgorithmParameters;->getParameterSpec'
'Ljava/security/AlgorithmParameters;->getProvider'
'Ljava/security/AlgorithmParameters;->hashCode'
'Ljava/security/AlgorithmParameters;->init'
'Ljava/security/AlgorithmParameters;->notify'
'Ljava/security/AlgorithmParameters;->notifyAll'
'Ljava/security/AlgorithmParameters;->toString'
'Ljava/security/AlgorithmParameters;->toString'
'Ljava/security/AlgorithmParameters;->wait'
'Ljava/security/KeyFactory;->clone'
'Ljava/security/KeyFactory;->equals'
'Ljava/security/KeyFactory;->finalize'
'Ljava/security/KeyFactory;->generatePrivate'
'Ljava/security/KeyFactory;->generatePublic'
'Ljava/security/KeyFactory;->getAlgorithm'
'Ljava/security/KeyFactory;->getClass'
'Ljava/security/KeyFactory;->getInstance'
'Ljava/security/KeyFactory;->getKeySpec'
'Ljava/security/KeyFactory;->getProvider'
'Ljava/security/KeyFactory;->hashCode'
'Ljava/security/KeyFactory;->notify'
'Ljava/security/KeyFactory;->notifyAll'
'Ljava/security/KeyFactory;->toString'
'Ljava/security/KeyFactory;->translateKey'
'Ljava/security/KeyFactory;->wait'
'Ljava/security/KeyPairGeneratorSpi;->clone'
'Ljava/security/KeyPairGeneratorSpi;->equals'
'Ljava/security/KeyPairGeneratorSpi;->finalize'
'Ljava/security/KeyPairGeneratorSpi;->genKeyPair'
'Ljava/security/KeyPairGeneratorSpi;->generateKeyPair'
'Ljava/security/KeyPairGeneratorSpi;->getAlgorithm'
'Ljava/security/KeyPairGeneratorSpi;->getClass'
'Ljava/security/KeyPairGeneratorSpi;->getInstance'
'Ljava/security/KeyPairGeneratorSpi;->getProvider'
'Ljava/security/KeyPairGeneratorSpi;->hashCode'
'Ljava/security/KeyPairGeneratorSpi;->initialize'
'Ljava/security/KeyPairGeneratorSpi;->notify'
'Ljava/security/KeyPairGeneratorSpi;->notifyAll'
'Ljava/security/KeyPairGeneratorSpi;->toString'
'Ljava/security/KeyPairGeneratorSpi;->wait'
'Ljava/security/KeyStore;->aliases'
'Ljava/security/KeyStore;->clone'
'Ljava/security/KeyStore;->containsAlias'
'Ljava/security/KeyStore;->deleteEntry'
'Ljava/security/KeyStore;->entryInstanceOf'
'Ljava/security/KeyStore;->equals'
'Ljava/security/KeyStore;->finalize'
'Ljava/security/KeyStore;->getCertificate'
'Ljava/security/KeyStore;->getCertificateAlias'
'Ljava/security/KeyStore;->getCertificateChain'
'Ljava/security/KeyStore;->getClass'
'Ljava/security/KeyStore;->getCreationDate'
'Ljava/security/KeyStore;->getDefaultType'
'Ljava/security/KeyStore;->getEntry'
'Ljava/security/KeyStore;->getInstance'
'Ljava/security/KeyStore;->getKey'
'Ljava/security/KeyStore;->getProvider'
'Ljava/security/KeyStore;->getType'
'Ljava/security/KeyStore;->hashCode'
'Ljava/security/KeyStore;->isCertificateEntry'
'Ljava/security/KeyStore;->isKeyEntry'
'Ljava/security/KeyStore;->load'
'Ljava/security/KeyStore;->notify'
'Ljava/security/KeyStore;->notifyAll'
'Ljava/security/KeyStore;->setCertificateEntry'
'Ljava/security/KeyStore;->setEntry'
'Ljava/security/KeyStore;->setKeyEntry'
'Ljava/security/KeyStore;->size'
'Ljava/security/KeyStore;->store'
'Ljava/security/KeyStore;->toString'
'Ljava/security/KeyStore;->wait'
'Ljava/security/MessageDigest;->clone'
'Ljava/security/MessageDigest;->digest'
'Ljava/security/MessageDigest;->engineDigest'
'Ljava/security/MessageDigest;->engineGetDigestLength'
'Ljava/security/MessageDigest;->engineReset'
'Ljava/security/MessageDigest;->engineUpdate'
'Ljava/security/MessageDigest;->equals'
'Ljava/security/MessageDigest;->finalize'
'Ljava/security/MessageDigest;->getAlgorithm'
'Ljava/security/MessageDigest;->getClass'
'Ljava/security/MessageDigest;->getDigestLength'
'Ljava/security/MessageDigest;->getInstance'
'Ljava/security/MessageDigest;->getProvider'
'Ljava/security/MessageDigest;->hashCode'
'Ljava/security/MessageDigest;->isEqual'
'Ljava/security/MessageDigest;->notify'
'Ljava/security/MessageDigest;->notifyAll'
'Ljava/security/MessageDigest;->reset'
'Ljava/security/MessageDigest;->toString'
'Ljava/security/MessageDigest;->toString'
'Ljava/security/MessageDigest;->update'
'Ljava/security/MessageDigest;->wait'
'Ljava/security/SecureRandom;->clone'
'Ljava/security/SecureRandom;->doubles'
'Ljava/security/SecureRandom;->equals'
'Ljava/security/SecureRandom;->finalize'
'Ljava/security/SecureRandom;->generateSeed'
'Ljava/security/SecureRandom;->getAlgorithm'
'Ljava/security/SecureRandom;->getClass'
'Ljava/security/SecureRandom;->getInstance'
'Ljava/security/SecureRandom;->getInstanceStrong'
'Ljava/security/SecureRandom;->getProvider'
'Ljava/security/SecureRandom;->getSeed'
'Ljava/security/SecureRandom;->hashCode'
'Ljava/security/SecureRandom;->ints'
'Ljava/security/SecureRandom;->longs'
'Ljava/security/SecureRandom;->next'
'Ljava/security/SecureRandom;->nextBoolean'
'Ljava/security/SecureRandom;->nextBytes'
'Ljava/security/SecureRandom;->nextBytes'
'Ljava/security/SecureRandom;->nextDouble'
'Ljava/security/SecureRandom;->nextGaussian'
'Ljava/security/SecureRandom;->nextInt'
'Ljava/security/SecureRandom;->nextLong'
'Ljava/security/SecureRandom;->notify'
'Ljava/security/SecureRandom;->notifyAll'
'Ljava/security/SecureRandom;->setSeed'
'Ljava/security/SecureRandom;->setSeed'
'Ljava/security/SecureRandom;->toString'
'Ljava/security/SecureRandom;->wait'
'Ljava/security/Signature;->clone'
'Ljava/security/Signature;->clone'
'Ljava/security/Signature;->clone'
'Ljava/security/Signature;->engineGetParameter'
'Ljava/security/Signature;->engineGetParameters'
'Ljava/security/Signature;->engineInitSign'
'Ljava/security/Signature;->engineInitVerify'
'Ljava/security/Signature;->engineSetParameter'
'Ljava/security/Signature;->engineSign'
'Ljava/security/Signature;->engineUpdate'
'Ljava/security/Signature;->engineUpdate'
'Ljava/security/Signature;->engineVerify'
'Ljava/security/Signature;->equals'
'Ljava/security/Signature;->finalize'
'Ljava/security/Signature;->getAlgorithm'
'Ljava/security/Signature;->getClass'
'Ljava/security/Signature;->getInstance'
'Ljava/security/Signature;->getParameter'
'Ljava/security/Signature;->getParameters'
'Ljava/security/Signature;->getProvider'
'Ljava/security/Signature;->hashCode'
'Ljava/security/Signature;->initSign'
'Ljava/security/Signature;->initVerify'
'Ljava/security/Signature;->notify'
'Ljava/security/Signature;->notifyAll'
'Ljava/security/Signature;->setParameter'
'Ljava/security/Signature;->sign'
'Ljava/security/Signature;->toString'
'Ljava/security/Signature;->toString'
'Ljava/security/Signature;->update'
'Ljava/security/Signature;->verify'
'Ljava/security/Signature;->wait'
'Ljava/security/cert/CertPathBuilder;->build'
'Ljava/security/cert/CertPathBuilder;->clone'
'Ljava/security/cert/CertPathBuilder;->equals'
'Ljava/security/cert/CertPathBuilder;->finalize'
'Ljava/security/cert/CertPathBuilder;->getAlgorithm'
'Ljava/security/cert/CertPathBuilder;->getClass'
'Ljava/security/cert/CertPathBuilder;->getDefaultType'
'Ljava/security/cert/CertPathBuilder;->getInstance'
'Ljava/security/cert/CertPathBuilder;->getProvider'
'Ljava/security/cert/CertPathBuilder;->getRevocationChecker'
'Ljava/security/cert/CertPathBuilder;->hashCode'
'Ljava/security/cert/CertPathBuilder;->notify'
'Ljava/security/cert/CertPathBuilder;->notifyAll'
'Ljava/security/cert/CertPathBuilder;->toString'
'Ljava/security/cert/CertPathBuilder;->wait'
'Ljava/security/cert/CertPathValidator;->clone'
'Ljava/security/cert/CertPathValidator;->equals'
'Ljava/security/cert/CertPathValidator;->finalize'
'Ljava/security/cert/CertPathValidator;->getAlgorithm'
'Ljava/security/cert/CertPathValidator;->getClass'
'Ljava/security/cert/CertPathValidator;->getDefaultType'
'Ljava/security/cert/CertPathValidator;->getInstance'
'Ljava/security/cert/CertPathValidator;->getProvider'
'Ljava/security/cert/CertPathValidator;->getRevocationChecker'
'Ljava/security/cert/CertPathValidator;->hashCode'
'Ljava/security/cert/CertPathValidator;->notify'
'Ljava/security/cert/CertPathValidator;->notifyAll'
'Ljava/security/cert/CertPathValidator;->toString'
'Ljava/security/cert/CertPathValidator;->validate'
'Ljava/security/cert/CertPathValidator;->wait'
'Ljava/security/cert/CertStore;->clone'
'Ljava/security/cert/CertStore;->equals'
'Ljava/security/cert/CertStore;->finalize'
'Ljava/security/cert/CertStore;->getCRLs'
'Ljava/security/cert/CertStore;->getCertStoreParameters'
'Ljava/security/cert/CertStore;->getCertificates'
'Ljava/security/cert/CertStore;->getClass'
'Ljava/security/cert/CertStore;->getDefaultType'
'Ljava/security/cert/CertStore;->getInstance'
'Ljava/security/cert/CertStore;->getProvider'
'Ljava/security/cert/CertStore;->getType'
'Ljava/security/cert/CertStore;->hashCode'
'Ljava/security/cert/CertStore;->notify'
'Ljava/security/cert/CertStore;->notifyAll'
'Ljava/security/cert/CertStore;->toString'
'Ljava/security/cert/CertStore;->wait'
'Ljava/security/cert/CertificateFactory;->clone'
'Ljava/security/cert/CertificateFactory;->equals'
'Ljava/security/cert/CertificateFactory;->finalize'
'Ljava/security/cert/CertificateFactory;->generateCRL'
'Ljava/security/cert/CertificateFactory;->generateCRLs'
'Ljava/security/cert/CertificateFactory;->generateCertPath'
'Ljava/security/cert/CertificateFactory;->generateCertificate'
'Ljava/security/cert/CertificateFactory;->generateCertificates'
'Ljava/security/cert/CertificateFactory;->getCertPathEncodings'
'Ljava/security/cert/CertificateFactory;->getClass'
'Ljava/security/cert/CertificateFactory;->getInstance'
'Ljava/security/cert/CertificateFactory;->getProvider'
'Ljava/security/cert/CertificateFactory;->getType'
'Ljava/security/cert/CertificateFactory;->hashCode'
'Ljava/security/cert/CertificateFactory;->notify'
'Ljava/security/cert/CertificateFactory;->notifyAll'
'Ljava/security/cert/CertificateFactory;->toString'
'Ljava/security/cert/CertificateFactory;->wait'
'Ljava/util/ArrayList;-><init>'
'Ljava/util/Arrays;->asList'
'Ljava/util/List;->add'
'Ljavax/crypto/Cipher;->doFinal'
'Ljavax/crypto/Cipher;->getAlgorithm'
'Ljavax/crypto/Cipher;->getBlockSize'
'Ljavax/crypto/Cipher;->getExemptionMechanism'
'Ljavax/crypto/Cipher;->getIV'
'Ljavax/crypto/Cipher;->getInstance'
'Ljavax/crypto/Cipher;->getMaxAllowedKeyLength'
'Ljavax/crypto/Cipher;->getMaxAllowedParameterSpec'
'Ljavax/crypto/Cipher;->getOutputSize'
'Ljavax/crypto/Cipher;->getParameters'
'Ljavax/crypto/Cipher;->getProvider'
'Ljavax/crypto/Cipher;->init'
'Ljavax/crypto/Cipher;->unwrap'
'Ljavax/crypto/Cipher;->update'
'Ljavax/crypto/Cipher;->updateAAD'
'Ljavax/crypto/Cipher;->wrap'
'Ljavax/crypto/KeyAgreement;->doPhase'
'Ljavax/crypto/KeyAgreement;->generateSecret'
'Ljavax/crypto/KeyAgreement;->getAlgorithm'
'Ljavax/crypto/KeyAgreement;->getInstance'
'Ljavax/crypto/KeyAgreement;->getProvider'
'Ljavax/crypto/KeyAgreement;->init'
'Ljavax/crypto/Mac;->clone'
'Ljavax/crypto/Mac;->doFinal'
'Ljavax/crypto/Mac;->getAlgorithm'
'Ljavax/crypto/Mac;->getInstance'
'Ljavax/crypto/Mac;->getMacLength'
'Ljavax/crypto/Mac;->getProvider'
'Ljavax/crypto/Mac;->init'
'Ljavax/crypto/Mac;->reset'
'Ljavax/crypto/Mac;->update'
'Ljavax/crypto/SecretKeyFactory;->generateSecret'
'Ljavax/crypto/SecretKeyFactory;->getAlgorithm'
'Ljavax/crypto/SecretKeyFactory;->getInstance'
'Ljavax/crypto/SecretKeyFactory;->getKeySpec'
'Ljavax/crypto/SecretKeyFactory;->getProvider'
'Ljavax/crypto/SecretKeyFactory;->translateKey'
'Ljavax/net/ssl/KeyManagerFactory;->clone'
'Ljavax/net/ssl/KeyManagerFactory;->equals'
'Ljavax/net/ssl/KeyManagerFactory;->finalize'
'Ljavax/net/ssl/KeyManagerFactory;->getAlgorithm'
'Ljavax/net/ssl/KeyManagerFactory;->getClass'
'Ljavax/net/ssl/KeyManagerFactory;->getDefaultAlgorithm'
'Ljavax/net/ssl/KeyManagerFactory;->getInstance'
'Ljavax/net/ssl/KeyManagerFactory;->getKeyManagers'
'Ljavax/net/ssl/KeyManagerFactory;->getProvider'
'Ljavax/net/ssl/KeyManagerFactory;->hashCode'
'Ljavax/net/ssl/KeyManagerFactory;->init'
'Ljavax/net/ssl/KeyManagerFactory;->notify'
'Ljavax/net/ssl/KeyManagerFactory;->notifyAll'
'Ljavax/net/ssl/KeyManagerFactory;->toString'
'Ljavax/net/ssl/KeyManagerFactory;->wait'
'Ljavax/net/ssl/SSLContext;->clone'
'Ljavax/net/ssl/SSLContext;->createSSLEngine'
'Ljavax/net/ssl/SSLContext;->equals'
'Ljavax/net/ssl/SSLContext;->finalize'
'Ljavax/net/ssl/SSLContext;->getClass'
'Ljavax/net/ssl/SSLContext;->getClientSessionContext'
'Ljavax/net/ssl/SSLContext;->getDefault'
'Ljavax/net/ssl/SSLContext;->getDefaultSSLParameters'
'Ljavax/net/ssl/SSLContext;->getInstance'
'Ljavax/net/ssl/SSLContext;->getProtocol'
'Ljavax/net/ssl/SSLContext;->getProvider'
'Ljavax/net/ssl/SSLContext;->getServerSessionContext'
'Ljavax/net/ssl/SSLContext;->getServerSocketFactory'
'Ljavax/net/ssl/SSLContext;->getSocketFactory'
'Ljavax/net/ssl/SSLContext;->getSupportedSSLParameters'
'Ljavax/net/ssl/SSLContext;->hashCode'
'Ljavax/net/ssl/SSLContext;->init'
'Ljavax/net/ssl/SSLContext;->notify'
'Ljavax/net/ssl/SSLContext;->notifyAll'
'Ljavax/net/ssl/SSLContext;->setDefault'
'Ljavax/net/ssl/SSLContext;->toString'
'Ljavax/net/ssl/SSLContext;->wait'
'Ljavax/net/ssl/SSLEngine;->beginHandshake'
'Ljavax/net/ssl/SSLEngine;->clone'
'Ljavax/net/ssl/SSLEngine;->closeInbound'
'Ljavax/net/ssl/SSLEngine;->closeOutbound'
'Ljavax/net/ssl/SSLEngine;->equals'
'Ljavax/net/ssl/SSLEngine;->finalize'
'Ljavax/net/ssl/SSLEngine;->getApplicationProtocol'
'Ljavax/net/ssl/SSLEngine;->getClass'
'Ljavax/net/ssl/SSLEngine;->getDelegatedTask'
'Ljavax/net/ssl/SSLEngine;->getEnableSessionCreation'
'Ljavax/net/ssl/SSLEngine;->getEnabledCipherSuites'
'Ljavax/net/ssl/SSLEngine;->getEnabledProtocols'
'Ljavax/net/ssl/SSLEngine;->getHandshakeApplicationProtocol'
'Ljavax/net/ssl/SSLEngine;->getHandshakeApplicationProtocolSelector'
'Ljavax/net/ssl/SSLEngine;->getHandshakeSession'
'Ljavax/net/ssl/SSLEngine;->getHandshakeStatus'
'Ljavax/net/ssl/SSLEngine;->getNeedClientAuth'
'Ljavax/net/ssl/SSLEngine;->getPeerHost'
'Ljavax/net/ssl/SSLEngine;->getPeerPort'
'Ljavax/net/ssl/SSLEngine;->getSSLParameters'
'Ljavax/net/ssl/SSLEngine;->getSession'
'Ljavax/net/ssl/SSLEngine;->getSupportedCipherSuites'
'Ljavax/net/ssl/SSLEngine;->getSupportedProtocols'
'Ljavax/net/ssl/SSLEngine;->getUseClientMode'
'Ljavax/net/ssl/SSLEngine;->getWantClientAuth'
'Ljavax/net/ssl/SSLEngine;->hashCode'
'Ljavax/net/ssl/SSLEngine;->isInboundDone'
'Ljavax/net/ssl/SSLEngine;->isOutboundDone'
'Ljavax/net/ssl/SSLEngine;->notify'
'Ljavax/net/ssl/SSLEngine;->notifyAll'
'Ljavax/net/ssl/SSLEngine;->setEnableSessionCreation'
'Ljavax/net/ssl/SSLEngine;->setEnabledCipherSuites'
'Ljavax/net/ssl/SSLEngine;->setEnabledProtocols'
'Ljavax/net/ssl/SSLEngine;->setHandshakeApplicationProtocolSelector'
'Ljavax/net/ssl/SSLEngine;->setNeedClientAuth'
'Ljavax/net/ssl/SSLEngine;->setSSLParameters'
'Ljavax/net/ssl/SSLEngine;->setUseClientMode'
'Ljavax/net/ssl/SSLEngine;->setWantClientAuth'
'Ljavax/net/ssl/SSLEngine;->toString'
'Ljavax/net/ssl/SSLEngine;->unwrap'
'Ljavax/net/ssl/SSLEngine;->wait'
'Ljavax/net/ssl/SSLEngine;->wrap'
'Ljavax/net/ssl/SSLSocket;->addHandshakeCompletedListener'
'Ljavax/net/ssl/SSLSocket;->bind'
'Ljavax/net/ssl/SSLSocket;->clone'
'Ljavax/net/ssl/SSLSocket;->close'
'Ljavax/net/ssl/SSLSocket;->connect'
'Ljavax/net/ssl/SSLSocket;->equals'
'Ljavax/net/ssl/SSLSocket;->finalize'
'Ljavax/net/ssl/SSLSocket;->getApplicationProtocol'
'Ljavax/net/ssl/SSLSocket;->getChannel'
'Ljavax/net/ssl/SSLSocket;->getClass'
'Ljavax/net/ssl/SSLSocket;->getEnableSessionCreation'
'Ljavax/net/ssl/SSLSocket;->getEnabledCipherSuites'
'Ljavax/net/ssl/SSLSocket;->getEnabledProtocols'
'Ljavax/net/ssl/SSLSocket;->getHandshakeApplicationProtocol'
'Ljavax/net/ssl/SSLSocket;->getHandshakeApplicationProtocolSelector'
'Ljavax/net/ssl/SSLSocket;->getHandshakeSession'
'Ljavax/net/ssl/SSLSocket;->getInetAddress'
'Ljavax/net/ssl/SSLSocket;->getInputStream'
'Ljavax/net/ssl/SSLSocket;->getKeepAlive'
'Ljavax/net/ssl/SSLSocket;->getLocalAddress'
'Ljavax/net/ssl/SSLSocket;->getLocalPort'
'Ljavax/net/ssl/SSLSocket;->getLocalSocketAddress'
'Ljavax/net/ssl/SSLSocket;->getNeedClientAuth'
'Ljavax/net/ssl/SSLSocket;->getOOBInline'
'Ljavax/net/ssl/SSLSocket;->getOption'
'Ljavax/net/ssl/SSLSocket;->getOutputStream'
'Ljavax/net/ssl/SSLSocket;->getPort'
'Ljavax/net/ssl/SSLSocket;->getReceiveBufferSize'
'Ljavax/net/ssl/SSLSocket;->getRemoteSocketAddress'
'Ljavax/net/ssl/SSLSocket;->getReuseAddress'
'Ljavax/net/ssl/SSLSocket;->getSSLParameters'
'Ljavax/net/ssl/SSLSocket;->getSendBufferSize'
'Ljavax/net/ssl/SSLSocket;->getSession'
'Ljavax/net/ssl/SSLSocket;->getSoLinger'
'Ljavax/net/ssl/SSLSocket;->getSoTimeout'
'Ljavax/net/ssl/SSLSocket;->getSupportedCipherSuites'
'Ljavax/net/ssl/SSLSocket;->getSupportedProtocols'
'Ljavax/net/ssl/SSLSocket;->getTcpNoDelay'
'Ljavax/net/ssl/SSLSocket;->getTrafficClass'
'Ljavax/net/ssl/SSLSocket;->getUseClientMode'
'Ljavax/net/ssl/SSLSocket;->getWantClientAuth'
'Ljavax/net/ssl/SSLSocket;->hashCode'
'Ljavax/net/ssl/SSLSocket;->isBound'
'Ljavax/net/ssl/SSLSocket;->isClosed'
'Ljavax/net/ssl/SSLSocket;->isConnected'
'Ljavax/net/ssl/SSLSocket;->isInputShutdown'
'Ljavax/net/ssl/SSLSocket;->isOutputShutdown'
'Ljavax/net/ssl/SSLSocket;->notify'
'Ljavax/net/ssl/SSLSocket;->notifyAll'
'Ljavax/net/ssl/SSLSocket;->removeHandshakeCompletedListener'
'Ljavax/net/ssl/SSLSocket;->sendUrgentData'
'Ljavax/net/ssl/SSLSocket;->setEnableSessionCreation'
'Ljavax/net/ssl/SSLSocket;->setEnabledCipherSuites'
'Ljavax/net/ssl/SSLSocket;->setEnabledProtocols'
'Ljavax/net/ssl/SSLSocket;->setHandshakeApplicationProtocolSelector'
'Ljavax/net/ssl/SSLSocket;->setKeepAlive'
'Ljavax/net/ssl/SSLSocket;->setNeedClientAuth'
'Ljavax/net/ssl/SSLSocket;->setOOBInline'
'Ljavax/net/ssl/SSLSocket;->setOption'
'Ljavax/net/ssl/SSLSocket;->setPerformancePreferences'
'Ljavax/net/ssl/SSLSocket;->setReceiveBufferSize'
'Ljavax/net/ssl/SSLSocket;->setReuseAddress'
'Ljavax/net/ssl/SSLSocket;->setSSLParameters'
'Ljavax/net/ssl/SSLSocket;->setSendBufferSize'
'Ljavax/net/ssl/SSLSocket;->setSoLinger'
'Ljavax/net/ssl/SSLSocket;->setSoTimeout'
'Ljavax/net/ssl/SSLSocket;->setSocketImplFactory'
'Ljavax/net/ssl/SSLSocket;->setTcpNoDelay'
'Ljavax/net/ssl/SSLSocket;->setTrafficClass'
'Ljavax/net/ssl/SSLSocket;->setUseClientMode'
'Ljavax/net/ssl/SSLSocket;->setWantClientAuth'
'Ljavax/net/ssl/SSLSocket;->shutdownInput'
'Ljavax/net/ssl/SSLSocket;->shutdownOutput'
'Ljavax/net/ssl/SSLSocket;->startHandshake'
'Ljavax/net/ssl/SSLSocket;->supportedOptions'
'Ljavax/net/ssl/SSLSocket;->toString'
'Ljavax/net/ssl/SSLSocket;->toString'
'Ljavax/net/ssl/SSLSocket;->toString'
'Ljavax/net/ssl/SSLSocket;->wait'
'Ljavax/net/ssl/TrustManagerFactory;->clone'
'Ljavax/net/ssl/TrustManagerFactory;->equals'
'Ljavax/net/ssl/TrustManagerFactory;->finalize'
'Ljavax/net/ssl/TrustManagerFactory;->getAlgorithm'
'Ljavax/net/ssl/TrustManagerFactory;->getClass'
'Ljavax/net/ssl/TrustManagerFactory;->getDefaultAlgorithm'
'Ljavax/net/ssl/TrustManagerFactory;->getInstance'
'Ljavax/net/ssl/TrustManagerFactory;->getProvider'
'Ljavax/net/ssl/TrustManagerFactory;->getTrustManagers'
'Ljavax/net/ssl/TrustManagerFactory;->hashCode'
'Ljavax/net/ssl/TrustManagerFactory;->init'
'Ljavax/net/ssl/TrustManagerFactory;->notify'
'Ljavax/net/ssl/TrustManagerFactory;->notifyAll'
'Ljavax/net/ssl/TrustManagerFactory;->toString'
'Ljavax/net/ssl/TrustManagerFactory;->wait'
'Lorg/apache/http/client/HttpClient;->execute'
'Lorg/apache/http/client/entity/UrlEncodedFormEntity;-><init>'
'Lorg/apache/http/client/methods/HttpGet;-><init>'
'Lorg/apache/http/client/methods/HttpPost;-><init>'
'Lorg/apache/http/client/methods/HttpPost;->setEntity'
'Lorg/apache/http/impl/client/DefaultHttpClient;-><init>'
'Lorg/apache/http/message/BasicNameValuePair;-><init>'